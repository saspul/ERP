using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Text;
using Newtonsoft.Json;
using System.IO;
using System.Web.Script.Serialization;
using System.Web.Services;
using System.Globalization;
using BL_Compzit;
using BL_Compzit.BusineesLayer_HCM;
using BL_Compzit.BusinessLayer_HCM;
using CL_Compzit;
using EL_Compzit;
using EL_Compzit.Entity_Layer_HCM;
using EL_Compzit.EntityLayer_HCM;
using System.Data;
using System.Text;
using System.Web.Services;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.html.simpleparser;





public partial class HCM_HCM_Master_hcm_PayrollSystem_hcm_Monthly_Salary_statement_hcm_Monthly_Salary_Statement_print : System.Web.UI.Page
{
    

    protected void Page_Load(object sender, EventArgs e)
    {
        if (Request.UrlReferrer != null)
        {
            string previousPageUrl = Request.UrlReferrer.AbsoluteUri;
            string previousPageName = System.IO.Path.GetFileName(Request.UrlReferrer.AbsolutePath);
            if (previousPageName == "hcm_Monthly_Salary_Statement.aspx" || previousPageName == "hcm_Monthly_Salary_statement_print.aspx" || previousPageName == "hcm_Monthly_Salary_statement.aspx" || previousPageName == "hcm_Monthly_Salary_Process_List.aspx")
            {
                clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
                clsEntityMonthlySalaryStatement objEntityIntervewProcess = new clsEntityMonthlySalaryStatement();
                if (Session["CORPOFFICEID"] != null)
                {
                    objEntityIntervewProcess.CorpID = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
                }
                else if (Session["CORPOFFICEID"] == null)
                {
                    Response.Redirect("/Default.aspx");
                }
                if (Session["ORGID"] != null)
                {
                    objEntityIntervewProcess.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
                }
                else if (Session["ORGID"] == null)
                {
                    Response.Redirect("/Default.aspx");
                }
                clsBusinessLayer objBusinessLayer = new clsBusinessLayer();
                clsCommonLibrary.CORP_GLOBAL[] arrEnumer = {
                                                            clsCommonLibrary.CORP_GLOBAL.PAYROLL_INDIVIDUAL_ROUND
                                                           };
                DataTable dtCorpDetail = new DataTable();
                dtCorpDetail = objBusinessLayer.LoadGlobalDetail(arrEnumer, objEntityIntervewProcess.CorpID);
                if (dtCorpDetail.Rows.Count > 0)
                {
                    HiddenFieldIndividualRound.Value = dtCorpDetail.Rows[0]["PAYROLL_INDIVIDUAL_ROUND"].ToString();
                }


                //0041  
                if (Session["SALARPRS"] != null && previousPageName == "hcm_Monthly_Salary_Process_List.aspx")
                {
                    clsCommonLibrary objCommon = new clsCommonLibrary();
                    var strSALARPRS = Session["SALARPRS"];
                    string[] StrProsId = strSALARPRS.ToString().Split('~');

                    ddlpaymentmode.Visible = false;
                    labelpaymode.Visible = false;

                    if (Convert.ToInt32(StrProsId[0]) == 1)
                    {

                        objEntityIntervewProcess.PendFinshId = 2;


                    }

                    else
                    {
                        objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProsId[0]);
                    }
                    // objEntityIntervewProcess.PendFinshId = 1;

                    objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProsId[1]);
                    objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProsId[2]);

                    objEntityIntervewProcess.Month = Convert.ToInt32(StrProsId[4]);
                    objEntityIntervewProcess.Year = Convert.ToInt32(StrProsId[5]);
                    string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
                    headMnthYear.InnerHtml = monthName + " " + objEntityIntervewProcess.Year;
                    DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
                    DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);
                    ConvertDataTabletoHTML(dtorglist, dtorglistDept, objEntityIntervewProcess);
                    HiddenFieldShowAdd.Value = "0";
                    HiddenFieldShowDed.Value = "0";
                    HiddenFieldSalaryProcess.Value = "1";
                    sta_print.Visible = false;
                    //  list_b.Visible = false;
                    list_b.HRef = previousPageUrl;
                }

                else if (Session["SALARPRSS"] != null && HiddenFieldSalaryProcess.Value == "")

                //END
                {
                    var strSALARPRSS = Session["SALARPRSS"];
                    string[] StrProssId = strSALARPRSS.ToString().Split('~');
                    objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProssId[0]);
                    objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProssId[1]);
                    objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProssId[2]);
                    objEntityIntervewProcess.Month = Convert.ToInt32(StrProssId[3]);
                    objEntityIntervewProcess.Year = Convert.ToInt32(StrProssId[4]);
                    string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
                    headMnthYear.InnerHtml = monthName + " " + objEntityIntervewProcess.Year;
                    DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
                    DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);
                    ConvertDataTableToHTMLSearch(dtorglist, dtorglistDept, objEntityIntervewProcess);
                    HiddenFieldShowAdd.Value = "0";
                    HiddenFieldShowDed.Value = "0";
                }
            }
        }
    }
    protected void btnSearch_Click(object sender, EventArgs e)
    {



        clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
        clsEntityMonthlySalaryStatement objEntityIntervewProcess = new clsEntityMonthlySalaryStatement();
        if (Session["CORPOFFICEID"] != null)
        {
            objEntityIntervewProcess.CorpID = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
        }
        else if (Session["CORPOFFICEID"] == null)
        {
            Response.Redirect("/Default.aspx");
        }
        if (Session["ORGID"] != null)
        {
            objEntityIntervewProcess.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
        }
        else if (Session["ORGID"] == null)
        {
            Response.Redirect("/Default.aspx");
        }
        clsBusinessLayer objBusinessLayer = new clsBusinessLayer();
        clsCommonLibrary.CORP_GLOBAL[] arrEnumer = {
                                                            clsCommonLibrary.CORP_GLOBAL.PAYROLL_INDIVIDUAL_ROUND
                                                           };
        DataTable dtCorpDetail = new DataTable();
        dtCorpDetail = objBusinessLayer.LoadGlobalDetail(arrEnumer, objEntityIntervewProcess.CorpID);
        if (dtCorpDetail.Rows.Count > 0)
        {
            HiddenFieldIndividualRound.Value = dtCorpDetail.Rows[0]["PAYROLL_INDIVIDUAL_ROUND"].ToString();
        }

        //0041

        Hiddenddlpay.Value = ddlpaymentmode.SelectedItem.Value;

        if (Session["SALARPRS"] != null && HiddenFieldSalaryProcess.Value == "1")
        {
            clsCommonLibrary objCommon = new clsCommonLibrary();
            var strSALARPRS = Session["SALARPRS"];
            string[] StrProsId = strSALARPRS.ToString().Split('~');
            clsBusinessLayerSalaryStatement objSalarySatement = new clsBusinessLayerSalaryStatement();
            clsEntityLayerSalaryStatement objEntitySalry = new clsEntityLayerSalaryStatement();


            if (Convert.ToInt32(StrProsId[0]) == 1)
            {

                objEntityIntervewProcess.PendFinshId = 2;


            }

            else
            {
                objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProsId[0]);
            }
            // objEntityIntervewProcess.PendFinshId = 1;

            objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProsId[1]);
            objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProsId[2]);
            objEntityIntervewProcess.Month = Convert.ToInt32(StrProsId[4]);
            objEntityIntervewProcess.Year = Convert.ToInt32(StrProsId[5]);
            string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
            headMnthYear.InnerHtml = monthName + " " + objEntityIntervewProcess.Year;
            DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
            DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);
            ConvertDataTabletoHTML(dtorglist, dtorglistDept, objEntityIntervewProcess);
            HiddenFieldShowAdd.Value = "0";
            HiddenFieldShowDed.Value = "0";


        }


        else if (Session["SALARPRSS"] != null && HiddenFieldSalaryProcess.Value == "")
        {
            //end
            var strSALARPRSS = Session["SALARPRSS"];
            string[] StrProssId = strSALARPRSS.ToString().Split('~');
            objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProssId[0]);
            objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProssId[1]);
            objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProssId[2]);
            objEntityIntervewProcess.Month = Convert.ToInt32(StrProssId[3]);
            objEntityIntervewProcess.Year = Convert.ToInt32(StrProssId[4]);
            string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
            headMnthYear.InnerHtml = monthName + " " + objEntityIntervewProcess.Year;
            DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
            DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);

            //0041

            int PayMode = Convert.ToInt32(ddlpaymentmode.SelectedItem.Value);
            DataView dv = new DataView(dtorglist);
            DataTable dt = new DataTable();


            if (PayMode == 0)
            {

                dv.RowFilter = "PAYMENT_METHOD = 0";
                dt.Merge(dv.ToTable());

            }
            if (PayMode == 1)
            {

                dv.RowFilter = "PAYMENT_METHOD = 1";
                dt.Merge(dv.ToTable());
            }
            if (PayMode == 2)
            {


                dt.Merge(dv.ToTable());

            }


            DataView dvRes = new DataView(dt);
            dvRes.RowFilter = "PAGE = 1";
            DataView dvLs = new DataView(dt);
            dvLs.RowFilter = "PAGE = 2";
            DataView dvEnds = new DataView(dt);
            dvEnds.RowFilter = "PAGE = 3";


            DataTable dtorgDeptlist = new DataTable();
            dtorgDeptlist.Columns.Add("CPRDEPT_ID", typeof(string));
            dtorgDeptlist.Columns.Add("CPRDEPT_NAME", typeof(string));
            dtorgDeptlist.Columns.Add("PAGE", typeof(string));
            dtorgDeptlist.Columns.Add("SUM_BASIC", typeof(decimal));
            dtorgDeptlist.Columns.Add("TOTAL_ADD", typeof(decimal));
            dtorgDeptlist.Columns.Add("TOTAL_DED", typeof(decimal));
            dtorgDeptlist.Columns.Add("NET_AMNT", typeof(decimal));
            dtorgDeptlist.Columns.Add("CNT", typeof(string));
            decimal sum_basic = 0; decimal total_add = 0; decimal total_ded = 0; decimal net_amnt = 0;
            decimal Sum_basic = 0; decimal Total_add = 0; decimal Total_ded = 0; decimal Net_amnt = 0;
            decimal Sum_Basic = 0; decimal Total_Add = 0; decimal Total_Ded = 0; decimal Net_Amnt = 0;
            if (dvRes.Count > 0)
            {
                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvRes.Count; i++)
                {

                    sum_basic = sum_basic + Convert.ToDecimal(dvRes[i]["PRSD_BASICPAY"].ToString());
                    total_add = total_add + Convert.ToDecimal(dvRes[i]["TOTAL_ADD"].ToString());
                    total_ded = total_ded + Convert.ToDecimal(dvRes[i]["TOTAL_DED"].ToString());
                    net_amnt = net_amnt + Convert.ToDecimal(dvRes[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "1";


                row["SUM_BASIC"] = sum_basic;
                row["TOTAL_ADD"] = total_add;
                row["TOTAL_DED"] = total_ded;
                row["NET_AMNT"] = net_amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);
            }

            if (dvLs.Count > 0)
            {

                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvLs.Count; i++)
                {

                    Sum_basic = Sum_basic + Convert.ToDecimal(dvLs[i]["PRSD_BASICPAY"].ToString());
                    Total_add = Total_add + Convert.ToDecimal(dvLs[i]["TOTAL_ADD"].ToString());
                    Total_ded = Total_ded + Convert.ToDecimal(dvLs[i]["TOTAL_DED"].ToString());
                    Net_amnt = Net_amnt + Convert.ToDecimal(dvLs[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "2";


                row["SUM_BASIC"] = Sum_basic;
                row["TOTAL_ADD"] = Total_add;
                row["TOTAL_DED"] = Total_ded;
                row["NET_AMNT"] = Net_amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);

            }


            if (dvEnds.Count > 0)
            {


                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvEnds.Count; i++)
                {

                    Sum_Basic = Sum_Basic + Convert.ToDecimal(dvEnds[i]["PRSD_BASICPAY"].ToString());
                    Total_Add = Total_Add + Convert.ToDecimal(dvEnds[i]["TOTAL_ADD"].ToString());
                    Total_Ded = Total_Ded + Convert.ToDecimal(dvEnds[i]["TOTAL_DED"].ToString());
                    Net_Amnt = Net_Amnt + Convert.ToDecimal(dvEnds[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "3";


                row["SUM_BASIC"] = Sum_Basic;
                row["TOTAL_ADD"] = Total_Add;
                row["TOTAL_DED"] = Total_Ded;
                row["NET_AMNT"] = Net_Amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);


            }




            if (PayMode == 2)
            {


                ConvertDataTableToHTMLSearch(dt, dtorglistDept, objEntityIntervewProcess);


            }

            else
            {
                ConvertDataTableToHTML(dt, dtorgDeptlist, objEntityIntervewProcess);
            }
            HiddenFieldShowAdd.Value = "0";
            HiddenFieldShowDed.Value = "0";

            if (cbxAdd.Checked == true)
            {
                HiddenFieldShowAdd.Value = "1";
            }
            if (cbxDed.Checked == true)
            {
                HiddenFieldShowDed.Value = "1";
            }
        }
    }
    public void ConvertDataTableToHTMLSearch(DataTable dt, DataTable dtDept, clsEntityMonthlySalaryStatement objEntityIntervewProcess)
    {
        clsBusinessLayer objBusiness = new clsBusinessLayer();




        if (dt.Rows.Count == 0)
        {

            divMSP.InnerHtml = "";
            divLSP.InnerHtml = "";
            Statmnt_Sumry.InnerHtml = "";
            divESP.InnerHtml = "";
            divEmpCnt.InnerHtml = "";
            divNetSummary.InnerHtml = "";
            divSalary.InnerHtml = "";
            nodata.Visible = true;
            headMnthYear.Visible = false;
            sta_print.Visible = false;
           // list_b.Visible = false;
        }

        else
        {
            sta_print.Visible = true;


            clsEntityCommon objEntityCommon = new clsEntityCommon();
            objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
            clsCommonLibrary objCommon = new clsCommonLibrary();
            clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
            int intShowAdd = 0, intShowDed = 0;
            if (cbxAdd.Checked == true)
                intShowAdd = 1;
            if (cbxDed.Checked == true)
                intShowDed = 1;
            nodata.Visible = false;
            headMnthYear.Visible = true;


            //0041

            DataView dv = new DataView(dt);
            DataTable dtAll = new DataTable();
            DataTable dtbank = new DataTable();
            DataTable dtCash = new DataTable();



            dv.RowFilter = "PAYMENT_METHOD = 0";
            dtbank.Merge(dv.ToTable());

            dv.RowFilter = "PAYMENT_METHOD = 1";
            dtCash.Merge(dv.ToTable());


            DataView dvRes = new DataView(dtbank);
            dvRes.RowFilter = "PAGE = 1";
            DataView dvLs = new DataView(dtbank);
            dvLs.RowFilter = "PAGE = 2";
            DataView dvEnds = new DataView(dtbank);
            dvEnds.RowFilter = "PAGE = 3";
            DataView dvReslt = new DataView(dtCash);
            dvReslt.RowFilter = "PAGE = 1";
            DataView dvLsp = new DataView(dtCash);
            dvLsp.RowFilter = "PAGE = 2";
            DataView dvEsp = new DataView(dtCash);
            dvEsp.RowFilter = "PAGE = 3";

            DataTable dtorgDeptlistbank = new DataTable();
            dtorgDeptlistbank.Columns.Add("CPRDEPT_ID", typeof(string));
            dtorgDeptlistbank.Columns.Add("CPRDEPT_NAME", typeof(string));
            dtorgDeptlistbank.Columns.Add("PAGE", typeof(string));
            dtorgDeptlistbank.Columns.Add("SUM_BASIC", typeof(decimal));
            dtorgDeptlistbank.Columns.Add("TOTAL_ADD", typeof(decimal));
            dtorgDeptlistbank.Columns.Add("TOTAL_DED", typeof(decimal));
            dtorgDeptlistbank.Columns.Add("NET_AMNT", typeof(decimal));
            dtorgDeptlistbank.Columns.Add("CNT", typeof(string));
            decimal sum_basic = 0; decimal total_add = 0; decimal total_ded = 0; decimal net_amnt = 0;
            decimal Sum_basic = 0; decimal Total_add = 0; decimal Total_ded = 0; decimal Net_amnt = 0;
            decimal Sum_Basic = 0; decimal Total_Add = 0; decimal Total_Ded = 0; decimal Net_Amnt = 0;

            if (dvRes.Count > 0)
            {
                DataRow row = dtorgDeptlistbank.NewRow();
                for (int i = 0; i < dvRes.Count; i++)
                {

                    sum_basic = sum_basic + Convert.ToDecimal(dvRes[i]["PRSD_BASICPAY"].ToString());
                    total_add = total_add + Convert.ToDecimal(dvRes[i]["TOTAL_ADD"].ToString());
                    total_ded = total_ded + Convert.ToDecimal(dvRes[i]["TOTAL_DED"].ToString());
                    net_amnt = net_amnt + Convert.ToDecimal(dvRes[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "1";


                row["SUM_BASIC"] = sum_basic;
                row["TOTAL_ADD"] = total_add;
                row["TOTAL_DED"] = total_ded;
                row["NET_AMNT"] = net_amnt;

                row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

                dtorgDeptlistbank.Rows.Add(row);
            }

            if (dvLs.Count > 0)
            {

                DataRow row = dtorgDeptlistbank.NewRow();
                for (int i = 0; i < dvLs.Count; i++)
                {

                    Sum_basic = Sum_basic + Convert.ToDecimal(dvLs[i]["PRSD_BASICPAY"].ToString());
                    Total_add = Total_add + Convert.ToDecimal(dvLs[i]["TOTAL_ADD"].ToString());
                    Total_ded = Total_ded + Convert.ToDecimal(dvLs[i]["TOTAL_DED"].ToString());
                    Net_amnt = Net_amnt + Convert.ToDecimal(dvLs[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "2";


                row["SUM_BASIC"] = Sum_basic;
                row["TOTAL_ADD"] = Total_add;
                row["TOTAL_DED"] = Total_ded;
                row["NET_AMNT"] = Net_amnt;

                row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

                dtorgDeptlistbank.Rows.Add(row);

            }


            if (dvEnds.Count > 0)
            {


                DataRow row = dtorgDeptlistbank.NewRow();
                for (int i = 0; i < dvEnds.Count; i++)
                {

                    Sum_Basic = Sum_Basic + Convert.ToDecimal(dvEnds[i]["PRSD_BASICPAY"].ToString());
                    Total_Add = Total_Add + Convert.ToDecimal(dvEnds[i]["TOTAL_ADD"].ToString());
                    Total_Ded = Total_Ded + Convert.ToDecimal(dvEnds[i]["TOTAL_DED"].ToString());
                    Net_Amnt = Net_Amnt + Convert.ToDecimal(dvEnds[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "3";


                row["SUM_BASIC"] = Sum_Basic;
                row["TOTAL_ADD"] = Total_Add;
                row["TOTAL_DED"] = Total_Ded;
                row["NET_AMNT"] = Net_Amnt;

                row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

                dtorgDeptlistbank.Rows.Add(row);


            }
            DataTable dtorgDeptlistcash = new DataTable();
            dtorgDeptlistcash.Columns.Add("CPRDEPT_ID", typeof(string));
            dtorgDeptlistcash.Columns.Add("CPRDEPT_NAME", typeof(string));
            dtorgDeptlistcash.Columns.Add("PAGE", typeof(string));
            dtorgDeptlistcash.Columns.Add("SUM_BASIC", typeof(decimal));
            dtorgDeptlistcash.Columns.Add("TOTAL_ADD", typeof(decimal));
            dtorgDeptlistcash.Columns.Add("TOTAL_DED", typeof(decimal));
            dtorgDeptlistcash.Columns.Add("NET_AMNT", typeof(decimal));
            dtorgDeptlistcash.Columns.Add("CNT", typeof(string));

            decimal sumbasic = 0; decimal totaladd = 0; decimal totalded = 0; decimal netamnt = 0;
            decimal Sumbasic = 0; decimal Totaladd = 0; decimal Totalded = 0; decimal Netamnt = 0;
            decimal SumBasic = 0; decimal TotalAdd = 0; decimal TotalDed = 0; decimal NetAmnt = 0;



            if (dvReslt.Count > 0)
            {
                DataRow row = dtorgDeptlistcash.NewRow();
                for (int i = 0; i < dvReslt.Count; i++)
                {

                    sumbasic = sumbasic + Convert.ToDecimal(dvReslt[i]["PRSD_BASICPAY"].ToString());
                    totaladd = totaladd + Convert.ToDecimal(dvReslt[i]["TOTAL_ADD"].ToString());
                    totalded = totalded + Convert.ToDecimal(dvReslt[i]["TOTAL_DED"].ToString());
                    netamnt = netamnt + Convert.ToDecimal(dvReslt[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "1";


                row["SUM_BASIC"] = sumbasic;
                row["TOTAL_ADD"] = totaladd;
                row["TOTAL_DED"] = totalded;
                row["NET_AMNT"] = netamnt;

                row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

                dtorgDeptlistcash.Rows.Add(row);
            }

            if (dvLsp.Count > 0)
            {

                DataRow row = dtorgDeptlistcash.NewRow();
                for (int i = 0; i < dvLsp.Count; i++)
                {

                    Sumbasic = Sumbasic + Convert.ToDecimal(dvLsp[i]["PRSD_BASICPAY"].ToString());
                    Totaladd = Totaladd + Convert.ToDecimal(dvLsp[i]["TOTAL_ADD"].ToString());
                    Totalded = Totalded + Convert.ToDecimal(dvLsp[i]["TOTAL_DED"].ToString());
                    Netamnt = Netamnt + Convert.ToDecimal(dvLsp[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "2";


                row["SUM_BASIC"] = Sumbasic;
                row["TOTAL_ADD"] = Totaladd;
                row["TOTAL_DED"] = Totalded;
                row["NET_AMNT"] = Netamnt;

                row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

                dtorgDeptlistcash.Rows.Add(row);

            }


            if (dvEsp.Count > 0)
            {


                DataRow row = dtorgDeptlistcash.NewRow();
                for (int i = 0; i < dvEsp.Count; i++)
                {

                    SumBasic = SumBasic + Convert.ToDecimal(dvEsp[i]["PRSD_BASICPAY"].ToString());
                    TotalAdd = TotalAdd + Convert.ToDecimal(dvEsp[i]["TOTAL_ADD"].ToString());
                    TotalDed = TotalDed + Convert.ToDecimal(dvEsp[i]["TOTAL_DED"].ToString());
                    NetAmnt = NetAmnt + Convert.ToDecimal(dvEsp[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "3";


                row["SUM_BASIC"] = SumBasic;
                row["TOTAL_ADD"] = TotalAdd;
                row["TOTAL_DED"] = TotalDed;
                row["NET_AMNT"] = NetAmnt;

                row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

                dtorgDeptlistcash.Rows.Add(row);


            }

            //0041


          


            string strMSPdeptCntbank = ""; string strLSPdeptCntbank = ""; string strESPdeptCntbank = ""; int MSPcntbank = 0;
            int LSPcntbank = 0; int ESPcntbank = 0;


            string strMSPdeptCntcash = ""; string strLSPdeptCntcash = ""; string strESPdeptCntcash = ""; int MSPcntcash = 0;
            int LSPcntcash = 0; int ESPcntcash = 0;
            //end
            string strHtmlDptHeadC = ""; string strHtmlNetSum1 = ""; string strHtmlNetSum2 = "";

            string strHtmlDptHead = "";

            string strHtml1 = "";
            string strHtml2 = "";
            string strMSP1 = "";
            string strMSP2 = "";
            string strMSPconf1 = "";
            string strMSPconf2 = "";
            string strMSPclos2 = "";
            string strMSPclos1 = "";
            string strMSPpaid1 = "";
            string strMSPpaid2 = "";
            string strLSP1 = "";
            string strLSP2 = "";
            string strLSPsave1 = "";
            string strLSPsave2 = "";
            string strLSPconf1 = "";
            string strLSPconf2 = "";

            string strLSPpaid1 = "";
            string strLSPpaid2 = "";

            string strESP1 = "";
            string strESP2 = "";
            string strESPsave1 = "";
            string strESPsave2 = "";
            string strESPconf1 = "";
            string strESPconf2 = "";
            string strESPclos2 = "";
            string strESPclos1 = "";

            string strESPpaid1 = "";
            string strESPpaid2 = "";

            DataTable dtdpt = new DataTable();
            dtdpt = dtDept.Copy();
            DataTable dtd = new DataTable();
            dtd = dt.Copy();
            for (int p = 0; p < 3; p++)
            {


                dt.Clear();
                dtDept.Clear();

                if (p == 0)
                {

                    dtDept = dtorgDeptlistbank;
                    dt = dtbank;
                }
                if (p == 1)
                {

                    dtDept = dtorgDeptlistcash;
                    dt = dtCash;
                }
                if (p == 2)
                {

                    dtDept = dtdpt;
                    dt = dtd;
                }

                int daysInm = DateTime.DaysInMonth(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month);
                string strMSPsave = "", strMSPconf = "", strMSPpaid = "", strMSPclos = "", strMSP = "";
                string strLSPsave = "", strLSPconf = "", strLSPpaid = "", strLSPclos = "", strLSP = "";
                string strESPsave = "", strESPconf = "", strESPpaid = "", strESPclos = "", strESP = "";
                string strNormalOtRate = "", strHolidayOtRate = "", strCrnAbbr = "";

                int flagMSPbank = 0, flagMSPcash = 0, flagLSPbank = 0, flagLSPcash = 0, flagESPbank = 0, flagESPcash = 0;

                decimal decMSPproBasic = 0, decMSPproBasicSave = 0, decMSPproBasicConf = 0, decMSPproBasicPaid = 0, decMSPproBasicClos = 0;
                decimal decMSPadd = 0, decMSPaddSave = 0, decMSPaddConf = 0, decMSPaddPaid = 0, decMSPaddClos = 0;
                decimal decMSPded = 0, decMSPdedSave = 0, decMSPdedConf = 0, decMSPdedPaid = 0, decMSPdedClos = 0;
                decimal decMSPnOtH = 0, decMSPnOtHSave = 0, decMSPnOtHConf = 0, decMSPnOtHPaid = 0, decMSPnOtHClos = 0;
                decimal decMSPnOtAmt = 0, decMSPnOtAmtSave = 0, decMSPnOtAmtConf = 0, decMSPnOtAmtPaid = 0, decMSPnOtAmtClos = 0;
                decimal decMSPhOtH = 0, decMSPhOtHSave = 0, decMSPhOtHConf = 0, decMSPhOtHPaid = 0, decMSPhOtHClos = 0;
                decimal decMSPhOtAmt = 0, decMSPhOtAmtSave = 0, decMSPhOtAmtConf = 0, decMSPhOtAmtPaid = 0, decMSPhOtAmtClos = 0;
                decimal decMSPnetOT = 0, decMSPnetOTSave = 0, decMSPnetOTConf = 0, decMSPnetOTPaid = 0, decMSPnetOTClos = 0;
                decimal decMSPnetAmnt = 0, decMSPnetAmntSave = 0, decMSPnetAmntConf = 0, decMSPnetAmntPaid = 0, decMSPnetAmntClos = 0;

                decimal decLSPproBasic = 0, decLSPproBasicSave = 0, decLSPproBasicConf = 0, decLSPproBasicPaid = 0, decLSPproBasicClos = 0;
                decimal decLSPtcktAmnt = 0, decLSPtcktAmntSave = 0, decLSPtcktAmntConf = 0, decLSPtcktAmntPaid = 0, decLSPtcktAmntClos = 0;
                decimal decLSPadd = 0, decLSPaddSave = 0, decLSPaddConf = 0, decLSPaddPaid = 0, decLSPaddClos = 0;
                decimal decLSPded = 0, decLSPdedSave = 0, decLSPdedConf = 0, decLSPdedPaid = 0, decLSPdedClos = 0;
                decimal decLSPleavDays = 0, decLSPleavDaysSave = 0, decLSPleavDaysConf = 0, decLSPleavDaysPaid = 0, decLSPleavDaysClos = 0;
                decimal decLSPleavSal = 0, decLSPleavSalSave = 0, decLSPleavSalConf = 0, decLSPleavSalPaid = 0, decLSPleavSalClos = 0;
                decimal decLSPprevSal = 0, decLSPprevSalSave = 0, decLSPprevSalConf = 0, decLSPprevSalPaid = 0, decLSPprevSalClos = 0;
                decimal decLSPnetAmnt = 0, decLSPnetAmntSave = 0, decLSPnetAmntConf = 0, decLSPnetAmntPaid = 0, decLSPnetAmntClos = 0;
                decimal decLSPnOtH = 0, decLSPnOtHSave = 0, decLSPnOtHConf = 0, decLSPnOtHPaid = 0, decLSPnOtHClos = 0;
                decimal decLSPnOtAmt = 0, decLSPnOtAmtSave = 0, decLSPnOtAmtConf = 0, decLSPnOtAmtPaid = 0, decLSPnOtAmtClos = 0;
                decimal decLSPhOtH = 0, decLSPhOtHSave = 0, decLSPhOtHConf = 0, decLSPhOtHPaid = 0, decLSPhOtHClos = 0;
                decimal decLSPhOtAmt = 0, decLSPhOtAmtSave = 0, decLSPhOtAmtConf = 0, decLSPhOtAmtPaid = 0, decLSPhOtAmtClos = 0;
                decimal decLSPnetOT = 0, decLSPnetOTSave = 0, decLSPnetOTConf = 0, decLSPnetOTPaid = 0, decLSPnetOTClos = 0;

                decimal decESPproBasic = 0, decESPproBasicSave = 0, decESPproBasicConf = 0, decESPproBasicPaid = 0, decESPproBasicClos = 0;
                decimal decESPtcktAmnt = 0, decESPtcktAmntSave = 0, decESPtcktAmntConf = 0, decESPtcktAmntPaid = 0, decESPtcktAmntClos = 0;
                decimal decESPadd = 0, decESPaddSave = 0, decESPaddConf = 0, decESPaddPaid = 0, decESPaddClos = 0;
                decimal decESPded = 0, decESPdedSave = 0, decESPdedConf = 0, decESPdedPaid = 0, decESPdedClos = 0;
                decimal decESPleavDays = 0, decESPleavDaysSave = 0, decESPleavDaysConf = 0, decESPleavDaysPaid = 0, decESPleavDaysClos = 0;
                decimal decESPleavSal = 0, decESPleavSalSave = 0, decESPleavSalConf = 0, decESPleavSalPaid = 0, decESPleavSalClos = 0;
                decimal decESPgratDays = 0, decESPgratDaysSave = 0, decESPgratDaysConf = 0, decESPgratDaysPaid = 0, decESPgratDaysClos = 0;
                decimal decESPgratSal = 0, decESPgratSalSave = 0, decESPgratSalConf = 0, decESPgratSalPaid = 0, decESPgratSalClos = 0;
                decimal decESPprevSal = 0, decESPprevSalSave = 0, decESPprevSalConf = 0, decESPprevSalPaid = 0, decESPprevSalClos = 0;
                decimal decESPnetAmnt = 0, decESPnetAmntSave = 0, decESPnetAmntConf = 0, decESPnetAmntPaid = 0, decESPnetAmntClos = 0;
                decimal decESPnOtH = 0, decESPnOtHSave = 0, decESPnOtHConf = 0, decESPnOtHPaid = 0, decESPnOtHClos = 0;
                decimal decESPnOtAmt = 0, decESPnOtAmtSave = 0, decESPnOtAmtConf = 0, decESPnOtAmtPaid = 0, decESPnOtAmtClos = 0;
                decimal decESPhOtH = 0, decESPhOtHSave = 0, decESPhOtHConf = 0, decESPhOtHPaid = 0, decESPhOtHClos = 0;
                decimal decESPhOtAmt = 0, decESPhOtAmtSave = 0, decESPhOtAmtConf = 0, decESPhOtAmtPaid = 0, decESPhOtAmtClos = 0;
                decimal decESPnetOT = 0, decESPnetOTSave = 0, decESPnetOTConf = 0, decESPnetOTPaid = 0, decESPnetOTClos = 0;



                DataTable dtadd = new DataTable();
                DataTable dtDed = new DataTable();
                if (intShowAdd == 1)
                    dtadd = objBusinessIntervewProcess.ReadAllwnc(objEntityIntervewProcess);
                if (intShowDed == 1)
                    dtDed = objBusinessIntervewProcess.ReadDedctn(objEntityIntervewProcess);

                DataTable dtOTctgry = new DataTable();
                int intRowSpan = 1;
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    dtOTctgry = objBusinessIntervewProcess.ReadOTctgries(objEntityIntervewProcess);
                    intRowSpan = 2;
                    if (dtOTctgry.Rows.Count > 0)
                        strCrnAbbr = dtOTctgry.Rows[0]["CRNCMST_ABBRV"].ToString();
                }
                DataTable dtOTDetail = new DataTable();
                dtOTDetail.Columns.Add("CPRDEPT_ID", typeof(string));
                dtOTDetail.Columns.Add("NORMAL", typeof(decimal));
                dtOTDetail.Columns.Add("HOLIDAY", typeof(decimal));

                string strHeadAddC = "", strHeadAdd = "";
                string strHeadDedC = "", strHeadDed = "";

                DataTable dtDetail = new DataTable();
                dtDetail.Columns.Add("CPRDEPT_ID", typeof(string));
                dtDetail.Columns.Add("PAGE", typeof(string));
                dtDetail.Columns.Add("STATUS", typeof(string));
                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                {
                    dtDetail.Columns.Add("" + dtadd.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strHeadAdd += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                        strHeadAddC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5_2 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    }
                    else
                    {
                        strHeadAdd += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                        strHeadAddC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5_2 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    }
                }
                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                {
                    dtDetail.Columns.Add("" + dtDed.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strHeadDed += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                        strHeadDedC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    }
                    else
                    {
                        strHeadDed += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                        strHeadDedC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    }
                }
                int roundNum = 2;
                if (HiddenFieldIndividualRound.Value == "1")
                {
                    roundNum = 0;
                }

                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    DataRow drDtl = dtDetail.NewRow();
                    drDtl["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                    //0041
                    HiddenPaymentMode.Value = dt.Rows[i]["PAYMENT_METHOD"].ToString();

                    //end
                    drDtl["PAGE"] = dt.Rows[i]["PAGE"].ToString();
                    drDtl["STATUS"] = dt.Rows[i]["STATUS"].ToString();
                    string Mode = dt.Rows[i]["PAGE"].ToString();
                    string Status = dt.Rows[i]["STATUS"].ToString();
                    DataTable dtOTctgryShow = new DataTable();
                    objEntityIntervewProcess.Employee = Convert.ToInt32(dt.Rows[i]["USR_ID"].ToString());
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (Mode != "1")
                        {
                            if (dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != null && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != null)
                            {
                                objEntityIntervewProcess.CurrentDate = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString());
                                objEntityIntervewProcess.date = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString());
                                if (objEntityIntervewProcess.CurrentDate.Month != objEntityIntervewProcess.date.Month)
                                {
                                    objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.CurrentDate.Year, objEntityIntervewProcess.CurrentDate.Month, 1);
                                }
                            }
                        }
                        else
                        {
                            objEntityIntervewProcess.CurrentDate = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, daysInm);
                            objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1);
                        }
                        dtOTctgryShow = objBusinessIntervewProcess.ReadOTdtls(objEntityIntervewProcess);
                    }
                    DataTable dtAddShow = new DataTable();
                    DataTable dtDedShow = new DataTable();
                    objEntityIntervewProcess.SalaryPrssId = Convert.ToInt32(dt.Rows[i]["MASTER_ID"].ToString());
                    objEntityIntervewProcess.SavConf = Convert.ToInt32(Mode);
                    if (intShowAdd == 1)
                    {
                        dtAddShow = objBusinessIntervewProcess.ReadAllowanceDetails(objEntityIntervewProcess);
                    }
                    if (intShowDed == 1)
                    {
                        dtDedShow = objBusinessIntervewProcess.ReadDeductionDetails(objEntityIntervewProcess);
                    }

                    decimal decPerDaySal = Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()) / daysInm;
                    decimal workdays = Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()) / decPerDaySal;
                    workdays = Math.Round(workdays, 1);
                    if (workdays % 1 == 0)
                    {
                        workdays = Convert.ToInt32(workdays);
                    }
                    decimal decTotAdd = 0, decTotDed = 0;
                    decimal decTotOTcurr = 0;
                    if (Mode == "1" && Status == "1")
                    {
                        strMSPsave += "<tr>";
                        strMSPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strMSPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPnOtHSave += OtHrs;
                                        decMSPnOtAmtSave += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPhOtHSave += OtHrs;
                                        decMSPhOtAmtSave += currOtAmnt;

                                    }
                                }
                                strMSPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decMSPnetOTSave += decTotOTcurr;
                            strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPsave += "</tr>";

                        decMSPproBasicSave += Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString());
                        decMSPaddSave += decTotAdd;
                        decMSPdedSave += decTotDed;
                        decMSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "1" && Status == "2")
                    {
                        strMSPconf += "<tr>";
                        strMSPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strMSPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPnOtHConf += OtHrs;
                                        decMSPnOtAmtConf += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPhOtHConf += OtHrs;
                                        decMSPhOtAmtConf += currOtAmnt;
                                    }
                                }
                                strMSPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decMSPnetOTConf += decTotOTcurr;
                            strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPconf += "</tr>";

                        decMSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decMSPaddConf += decTotAdd;
                        decMSPdedConf += decTotDed;
                        decMSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "1" && Status == "3")
                    {
                        strMSPpaid += "<tr>";
                        strMSPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strMSPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPnOtHPaid += OtHrs;
                                        decMSPnOtAmtPaid += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPhOtHPaid += OtHrs;
                                        decMSPhOtAmtPaid += currOtAmnt;
                                    }
                                }
                                strMSPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decMSPnetOTPaid += decTotOTcurr;
                            strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPpaid += "</tr>";

                        decMSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decMSPaddPaid += decTotAdd;
                        decMSPdedPaid += decTotDed;
                        decMSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "1" && Status == "4")
                    {
                        strMSPclos += "<tr>";
                        strMSPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strMSPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPnOtHClos += OtHrs;
                                        decMSPnOtAmtClos += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decMSPhOtHClos += OtHrs;
                                        decMSPhOtAmtClos += currOtAmnt;
                                    }
                                }
                                strMSPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decMSPnetOTClos += decTotOTcurr;
                            strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strMSPclos += "</tr>";

                        decMSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decMSPaddClos += decTotAdd;
                        decMSPdedClos += decTotDed;
                        decMSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "2" && Status == "1")
                    {
                        strLSPsave += "<tr>";
                        strLSPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strLSPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPnOtHSave += OtHrs;
                                        decLSPnOtAmtSave += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPhOtHSave += OtHrs;
                                        decLSPhOtAmtSave += currOtAmnt;
                                    }
                                }
                                strLSPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decLSPnetOTSave += decTotOTcurr;
                            strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPsave += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPsave += "</tr>";

                        decLSPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decLSPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decLSPaddSave += decTotAdd;
                        decLSPdedSave += decTotDed;
                        decLSPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decLSPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decLSPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decLSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "2" && Status == "2")
                    {
                        strLSPconf += "<tr>";
                        strLSPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strLSPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPnOtHConf += OtHrs;
                                        decLSPnOtAmtConf += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPhOtHConf += OtHrs;
                                        decLSPhOtAmtConf += currOtAmnt;
                                    }
                                }
                                strLSPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decLSPnetOTConf += decTotOTcurr;
                            strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPconf += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPconf += "</tr>";

                        decLSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decLSPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decLSPaddConf += decTotAdd;
                        decLSPdedConf += decTotDed;
                        decLSPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decLSPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decLSPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decLSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "2" && Status == "3")
                    {
                        strLSPpaid += "<tr>";
                        strLSPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strLSPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPnOtHPaid += OtHrs;
                                        decLSPnOtAmtPaid += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPhOtHPaid += OtHrs;
                                        decLSPhOtAmtPaid += currOtAmnt;
                                    }
                                }
                                strLSPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decLSPnetOTPaid += decTotOTcurr;
                            strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPpaid += "</tr>";

                        decLSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decLSPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decLSPaddPaid += decTotAdd;
                        decLSPdedPaid += decTotDed;
                        decLSPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decLSPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decLSPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decLSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "2" && Status == "4")
                    {
                        strLSPclos += "<tr>";
                        strLSPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strLSPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPnOtHClos += OtHrs;
                                        decLSPnOtAmtClos += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decLSPhOtHClos += OtHrs;
                                        decLSPhOtAmtClos += currOtAmnt;
                                    }
                                }
                                strLSPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decLSPnetOTClos += decTotOTcurr;
                            strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPclos += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strLSPclos += "</tr>";

                        decLSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decLSPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decLSPaddClos += decTotAdd;
                        decLSPdedClos += decTotDed;
                        decLSPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decLSPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decLSPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decLSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }



                    else if (Mode == "3" && Status == "1")
                    {
                        strESPsave += "<tr>";
                        strESPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strESPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPnOtHSave += OtHrs;
                                        decESPnOtAmtSave += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPhOtHSave += OtHrs;
                                        decESPhOtAmtSave += currOtAmnt;
                                    }
                                }
                                strESPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decESPnetOTSave += decTotOTcurr;
                            strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPsave += "</tr>";

                        decESPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decESPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decESPaddSave += decTotAdd;
                        decESPdedSave += decTotDed;
                        decESPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decESPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decESPgratDaysSave += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                        decESPgratSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                        decESPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decESPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "3" && Status == "2")
                    {
                        strESPconf += "<tr>";
                        strESPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strESPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPnOtHConf += OtHrs;
                                        decESPnOtAmtConf += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPhOtHConf += OtHrs;
                                        decESPhOtAmtConf += currOtAmnt;
                                    }
                                }
                                strESPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decESPnetOTConf += decTotOTcurr;
                            strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPconf += "</tr>";

                        decESPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decESPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decESPaddConf += decTotAdd;
                        decESPdedConf += decTotDed;
                        decESPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decESPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decESPgratDaysConf += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                        decESPgratSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                        decESPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decESPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "3" && Status == "3")
                    {
                        strESPpaid += "<tr>";
                        strESPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strESPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;
                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPnOtHPaid += OtHrs;
                                        decESPnOtAmtPaid += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPhOtHPaid += OtHrs;
                                        decESPhOtAmtPaid += currOtAmnt;
                                    }
                                }
                                strESPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decESPnetOTPaid += decTotOTcurr;
                            strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPpaid += "</tr>";

                        decESPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decESPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decESPaddPaid += decTotAdd;
                        decESPdedPaid += decTotDed;
                        decESPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decESPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decESPgratDaysPaid += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                        decESPgratSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                        decESPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decESPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    else if (Mode == "3" && Status == "4")
                    {
                        strESPclos += "<tr>";
                        strESPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                        strESPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (decPerDaySal > 0)
                            {
                                decPerDaySal = decPerDaySal / 8;
                            }
                            DataRow drDtlO = dtOTDetail.NewRow();
                            drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                            drDtlO["NORMAL"] = 0;
                            drDtlO["HOLIDAY"] = 0;



                            for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                            {
                                DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                if (dr.Length > 0)
                                {
                                    OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                    otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                    currOtAmnt = OtHrs * otRate * decPerDaySal;
                                    currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                    decTotOTcurr += currOtAmnt;
                                    if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                    {
                                        strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPnOtHClos += OtHrs;
                                        decESPnOtAmtClos += currOtAmnt;
                                        drDtlO["NORMAL"] = currOtAmnt;
                                    }
                                    else
                                    {
                                        drDtlO["HOLIDAY"] = currOtAmnt;
                                        strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                        decESPhOtHClos += OtHrs;
                                        decESPhOtAmtClos += currOtAmnt;
                                    }
                                }
                                strESPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                                strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            }
                            dtOTDetail.Rows.Add(drDtlO);
                            decESPnetOTClos += decTotOTcurr;
                            strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtAddShow.Rows.Count; j++)
                        {
                            decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        for (int j = 0; j < dtDedShow.Rows.Count; j++)
                        {
                            decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                            strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                        }
                        decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                        strESPclos += "</tr>";

                        decESPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                        decESPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                        decESPaddClos += decTotAdd;
                        decESPdedClos += decTotDed;
                        decESPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                        decESPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                        decESPgratDaysClos += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                        decESPgratSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                        decESPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                        decESPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                    }
                    dtDetail.Rows.Add(drDtl);
                }
                decMSPproBasic = decMSPproBasicSave + decMSPproBasicConf + decMSPproBasicPaid + decMSPproBasicClos;
                decMSPadd = decMSPaddSave + decMSPaddConf + decMSPaddPaid + decMSPaddClos;
                decMSPded = decMSPdedSave + decMSPdedConf + decMSPdedPaid + decMSPdedClos;
                decMSPnetAmnt = decMSPnetAmntSave + decMSPnetAmntConf + decMSPnetAmntPaid + decMSPnetAmntClos;
                decLSPproBasic = decLSPproBasicSave + decLSPproBasicConf + decLSPproBasicPaid + decLSPproBasicClos;
                decLSPtcktAmnt = decLSPtcktAmntSave + decLSPtcktAmntConf + decLSPtcktAmntPaid + decLSPtcktAmntClos;
                decLSPadd = decLSPaddSave + decLSPaddConf + decLSPaddPaid + decLSPaddClos;
                decLSPded = decLSPdedSave + decLSPdedConf + decLSPdedPaid + decLSPdedClos;
                decLSPleavDays = decLSPleavDaysSave + decLSPleavDaysConf + decLSPleavDaysPaid + decLSPleavDaysClos;
                decLSPleavSal = decLSPleavSalSave + decLSPleavSalConf + decLSPleavSalPaid + decLSPleavSalClos;
                decLSPprevSal = decLSPprevSalSave + decLSPprevSalConf + decLSPprevSalPaid + decLSPprevSalClos;
                decLSPnetAmnt = decLSPnetAmntSave + decLSPnetAmntConf + decLSPnetAmntPaid + decLSPnetAmntClos;
                decESPproBasic = decESPproBasicSave + decESPproBasicConf + decESPproBasicPaid + decESPproBasicClos;
                decESPtcktAmnt = decESPtcktAmntSave + decESPtcktAmntConf + decESPtcktAmntPaid + decESPtcktAmntClos;
                decESPadd = decESPaddSave + decESPaddConf + decESPaddPaid + decESPaddClos;
                decESPded = decESPdedSave + decESPdedConf + decESPdedPaid + decESPdedClos;
                decESPleavDays = decESPleavDaysSave + decESPleavDaysConf + decESPleavDaysPaid + decESPleavDaysClos;
                decESPleavSal = decESPleavSalSave + decESPleavSalConf + decESPleavSalPaid + decESPleavSalClos;
                decESPgratDays = decESPgratDaysSave + decESPgratDaysConf + decESPgratDaysPaid + decESPgratDaysClos;
                decESPgratSal = decESPgratSalSave + decESPgratSalConf + decESPgratSalPaid + decESPgratSalClos;
                decESPprevSal = decESPprevSalSave + decESPprevSalConf + decESPprevSalPaid + decESPprevSalClos;
                decESPnetAmnt = decESPnetAmntSave + decESPnetAmntConf + decESPnetAmntPaid + decESPnetAmntClos;
                decMSPnOtH = decMSPnOtHSave + decMSPnOtHConf + decMSPnOtHPaid + decMSPnOtHClos;
                decMSPnOtAmt = decMSPnOtAmtSave + decMSPnOtAmtConf + decMSPnOtAmtPaid + decMSPnOtAmtClos;
                decMSPhOtH = decMSPhOtHSave + decMSPhOtHConf + decMSPhOtHPaid + decMSPhOtHClos;
                decMSPhOtAmt = decMSPhOtAmtSave + decMSPhOtAmtConf + decMSPhOtAmtPaid + decMSPhOtAmtClos;
                decMSPnetOT = decMSPnetOTSave + decMSPnetOTConf + decMSPnetOTPaid + decMSPnetOTClos;
                decLSPnOtH = decLSPnOtHSave + decLSPnOtHConf + decLSPnOtHPaid + decLSPnOtHClos;
                decLSPnOtAmt = decLSPnOtAmtSave + decLSPnOtAmtConf + decLSPnOtAmtPaid + decLSPnOtAmtClos;
                decLSPhOtH = decLSPhOtHSave + decLSPhOtHConf + decLSPhOtHPaid + decLSPhOtHClos;
                decLSPhOtAmt = decLSPhOtAmtSave + decLSPhOtAmtConf + decLSPhOtAmtPaid + decLSPhOtAmtClos;
                decLSPnetOT = decLSPnetOTSave + decLSPnetOTConf + decLSPnetOTPaid + decLSPnetOTClos;
                decESPnOtH = decESPnOtHSave + decESPnOtHConf + decESPnOtHPaid + decESPnOtHClos;
                decESPnOtAmt = decESPnOtAmtSave + decESPnOtAmtConf + decESPnOtAmtPaid + decESPnOtAmtClos;
                decESPhOtH = decESPhOtHSave + decESPhOtHConf + decESPhOtHPaid + decESPhOtHClos;
                decESPhOtAmt = decESPhOtAmtSave + decESPhOtAmtConf + decESPhOtAmtPaid + decESPhOtAmtClos;
                decESPnetOT = decESPnetOTSave + decESPnetOTConf + decESPnetOTPaid + decESPnetOTClos;
                if (strMSPsave != "" || strMSPconf != "" || strMSPpaid != "" || strMSPclos != "")
                {
                    int MSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 8;
                    strMSP += "<div class=\"devider\"></div>";
                    strMSP += "<div class=\"free_sp\"></div>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        MSPcolSpan += 5;
                        strMSP += "<table class=\"display table-bordered pro_tab1 tbl_fl1\" cellspacing=\"0\" width=\"100%\">";
                        strMSP += "<thead class=\"thead1\">";
                        strMSP += "<tr><th colspan=\"" + MSPcolSpan + "\">MONTHLY SALARY STATEMENT  - WORKER </th></tr>";
                        //0041
                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strMSP += "<tr>";
                            strMSP += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                            strMSP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strMSP += "<tr>";
                            strMSP += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                            strMSP += "</tr>";
                        }
                        strMSP += "<tr>";
                        strMSP += "<th class=\"th_b1 tr_l\" rowspan=\"2\">Employee ID</th>";
                        strMSP += "<th class=\"th_b8 tr_l\" rowspan=\"2\">Employee Name</th>";
                        strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Basic</th>";
                        strMSP += "<th class=\"th_b5_2 tr_c\" rowspan=\"2\">Days</th>";
                        strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Earned </br> Basic</th>";
                        strMSP += "<th class=\"th_b1 bg_nrm\"colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                        strMSP += "<th class=\"th_b1 bg_hld\"colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                        strMSP += "<th class=\"th_b1 tr_r\" rowspan=\"2\">Total OT<br> Amount</th>";
                        strMSP += strHeadAdd;
                        strMSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                        strMSP += strHeadDed;
                        strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deductions</th>";
                        strMSP += "<th class=\"th_b5_5 tr_r\" rowspan=\"2\">Net Amount</th>";
                        strMSP += "</tr>";
                        strMSP += "<tr>";
                        strMSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strMSP += "<th class=\"th_b7 tr_r\">Amount</th>";
                        strMSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strMSP += "<th class=\"th_b7 tr_r\">Amount</th>";
                        strMSP += "</tr>";
                    }
                    else
                    {
                        strMSP += "<table class=\"display table-bordered pro_tab1 tbl_fl\" cellspacing=\"0\" width=\"100%\">";
                        strMSP += "<thead class=\"thead1\">";
                        strMSP += "<tr><th colspan=\"" + MSPcolSpan + "\">MONTHLY SALARY STATEMENT  - STAFF </th></tr>";

                        //0041
                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strMSP += "<tr>";
                            strMSP += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                            strMSP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strMSP += "<tr>";
                            strMSP += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                            strMSP += "</tr>";
                        }
                        strMSP += "<tr>";
                        strMSP += "<th class=\"th_b1 tr_l\">Employee ID</th>";
                        strMSP += "<th class=\"th_b8 tr_l\">Employee Name</th>";
                        strMSP += "<th class=\"th_b5 tr_r\">Basic</th>";
                        strMSP += "<th class=\"th_b5_2 tr_c\">Days</th>";
                        strMSP += "<th class=\"th_b5 tr_r\">Earned</br> Basic</th>";
                        strMSP += strHeadAdd;
                        strMSP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                        strMSP += strHeadDed;
                        strMSP += "<th class=\"th_b5 tr_r\">Other<br> Deduction</th>";
                        strMSP += "<th class=\"th_b5_5 tr_r\">Net Amount</th>";
                        strMSP += "</tr>";
                    }
                    strMSP += "</thead>";
                    strMSP += "<tbody>";



                    if (strMSPsave != "" || strMSP1 != "")
                    {

                        //0041


                        if (p == 0 && strMSPsave != "")
                        {


                            if (flagMSPbank == 0)
                            {
                                strMSP1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank </td> </tr>";

                                flagMSPbank = 1;
                            }
                            strMSP1 += "<tr>";
                            strMSP1 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strMSP1 += "</tr>";
                            strMSP1 += strMSPsave;
                            strMSP1 += "<tr class=\"fotr_1_1\">";
                            strMSP1 += "<td></td>";
                            strMSP1 += "<td></td>";
                            strMSP1 += "<th colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important'>Subtotal(Pending)</th>";
                            strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSP1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHSave.ToString("0.00") + "</th>";
                                strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHSave.ToString("0.00") + "</th>";
                                strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP1 += "<th class=\"tr_r nt_tl\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP1 += "</tr>";
                        }

                        if (p == 1 && strMSPsave != "")
                        {

                            if (flagMSPcash == 0)
                            {
                                flagMSPcash = 1;
                                strMSP2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }

                            strMSP2 += "<tr>";
                            strMSP2 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strMSP2 += "</tr>";
                            strMSP2 += strMSPsave;
                            strMSP2 += "<tr class=\"fotr_1_1\">";
                            strMSP2 += "<td></td>";
                            strMSP2 += "<td></td>";
                            strMSP2 += "<th colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Pending)</th>";
                            strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSP2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHSave.ToString("0.00") + "</th>";
                                strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHSave.ToString("0.00") + "</th>";
                                strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP2 += "<th class=\"tr_r nt_tl\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP2 += "</tr>";
                        }

                    }


                    if (strMSP1 != "")
                    {

                        strMSP += strMSP1;
                    }
                   

                    if (strMSPconf != "" || strMSPconf1 != "")
                    {
                        //0041


                        if (p == 0 && strMSPconf != "")
                        {


                            if (flagMSPbank == 0)
                            {
                                strMSPconf1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank </td> </tr>";
                                flagMSPbank = 1;

                            }
                            strMSPconf1 += "<tr>";
                            strMSPconf1 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed</td>";
                            strMSPconf1 += "</tr>";
                            strMSPconf1 += strMSPconf;
                            strMSPconf1 += "<tr class=\"fotr_1_1\">";
                            strMSPconf1 += "<td></td>";
                            strMSPconf1 += "<td></td>";
                            strMSPconf1 += "<td colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important'>Subtotal(Confirmed)</td>";
                            strMSPconf1 += "<td class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</td>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPconf1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHConf.ToString("0.00") + "</th>";
                                strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPconf1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHConf.ToString("0.00") + "</th>";
                                strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPconf1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPconf1 += "<th class=\"tr_r nt_tl\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPconf1 += "</tr>";
                        }

                        if (p == 1 && strMSPconf != "")
                        {


                            if (flagMSPcash == 0)
                            {
                                flagMSPcash = 1;
                                strMSPconf2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash </td> </tr>";
                            }
                            strMSPconf2 += "<tr>";
                            strMSPconf2 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed</td>";
                            strMSPconf2 += "</tr>";
                            strMSPconf2 += strMSPconf;
                            strMSPconf2 += "<tr class=\"fotr_1_1\">";
                            strMSPconf2 += "<td></td>";
                            strMSPconf2 += "<td></td>";
                            strMSPconf2 += "<td colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important'>Subtotal(Confirmed)</td>";
                            strMSPconf2 += "<td class=\"tr_r\" style='background-color: #f2f2f2 !important'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</td>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPconf2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHConf.ToString("0.00") + "</th>";
                                strMSPconf2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPconf2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHConf.ToString("0.00") + "</th>";
                                strMSPconf2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPconf2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPconf2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPconf2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPconf2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPconf2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPconf2 += "<th class=\"tr_r nt_tl\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPconf2 += "</tr>";
                        }

                        if (strMSPconf1 != "")
                        {

                            strMSP += strMSPconf1;
                        }
                       
                    }
                    if (strMSPpaid != "" || strMSPpaid1 != "")
                    {

                        //0041

                        if (p == 0 && strMSPpaid != "")
                        {

                            if (flagMSPbank == 0)
                            {
                                flagMSPbank = 1;
                                strMSPpaid1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank </td> </tr>";
                            }
                            strMSPpaid1 += "<tr>";
                            strMSPpaid1 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strMSPpaid1 += "</tr>";
                            strMSPpaid1 += strMSPpaid;
                            strMSPpaid1 += "<tr class=\"fotr_1_1\">";
                            strMSPpaid1 += "<td></td>";
                            strMSPpaid1 += "<td></td>";
                            strMSPpaid1 += "<td colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Paid)</td>";
                            strMSPpaid1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";



                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPpaid1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHPaid.ToString("0.00") + "</th>";
                                strMSPpaid1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPpaid1 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHPaid.ToString("0.00") + "</th>";
                                strMSPpaid1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPpaid1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPpaid1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPpaid1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPpaid1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPpaid1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPpaid1 += "<th class=\"tr_r nt_tl\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPpaid1 += "</tr>";
                        }

                        if (p == 1 && strMSPpaid != "")
                        {

                            if (flagMSPcash == 0)
                            {
                                flagMSPcash = 1;
                                strMSPpaid2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash </td> </tr>";
                            }
                            strMSPpaid2 += "<tr>";
                            strMSPpaid2 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strMSPpaid2 += "</tr>";
                            strMSPpaid2 += strMSPpaid;
                            strMSPpaid2 += "<tr class=\"fotr_1_1\">";
                            strMSPpaid2 += "<td></td>";
                            strMSPpaid2 += "<td></td>";
                            strMSPpaid2 += "<td colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Paid)</td>";
                            strMSPpaid2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";



                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPpaid2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHPaid.ToString("0.00") + "</th>";
                                strMSPpaid2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPpaid2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHPaid.ToString("0.00") + "</th>";
                                strMSPpaid2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPpaid2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPpaid2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPpaid2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPpaid2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPpaid2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPpaid2 += "<th class=\"tr_r nt_tl\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPpaid2 += "</tr>";
                        }



                        if (strMSPpaid1 != "")
                        {

                            strMSP += strMSPpaid1;
                        }
                       
                    }
                    if (strMSPclos != "" || strMSPclos1 != "" || p == 2)
                    {

                        if (p == 0 && strMSPclos != "")
                        {

                            if (flagMSPbank == 0)
                            {
                                flagMSPbank = 1;
                                strMSPclos1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strMSPclos1 += "<tr>";
                            strMSPclos1 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strMSPclos1 += "</tr>";
                            strMSPclos1 += strMSPclos;
                            strMSPclos1 += "<tr class=\"fotr_1_1\">";
                            strMSPclos1 += "<th></th>";
                            strMSPclos1 += "<th></th>";
                            strMSPclos1 += "<th colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Closed)</th>";
                            strMSPclos1 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPclos1 += "<th class=\"tr_c\"  style='background-color: #f2f2f2 !important;'>" + decMSPnOtHClos.ToString("0.00") + "</th>";
                                strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPclos1 += "<th class=\"tr_c\"  style='background-color: #f2f2f2 !important;'>" + decMSPhOtHClos.ToString("0.00") + "</th>";
                                strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPclos1 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPclos1 += "<th class=\"tr_r nt_tl\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPclos1 += "</tr>";
                        }
                        if (p == 1 && strMSPclos != "")
                        {
                            if (flagMSPcash == 0)
                            {
                                flagMSPcash = 1;
                                strMSPclos2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strMSPclos2 += "<tr>";
                            strMSPclos2 += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strMSPclos2 += "</tr>";
                            strMSPclos2 += strMSPclos;
                            strMSPclos2 += "<tr class=\"fotr_1_1\">";
                            strMSPclos2 += "<th></th>";
                            strMSPclos2 += "<th></th>";
                            strMSPclos2 += "<th colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Closed)</th>";
                            strMSPclos2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSPclos2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPnOtHClos.ToString("0.00") + "</th>";
                                strMSPclos2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPclos2 += "<th class=\"tr_c\" style='background-color: #f2f2f2 !important;'>" + decMSPhOtHClos.ToString("0.00") + "</th>";
                                strMSPclos2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSPclos2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSPclos2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPclos2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSPclos2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSPclos2 += "<th class=\"tr_r\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPclos2 += "<th class=\"tr_r nt_tl\"  style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSPclos2 += "</tr>";
                        }

                        if (strMSPclos1 != "")
                        {

                            strMSP += strMSPclos1;
                        }
                       


                        if (strMSP2 != "")
                        {

                            strMSP += strMSP2;
                        }




                        if (strMSPconf2 != "")
                        {

                            strMSP += strMSPconf2;
                        }

                        if (strMSPpaid2 != "")
                        {

                            strMSP += strMSPpaid2;
                        }

                        if (strMSPclos2 != "")
                        {

                            strMSP += strMSPclos2;
                        }

                        if (p == 2)
                        {
                            strMSP += "</tbody>";
                            strMSP += "<tfoot>";
                            strMSP += "<tr class=\"fotr_1_1\">";
                            strMSP += "<th></th>";
                            strMSP += "<th></th>";
                            strMSP += "<th colspan=\"2\" class=\"tr_l\">Grand Total</th>";
                            strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strMSP += "<th class=\"tr_c\">" + decMSPnOtH.ToString("0.00") + "</th>";
                                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP += "<th class=\"tr_c\">" + decMSPhOtH.ToString("0.00") + "</th>";
                                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strMSP += "</tr>";
                        }
                    }


                    strMSP += "</tfoot>";
                    strMSP += "</table>";



                    divMSP.InnerHtml = strMSP;
                }
                    //done

                else if(strMSPsave == "" && strMSPconf == "" && strMSPpaid == "" && strMSPclos == "")
                {
                   // linkMSP.Visible = false;
                }

                if (strLSPsave != "" || strLSPconf != "" || strLSPpaid != "" || strLSPclos != "")
                {
                    int LSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 12;
                    strLSP += "<div class=\"devider\"></div>";
                    strLSP += "<div class=\"free_sp\"></div>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        LSPcolSpan += 5;
                        strLSP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\" width=\"100%\">";
                        strLSP += "<thead class=\"thead1\">";
                        strLSP += "<tr>";
                        strLSP += "<th colspan=\"" + LSPcolSpan + "\">Leave Settlement </th>";
                        strLSP += "</tr>";
                        //0041

                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strLSP += "<tr>";
                            strLSP += "<td colspan=21 class='td_bnk tr_l'>Bank</td>";
                            strLSP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strLSP += "<tr>";
                            strLSP += "<td colspan=21 class='td_bnk tr_l'>Cash</td>";
                            strLSP += "</tr>";
                        }

                        strLSP += "<tr>";
                        strLSP += "<th class=\"th_b1_4 tr_l\" rowspan=\"2\">Employee ID</th>";
                        strLSP += "<th class=\"th_b7 tr_l\" rowspan=\"2\">Employee Name</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Basic</th>";
                        strLSP += "<th class=\"th_b5_2 tr_c\" rowspan=\"2\">Days</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Earned </br>Basic</th>";
                        strLSP += "<th class=\"th_b1 bg_nrm\"colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                        strLSP += "<th class=\"th_b1 bg_hld\"colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                        strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Total OT <br>Amount</th>";
                        strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Air Ticket</br>Amount</th>";
                        strLSP += strHeadAddC;
                        strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                        strLSP += strHeadDedC;
                        strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deduction</th>";
                        strLSP += "<th class=\"th_b1_4 tr_c\" rowspan=\"2\">Eligible Days</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Leave </br> Salary</th>";
                        strLSP += "<th class=\"th_b1_4 tr_r\" rowspan=\"2\">Previous<br> Month</br> Salary</th>";
                        strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Net </br>Amount</th>";
                        strLSP += "</tr>";
                        strLSP += "<tr>";
                        strLSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strLSP += "<th class=\"th_b1 tr_r\">Amount</th>";
                        strLSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strLSP += "<th class=\"th_b1 tr_r\">Amount</th>";
                        strLSP += "</tr>";
                    }
                    else
                    {
                        strLSP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\" width=\"100%\">";
                        strLSP += "<thead class=\"thead1\">";
                        strLSP += "<tr>";
                        strLSP += "<th colspan=\"" + LSPcolSpan + "\">Leave Settlement </th>";

                        strLSP += "</tr>";
                        //0041

                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strLSP += "<tr>";
                            strLSP += "<td colspan=21 class=td_bnk tr_l>Bank</td>";
                            strLSP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strLSP += "<tr>";
                            strLSP += "<td colspan=21 class=td_bnk tr_l>Cash</td>";
                            strLSP += "</tr>";
                        }
                        strLSP += "<tr>";
                        strLSP += "<th class=\"th_b1_4 tr_l\">Employee ID</th>";
                        strLSP += "<th class=\"th_b7 tr_l\">Employee Name</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\">Basic</th>";
                        strLSP += "<th class=\"th_b5_2 tr_c\">Days</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\">Earned<br> Basic</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\">Air Ticket<br>Amount</th>";
                        strLSP += strHeadAddC;
                        strLSP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                        strLSP += strHeadDedC;
                        strLSP += "<th class=\"th_b5 tr_r\">Other<br> Deduction</th>";
                        strLSP += "<th class=\"th_b1_4 tr_c\">Eligible Days<br> for Leave Salary</th>";
                        strLSP += "<th class=\"th_b5_2 tr_r\">Leave<br> Salary</th>";
                        strLSP += "<th class=\"th_b1_4 tr_r\">Previous<br> Month Salary</th>";
                        strLSP += "<th class=\"th_b5 tr_r\">Net Amount</th>";
                        strLSP += "</tr>";
                    }
                    strLSP += "</thead>";
                    strLSP += "<tbody>";


                    if (strLSPsave != "" || strLSPsave1 != "")
                    {
                        if (p == 0 && strLSPsave != "")
                        {
                            if (flagLSPbank == 0)
                            {
                                flagLSPbank = 1;
                                strLSPsave1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strLSPsave1 += "<tr>";
                            strLSPsave1 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strLSPsave1 += "</tr>";
                            strLSPsave1 += strLSPsave;
                            strLSPsave1 += "<tr class=\"fotr_1\">";
                            strLSPsave1 += "<th></th>";
                            strLSPsave1 += "<th></th>";
                            strLSPsave1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Pending)</th>";
                            strLSPsave1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPsave1 += "<th class=\"tr_c\">" + decLSPnOtHSave.ToString("0.00") + "</th>";
                                strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPsave1 += "<th class=\"tr_c\">" + decLSPhOtHSave.ToString("0.00") + "</th>";
                                strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave1 += "<th class=\"tr_c\">" + decLSPleavDaysSave.ToString("0.00") + "</th>";
                            strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave1 += "</tr>";
                        }

                        if (p == 1 && strLSPsave != "")
                        {
                            if (flagLSPcash == 0)
                            {
                                flagLSPcash = 1;
                                strLSPsave2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strLSPsave2 += "<tr>";
                            strLSPsave2 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strLSPsave2 += "</tr>";
                            strLSPsave2 += strLSPsave;
                            strLSPsave2 += "<tr class=\"fotr_1\">";
                            strLSPsave2 += "<th></th>";
                            strLSPsave2 += "<th></th>";
                            strLSPsave2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Pending)</th>";
                            strLSPsave2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPsave2 += "<th class=\"tr_c\">" + decLSPnOtHSave.ToString("0.00") + "</th>";
                                strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPsave2 += "<th class=\"tr_c\">" + decLSPhOtHSave.ToString("0.00") + "</th>";
                                strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave2 += "<th class=\"tr_c\">" + decLSPleavDaysSave.ToString("0.00") + "</th>";
                            strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPsave2 += "</tr>";
                        }

                        if (strLSPsave1 != "")
                        {

                            strLSP += strLSPsave1;
                        }

                       



                    }

                    if (strLSPconf != "" || strLSPconf1 != "")
                    {
                        if (p == 0 && strLSPconf != "")
                        {
                            if (flagLSPbank == 0)
                            {
                                flagLSPbank = 1;
                                strLSPconf1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strLSPconf1 += "<tr>";
                            strLSPconf1 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                            strLSPconf1 += "</tr>";
                            strLSPconf1 += strLSPconf;
                            strLSPconf1 += "<tr class=\"fotr_1\">";
                            strLSPconf1 += "<th></th>";
                            strLSPconf1 += "<th></th>";
                            strLSPconf1 += "<th colspan=\"2\" class=\"tr_l\" >Subtotal(Confirmed)</th>";
                            strLSPconf1 += "<th class=\"tr_r\" >" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPconf1 += "<th class=\"tr_c\">" + decLSPnOtHConf.ToString("0.00") + "</th>";
                                strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPconf1 += "<th class=\"tr_c\">" + decLSPhOtHConf.ToString("0.00") + "</th>";
                                strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf1 += "<th class=\"tr_c\">" + decLSPleavDaysConf.ToString("0.00") + "</th>";
                            strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf1 += "</tr>";
                        }

                        if (p == 1 && strLSPconf != "")
                        {
                            if (flagLSPcash == 0)
                            {
                                flagLSPcash = 1;
                                strLSPconf2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strLSPconf2 += "<tr>";
                            strLSPconf2 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                            strLSPconf2 += "</tr>";
                            strLSPconf2 += strLSPconf;
                            strLSPconf2 += "<tr class=\"fotr_1\">";
                            strLSPconf2 += "<th></th>";
                            strLSPconf2 += "<th></th>";
                            strLSPconf2 += "<th colspan=\"2\" class=\"tr_l\" >Subtotal(Confirmed)</th>";
                            strLSPconf2 += "<th class=\"tr_r\" >" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPconf2 += "<th class=\"tr_c\">" + decLSPnOtHConf.ToString("0.00") + "</th>";
                                strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPconf2 += "<th class=\"tr_c\">" + decLSPhOtHConf.ToString("0.00") + "</th>";
                                strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf2 += "<th class=\"tr_c\">" + decLSPleavDaysConf.ToString("0.00") + "</th>";
                            strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPconf2 += "</tr>";
                        }



                        if (strLSPconf1 != "")
                        {

                            strLSP += strLSPconf1;

                        }
                       
                    }
                    if (strLSPpaid != "" || strLSPpaid1 != "")
                    {
                        if (p == 0 && strLSPpaid != "")
                        {
                            if (flagLSPbank == 0)
                            {
                                flagLSPbank = 1;
                                strLSPpaid1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strLSPpaid1 += "<tr>";
                            strLSPpaid1 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strLSPpaid1 += "</tr>";
                            strLSPpaid1 += strLSPpaid;
                            strLSPpaid1 += "<tr class=\"fotr_1\">";
                            strLSPpaid1 += "<th></th>";
                            strLSPpaid1 += "<th></th>";
                            strLSPpaid1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Paid)</th>";

                            strLSPpaid1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPpaid1 += "<th class=\"tr_c\">" + decLSPnOtHPaid.ToString("0.00") + "</th>";
                                strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPpaid1 += "<th class=\"tr_c\">" + decLSPhOtHPaid.ToString("0.00") + "</th>";
                                strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid1 += "<th class=\"tr_c\">" + decLSPleavDaysPaid.ToString("0.00") + "</th>";
                            strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid1 += "</tr>";
                        }


                        if (p == 1 && strLSPpaid != "")
                        {
                            if (flagLSPcash == 0)
                            {
                                flagLSPcash = 1;
                                strLSPpaid2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strLSPpaid2 += "<tr>";
                            strLSPpaid2 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strLSPpaid2 += "</tr>";
                            strLSPpaid2 += strLSPpaid;
                            strLSPpaid2 += "<tr class=\"fotr_1\">";
                            strLSPpaid2 += "<th></th>";
                            strLSPpaid2 += "<th></th>";
                            strLSPpaid2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Paid)</th>";

                            strLSPpaid2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSPpaid2 += "<th class=\"tr_c\">" + decLSPnOtHPaid.ToString("0.00") + "</th>";
                                strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPpaid2 += "<th class=\"tr_c\">" + decLSPhOtHPaid.ToString("0.00") + "</th>";
                                strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid2 += "<th class=\"tr_c\">" + decLSPleavDaysPaid.ToString("0.00") + "</th>";
                            strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSPpaid2 += "</tr>";
                        }


                        if (strLSPpaid1 != "")
                        {

                            strLSP += strLSPpaid1;

                        }
                       

                    }

                    if (strLSPclos != "" || strLSP1 != "" || p == 2)
                    {

                        if (p == 0 && strLSPclos != "")
                        {
                            if (flagLSPbank == 0)
                            {
                                flagLSPbank = 1;
                                strLSP1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strLSP1 += "<tr>";
                            strLSP1 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strLSP1 += "</tr>";
                            strLSP1 += strLSPclos;
                            strLSP1 += "<tr class=\"fotr_1\">";
                            strLSP1 += "<th></th>";
                            strLSP1 += "<th></th>";
                            strLSP1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Closed)</th>";
                            strLSP1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSP1 += "<th class=\"tr_c\">" + decLSPnOtHClos.ToString("0.00") + "</th>";
                                strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP1 += "<th class=\"tr_c\">" + decLSPhOtHClos.ToString("0.00") + "</th>";
                                strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP1 += "<th class=\"tr_c\">" + decLSPleavDaysClos.ToString("0.00") + "</th>";
                            strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP1 += "</tr>";
                        }

                        if (p == 1 && strLSPclos != "")
                        {
                            if (flagLSPcash == 0)
                            {
                                flagLSPcash = 1;
                                strLSP2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strLSP2 += "<tr>";
                            strLSP2 += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strLSP2 += "</tr>";
                            strLSP2 += strLSPclos;
                            strLSP2 += "<tr class=\"fotr_1\">";
                            strLSP2 += "<th></th>";
                            strLSP2 += "<th></th>";
                            strLSP2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Closed)</th>";
                            strLSP2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSP2 += "<th class=\"tr_c\">" + decLSPnOtHClos.ToString("0.00") + "</th>";
                                strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP2 += "<th class=\"tr_c\">" + decLSPhOtHClos.ToString("0.00") + "</th>";
                                strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP2 += "<th class=\"tr_c\">" + decLSPleavDaysClos.ToString("0.00") + "</th>";
                            strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP2 += "</tr>";
                        }

                        if (strLSP1 != "")
                        {

                            strLSP += strLSP1;

                        }

                        if (strLSPsave2 != "")
                        {

                            strLSP += strLSPsave2;
                        }

                        if (strLSPconf2 != "")
                        {

                            strLSP += strLSPconf2;
                        }

                        if (strLSPpaid2 != "")
                        {

                            strLSP += strLSPpaid2;
                        }
                        if (strLSP2 != "")
                        {

                            strLSP += strLSP2;

                        }

                        if (p == 2)
                        {




                            strLSP += "</tbody>";
                            strLSP += "<tfoot>";
                            strLSP += "<tr class=\"fotr_1_1\">";
                            strLSP += "<th></th>";
                            strLSP += "<th></th>";
                            strLSP += "<th colspan=\"2\" class=\"tr_l\">Grand Total Amount</th>";
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strLSP += "<th class=\"tr_c\">" + decLSPnOtH.ToString("0.00") + "</th>";
                                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP += "<th class=\"tr_c\">" + decLSPhOtH.ToString("0.00") + "</th>";
                                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP += "<th class=\"tr_c\">" + decLSPleavDays.ToString("0.00") + "</th>";
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strLSP += "</tr>";

                        }
                        strLSP += "</tfoot>";
                        strLSP += "</table>";
                        divLSP.InnerHtml = strLSP;


                    }
                    else if (strLSPsave == "" && strLSPconf == "" && strLSPpaid == "" && strLSPclos == "")
                    {
                        //linkLSP.Visible = false;
                    }
                }
                if (strESPsave != "" || strESPconf != "" || strESPpaid != "" || strESPclos != "")
                {
                    int ESPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 14;
                    strESP += "<div class=\"devider\"></div>";
                    strESP += "<div class=\"free_sp\"></div>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        ESPcolSpan += 5;
                        strESP += "<table class=\"display table-bordered pro_tab1 tbl_fl3\" cellspacing=\"0\">";
                        strESP += "<thead class=\"thead1\">";
                        strESP += "<tr>";
                        strESP += "<th colspan=\"" + ESPcolSpan + "\">End of Service Settlement</th>";
                        strESP += "</tr>";
                        //0041


                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strESP += "<tr>";
                            strESP += "<td colspan=" + ESPcolSpan + " class=td_bnk tr_l>Bank</td>";
                            strESP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strESP += "<tr>";
                            strESP += "<td colspan=" + ESPcolSpan + " class=td_bnk tr_l>Cash</td>";
                            strESP += "</tr>";
                        }
                        strESP += "<tr>";
                        strESP += "<th class=\"th_b5 tr_l\" rowspan=\"2\">Employee ID</th>";
                        strESP += "<th class=\"th_b1 tr_l\" rowspan=\"2\">Employee Name</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Basic</th>";
                        strESP += "<th class=\"th_b5_1 tr_c\" rowspan=\"2\">Days</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Earned <br> Basic</th>";
                        strESP += "<th class=\"th_b5 bg_nrm\" colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                        strESP += "<th class=\"th_b5 bg_hld\" colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Total OT <br>Amount</th>";
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Air Ticket<br>Amount</th>";
                        strESP += strHeadAddC;
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                        strESP += strHeadDedC;
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deduction</th>";
                        strESP += "<th class=\"th_b1 tr_c\" rowspan=\"2\">Eligible Days<br> for Leave </br>Salary</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Leave</br> Salary</th>";
                        strESP += "<th class=\"th_b1 tr_c\" rowspan=\"2\">Eligible Days</br> for Gratuity</th>";
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Gratuity<br> Amount</th>";
                        strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Previous<br> Month</br> Salary</th>";
                        strESP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Net </br> Amount</th>";
                        strESP += "</tr>";
                        strESP += "<tr>";
                        strESP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strESP += "<th class=\"th_b5 tr_r\">Amount</th>";
                        strESP += "<th class=\"th_b5 tr_c\">Hours</th>";
                        strESP += "<th class=\"th_b5 tr_r\">Amount</th>";
                        strESP += "</tr>";
                    }
                    else
                    {
                        strESP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\">";
                        strESP += "<thead class=\"thead1\">";
                        strESP += "<tr>";
                        strESP += "<th colspan=\"" + ESPcolSpan + "\">End of Service Settlement</th>";
                        strESP += "</tr>";
                        //0041


                        if (ddlpaymentmode.SelectedItem.Value == "0")
                        {
                            strESP += "<tr>";
                            strESP += "<td colspan=" + ESPcolSpan + "  class=td_bnk tr_l>Bank</td>";
                            strESP += "</tr>";
                        }
                        if (ddlpaymentmode.SelectedItem.Value == "1")
                        {
                            strESP += "<tr>";
                            strESP += "<td colspan=" + ESPcolSpan + "  class=td_bnk tr_l>Cash</td>";
                            strESP += "</tr>";
                        }
                        strESP += "<tr>";
                        strESP += "<th class=\"th_b5 tr_l\">Employee ID</th>";
                        strESP += "<th class=\"th_b1 tr_l\">Employee Name</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\">Basic</th>";
                        strESP += "<th class=\"th_b5_1 tr_c\">Days</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\">Earned<br> Basic</th>";
                        strESP += "<th class=\"th_b5_2 tr_r\">Air Ticket<br>Amount</th>";
                        strESP += strHeadAddC;
                        strESP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                        strESP += strHeadDedC;
                        strESP += "<th class=\"th_b5_2 tr_r\">Other<br> Deduction</th>";
                        strESP += "<th class=\"th_b5 tr_c\">Eligible Days<br> for Leave Salary</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\">Leave<br> Salary</th>";
                        strESP += "<th class=\"th_b5 tr_c\">Eligible Days<br> for Gratuity</th>";
                        strESP += "<th class=\"th_b5_1 tr_r\">Gratuity<br> Amount</th>";
                        strESP += "<th class=\"th_b5 tr_r\">Previous<br> Month Salary</th>";
                        strESP += "<th class=\"th_b5_2 tr_r\">Net Amount</th>";
                        strESP += "</tr>";

                    }
                    strESP += "</thead>";
                    strESP += "<tbody>";


                    if (strESPsave != "" || strESP1 != "")
                    {
                        if (p == 0 && strESPsave != "")
                        {
                            if (flagESPbank == 0)
                            {
                                flagESPbank = 1;
                                strESP1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strESP1 += "<tr>";
                            strESP1 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strESP1 += "</tr>";
                            strESP1 += strESPsave;
                            strESP1 += "<tr class=\"fotr_1\">";
                            strESP1 += "<th></th>";
                            strESP1 += "<th></th>";
                            strESP1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Pending)</th>";
                            strESP1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESP1 += "<th class=\"tr_c\">" + decESPnOtHSave.ToString("0.00") + "</th>";
                                strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP1 += "<th class=\"tr_c\">" + decESPhOtHSave.ToString("0.00") + "</th>";
                                strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP1 += "<th class=\"tr_c\">" + decESPleavDaysSave.ToString("0.00") + "</th>";
                            strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP1 += "<th class=\"tr_c\">" + decESPgratDaysSave.ToString("0.00") + "</th>";
                            strESP1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP1 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESP1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP1 += "</tr>";
                        }


                        if (p == 1)
                        {
                            if (flagESPcash == 0)
                            {
                                flagESPcash = 1;
                                strESP2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strESP2 += "<tr>";
                            strESP2 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                            strESP2 += "</tr>";
                            strESP2 += strESPsave;
                            strESP2 += "<tr class=\"fotr_1\">";
                            strESP2 += "<th></th>";
                            strESP2 += "<th></th>";
                            strESP2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Pending)</th>";
                            strESP2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESP2 += "<th class=\"tr_c\">" + decESPnOtHSave.ToString("0.00") + "</th>";
                                strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP2 += "<th class=\"tr_c\">" + decESPhOtHSave.ToString("0.00") + "</th>";
                                strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP2 += "<th class=\"tr_c\">" + decESPleavDaysSave.ToString("0.00") + "</th>";
                            strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP2 += "<th class=\"tr_c\">" + decESPgratDaysSave.ToString("0.00") + "</th>";
                            strESP2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP2 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESP2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP2 += "</tr>";
                        }

                        if (strESP1 != "")
                        {
                            strESP += strESP1;
                        }
                       
                    }

                    if (strESPconf != "" || strESPconf1 != "")
                    {
                        if (p == 0 && strESPconf != "")
                        {
                            if (flagESPbank == 0)
                            {
                                flagESPbank = 1;
                                strESPconf1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strESPconf1 += "<tr>";
                            strESPconf1 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                            strESPconf1 += "</tr>";
                            strESPconf1 += strESPconf;
                            strESPconf1 += "<tr class=\"fotr_1\">";
                            strESPconf1 += "<th></th>";
                            strESPconf1 += "<th></th>";
                            strESPconf1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Confirmed)</th>";
                            strESPconf1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPconf1 += "<th class=\"tr_c\">" + decESPnOtHConf.ToString("0.00") + "</th>";
                                strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPconf1 += "<th class=\"tr_c\">" + decESPhOtHConf.ToString("0.00") + "</th>";
                                strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf1 += "<th class=\"tr_c\">" + decESPleavDaysConf.ToString("0.00") + "</th>";
                            strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf1 += "<th class=\"tr_c\">" + decESPgratDaysConf.ToString("0.00") + "</th>";
                            strESPconf1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf1 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPconf1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf1 += "</tr>";
                        }
                        if (p == 1 && strESPconf != "")
                        {


                            if (flagESPcash == 0)
                            {
                                flagESPcash = 1;
                                strESPconf2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }

                            strESPconf2 += "<tr>";
                            strESPconf2 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                            strESPconf2 += "</tr>";
                            strESPconf2 += strESPconf;
                            strESPconf2 += "<tr class=\"fotr_1\">";
                            strESPconf2 += "<th></th>";
                            strESPconf2 += "<th></th>";
                            strESPconf2 += "<th colspan=\"2\" class=\"tr_l\" style='background-color: #f2f2f2 !important;'>Subtotal(Confirmed)</th>";
                            strESPconf2 += "<th class=\"tr_r\" style='background-color: #f2f2f2 !important;'>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPconf2 += "<th class=\"tr_c\">" + decESPnOtHConf.ToString("0.00") + "</th>";
                                strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPconf2 += "<th class=\"tr_c\">" + decESPhOtHConf.ToString("0.00") + "</th>";
                                strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf2 += "<th class=\"tr_c\">" + decESPleavDaysConf.ToString("0.00") + "</th>";
                            strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf2 += "<th class=\"tr_c\">" + decESPgratDaysConf.ToString("0.00") + "</th>";
                            strESPconf2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf2 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPconf2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPconf2 += "</tr>";
                        }

                        if (strESPconf1 != "")
                        {
                            strESP += strESPconf1;
                        }
                      
                    }
                    if (strESPpaid != "" || strESPpaid1 != "")
                    {
                        if (p == 0 && strESPpaid != "")
                        {
                            if (flagESPbank == 0)
                            {
                                flagESPbank = 1;
                                strESPpaid1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strESPpaid1 += "<tr>";
                            strESPpaid1 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strESPpaid1 += "</tr>";
                            strESPpaid1 += strESPpaid;
                            strESPpaid1 += "<tr class=\"fotr_1\">";
                            strESPpaid1 += "<th></th>";
                            strESPpaid1 += "<th></th>";
                            strESPpaid1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Paid)</th>";
                            strESPpaid1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPpaid1 += "<th class=\"tr_c\">" + decESPnOtHPaid.ToString("0.00") + "</th>";
                                strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPpaid1 += "<th class=\"tr_c\">" + decESPhOtHPaid.ToString("0.00") + "</th>";
                                strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid1 += "<th class=\"tr_c\">" + decESPleavDaysPaid.ToString("0.00") + "</th>";
                            strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid1 += "<th class=\"tr_c\">" + decESPgratDaysPaid.ToString("0.00") + "</th>";
                            strESPpaid1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid1 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPpaid1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid1 += "</tr>";
                        }


                        if (p == 1 && strESPpaid != "")
                        {
                            if (flagESPcash == 0)
                            {
                                flagESPcash = 1;
                                strESPpaid2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strESPpaid2 += "<tr>";
                            strESPpaid2 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                            strESPpaid2 += "</tr>";
                            strESPpaid2 += strESPpaid;
                            strESPpaid2 += "<tr class=\"fotr_1\">";
                            strESPpaid2 += "<th></th>";
                            strESPpaid2 += "<th></th>";
                            strESPpaid2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Paid)</th>";
                            strESPpaid2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";


                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPpaid2 += "<th class=\"tr_c\">" + decESPnOtHPaid.ToString("0.00") + "</th>";
                                strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPpaid2 += "<th class=\"tr_c\">" + decESPhOtHPaid.ToString("0.00") + "</th>";
                                strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid2 += "<th class=\"tr_c\">" + decESPleavDaysPaid.ToString("0.00") + "</th>";
                            strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid2 += "<th class=\"tr_c\">" + decESPgratDaysPaid.ToString("0.00") + "</th>";
                            strESPpaid2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid2 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPpaid2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPpaid2 += "</tr>";
                        }

                        if (strESPpaid1 != "")
                        {
                            strESP += strESPpaid1;
                        }
                       
                    }
                    if (strESPclos != "" || strESPclos1 != "" || p == 2)
                    {

                        if (p == 0 && strESPclos != "")
                        {


                            if(flagESPbank==0){

                                flagESPbank = 1;
                            strESPclos1 += "<tr> <td colspan=21 class='td_bnk tr_l'>Bank</td> </tr>";
                            }
                            strESPclos1 += "<tr>";
                            strESPclos1 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strESPclos1 += "</tr>";
                            strESPclos1 += strESPclos;
                            strESPclos1 += "<tr class=\"fotr_1\">";
                            strESPclos1 += "<th></th>";
                            strESPclos1 += "<th></th>";
                            strESPclos1 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Closed)</th>";
                            strESPclos1 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPclos1 += "<th class=\"tr_c\">" + decESPnOtHClos.ToString("0.00") + "</th>";
                                strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPclos1 += "<th class=\"tr_c\">" + decESPhOtHClos.ToString("0.00") + "</th>";
                                strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos1 += "<th class=\"tr_c\">" + decESPleavDaysClos.ToString("0.00") + "</th>";
                            strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos1 += "<th class=\"tr_c\">" + decESPgratDaysClos.ToString("0.00") + "</th>";
                            strESPclos1 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos1 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPclos1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos1 += "</tr>";
                        }
                        if (p == 1 && strESPclos != "")
                        {


                            if (flagESPcash == 0)
                            {
                                flagESPcash = 1;
                                strESPclos2 += "<tr> <td colspan=21 class='td_bnk tr_l'>Cash</td> </tr>";
                            }
                            strESPclos2 += "<tr>";
                            strESPclos2 += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                            strESPclos2 += "</tr>";
                            strESPclos2 += strESPclos;
                            strESPclos2 += "<tr class=\"fotr_1\">";
                            strESPclos2 += "<th></th>";
                            strESPclos2 += "<th></th>";
                            strESPclos2 += "<th colspan=\"2\" class=\"tr_l\" background-color: #f2f2f2 !important;>Subtotal(Closed)</th>";
                            strESPclos2 += "<th class=\"tr_r\" background-color: #f2f2f2 !important;>" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESPclos2 += "<th class=\"tr_c\">" + decESPnOtHClos.ToString("0.00") + "</th>";
                                strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPclos2 += "<th class=\"tr_c\">" + decESPhOtHClos.ToString("0.00") + "</th>";
                                strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos2 += "<th class=\"tr_c\">" + decESPleavDaysClos.ToString("0.00") + "</th>";
                            strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos2 += "<th class=\"tr_c\">" + decESPgratDaysClos.ToString("0.00") + "</th>";
                            strESPclos2 += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos2 += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESPclos2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESPclos2 += "</tr>";
                        }

                        if (strESPclos1 != "")
                        {
                            strESP += strESPclos1;

                        }

                        if (strESP2 != "")
                        {
                            strESP += strESP2;
                        }
                        if (strESPconf2 != "")
                        {
                            strESP += strESPconf2;
                        }
                        if (strESPpaid2 != "")
                        {
                            strESP += strESPpaid2;
                        }
                        if (strESPclos2 != "")
                        {
                            strESP += strESPclos2;

                        }

                        if (p == 2)
                        {

                            strESP += "</tbody>";
                            strESP += "<tfoot>";
                            strESP += "<tr class=\"fotr_1_1\">";
                            strESP += "<th></th>";
                            strESP += "<th></th>";
                            strESP += "<th colspan=\"2\" class=\"tr_l\">Grand Total</th>";
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                strESP += "<th class=\"tr_c\">" + decESPnOtH.ToString("0.00") + "</th>";
                                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP += "<th class=\"tr_c\">" + decESPhOtH.ToString("0.00") + "</th>";
                                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                            {
                                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                            {
                                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            }
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP += "<th class=\"tr_c\">" + decESPleavDays.ToString("0.00") + "</th>";
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP += "<th class=\"tr_c\">" + decESPgratDays.ToString("0.00") + "</th>";
                            strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSal, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                            strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                            strESP += "</tr>";
                        }

                        strESP += "</tfoot>";
                        strESP += "</table>";
                        divESP.InnerHtml = strESP;

                    }
                    else if (strESPsave == "" && strESPconf == "" && strESPpaid == "" && strESPclos == "")
                    {
                    //    linkESP.Visible = false;
                    }
                }
                HiddenFieldNOTrate.Value = strNormalOtRate;
                HiddenFieldHOTrate.Value = strHolidayOtRate;

                //Department wise tables
                string strHtmlDeptHeadC = "", strHtmlDeptHead = "";
                string strMSPdeptCnt = "", strLSPdeptCnt = "", strESPdeptCnt = "", strNetdeptCnt = "";
                string strMSPdeptNet = "", strLSPdeptNet = "", strESPdeptNet = "", strNetdeptNet = "";
                int cnt = 0, ColWiseTot = 0, MSPcnt = 0, LSPcnt = 0, ESPcnt = 0;
                decimal net = 0, ColWiseTotNet = 0, MSPnet = 0, LSPnet = 0, ESPnet = 0;
                decimal Basic = 0, RowWiseTotBasic = 0;
                string strNetdeptBasic = "", strNetdeptNOT = "", strNetdeptHOT = "";
                string strdeptAdd = "", strdeptAddNet = "";
                decimal Add = 0, RowWiseTotAdd = 0, RowWiseTotAddG = 0;
                string strdeptDed = "", strdeptDedNet = "";
                decimal Ded = 0, RowWiseTotDed = 0, RowWiseTotDedG = 0;

                DataView dtview = new DataView(dtDept);
                DataTable dtDistdept = dtview.ToTable(true, "CPRDEPT_ID", "CPRDEPT_NAME");

                DataTable dtPriAdd = new DataTable();
                dtPriAdd.Columns.Add("CPRDEPT_ID", typeof(string));
                dtPriAdd.Columns.Add("ADD", typeof(decimal));
                DataTable dtPriDed = new DataTable();
                dtPriDed.Columns.Add("CPRDEPT_ID", typeof(string));
                dtPriDed.Columns.Add("DED", typeof(decimal));

                string strPriAdd = "", strPriDed = "";
                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                {
                    decimal decNetAmnt = 0;
                    strPriAdd += "<tr>";
                    strPriAdd += "<td class=\"tr_l\">Total Amount (" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + ")</td>";
                    for (int i = 0; i < dtDistdept.Rows.Count; i++)
                    {
                        decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        strPriAdd += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        decNetAmnt += decAmnt;
                        DataRow drDtl = dtPriAdd.NewRow();
                        drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                        drDtl["ADD"] = decAmnt;
                        dtPriAdd.Rows.Add(drDtl);
                    }
                    strPriAdd += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strPriAdd += "</tr>";
                }
                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                {
                    decimal decNetAmnt = 0;
                    strPriDed += "<tr>";
                    strPriDed += "<td class=\"tr_l\">Total Amount (" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + ")</td>";
                    for (int i = 0; i < dtDistdept.Rows.Count; i++)
                    {
                        decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        strPriDed += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        decNetAmnt += decAmnt;
                        DataRow drDtl = dtPriDed.NewRow();
                        drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                        drDtl["DED"] = decAmnt;
                        dtPriDed.Rows.Add(drDtl);
                    }
                    strPriDed += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strPriDed += "</tr>";
                }
                for (int i = 0; i < dtDistdept.Rows.Count; i++)
                {
                    ColWiseTotNet = 0; ColWiseTot = 0;

                    strHtmlDeptHeadC += "<th class=\"th_b6\">" + dtDistdept.Rows[i][1].ToString() + "</th>";

                    strHtmlDeptHead += "<th class=\"th_b6 tr_r\">" + dtDistdept.Rows[i][1].ToString() + "</th>";

                    //MSP
                    DataRow[] dr = dtDept.Select("PAGE=1 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                    cnt = 0; net = 0; Basic = 0; Add = 0; Ded = 0;
                    if (dr.Length > 0)
                    {
                        cnt = Convert.ToInt32(dr[0]["CNT"].ToString());
                        net = Convert.ToDecimal(dr[0]["NET_AMNT"].ToString());
                        Basic += Convert.ToDecimal(dr[0]["SUM_BASIC"].ToString());
                        Add += Convert.ToDecimal(dr[0]["TOTAL_ADD"].ToString());
                        Ded += Convert.ToDecimal(dr[0]["TOTAL_DED"].ToString());
                    }
                    strMSPdeptCnt += "<td>" + cnt + "</td>";
                    ColWiseTot += cnt;
                    MSPcnt += cnt;
                    strMSPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    ColWiseTotNet += net;
                    MSPnet += net;
                    //LSP
                    DataRow[] dr1 = dtDept.Select("PAGE=2 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                    cnt = 0; net = 0;
                    if (dr1.Length > 0)
                    {
                        cnt = Convert.ToInt32(dr1[0]["CNT"].ToString());
                        net = Convert.ToDecimal(dr1[0]["NET_AMNT"].ToString());
                        Basic += Convert.ToDecimal(dr1[0]["SUM_BASIC"].ToString());
                        Add += Convert.ToDecimal(dr1[0]["TOTAL_ADD"].ToString());
                        Ded += Convert.ToDecimal(dr1[0]["TOTAL_DED"].ToString());
                    }
                    strLSPdeptCnt += "<td>" + cnt + "</td>";
                    ColWiseTot += cnt;
                    LSPcnt += cnt;
                    strLSPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    ColWiseTotNet += net;
                    LSPnet += net;
                    //ESP
                    DataRow[] dr2 = dtDept.Select("PAGE=3 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                    cnt = 0; net = 0;
                    if (dr2.Length > 0)
                    {
                        cnt = Convert.ToInt32(dr2[0]["CNT"].ToString());
                        net = Convert.ToDecimal(dr2[0]["NET_AMNT"].ToString());
                        Basic += Convert.ToDecimal(dr2[0]["SUM_BASIC"].ToString());
                        Add += Convert.ToDecimal(dr2[0]["TOTAL_ADD"].ToString());
                        Ded += Convert.ToDecimal(dr2[0]["TOTAL_DED"].ToString());
                    }
                    strESPdeptCnt += "<td>" + cnt + "</td>";
                    ColWiseTot += cnt;
                    ESPcnt += cnt;
                    strESPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    ColWiseTotNet += net;
                    ESPnet += net;

                    decimal decAmntA = 0, decAmntD = 0;
                    if (dtadd.Rows.Count > 0)
                    {
                        decAmntA = Convert.ToDecimal(dtPriAdd.Compute("Sum(ADD)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    }
                    if (dtDed.Rows.Count > 0)
                    {
                        decAmntD = Convert.ToDecimal(dtPriDed.Compute("Sum(DED)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    }
                    decimal decNotAmnt = 0, decHotAmnt = 0;
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        decNotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(NORMAL)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        decHotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(HOLIDAY)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        strNetdeptNOT += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNotAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strNetdeptHOT += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decHotAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    //Add
                    strdeptAdd += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((Add - decAmntA - decNotAmnt - decHotAmnt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    //Ded
                    strdeptDed += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((Ded - decAmntD), roundNum).ToString("0.00"), objEntityCommon) + "</td>";

                    //Net
                    RowWiseTotAddG += Add;
                    RowWiseTotDedG += Ded;
                    RowWiseTotBasic += Basic;
                    RowWiseTotAdd += (Add - decAmntA - decNotAmnt - decHotAmnt);
                    RowWiseTotDed += (Ded - decAmntD);
                    strNetdeptCnt += "<th class=\"tr_c\">" + ColWiseTot + "</th>";
                    strNetdeptNet += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(ColWiseTotNet, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strNetdeptBasic += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Basic, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strdeptAddNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Add, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strdeptDedNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Ded, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                }

                string strHtmlEmpCnt = "";
                strHtmlEmpCnt += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
                strHtmlEmpCnt += "<thead class=\"thead1\">";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<th colspan=\"3 \">EMPLOYEE COUNT</th>";
                strHtmlEmpCnt += "</tr>";

                //0041
                if (ddlpaymentmode.SelectedItem.Value == "0")
                {
                    strHtmlEmpCnt += "<tr>";
                    strHtmlEmpCnt += "<td colspan=21 class=td_bnk tr_l>Bank</td>";
                    strHtmlEmpCnt += "</tr>";
                }
                if (ddlpaymentmode.SelectedItem.Value == "1")
                {
                    strHtmlEmpCnt += "<tr>";
                    strHtmlEmpCnt += "<td colspan=21 class=td_bnk tr_l>Cash</td>";
                    strHtmlEmpCnt += "</tr>";
                }

                if (p == 0)
                {

                    strMSPdeptCntbank = strMSPdeptCnt;
                    strLSPdeptCntbank = strLSPdeptCnt;
                    strESPdeptCntbank = strESPdeptCnt;
                    MSPcntbank = MSPcnt;
                    LSPcntbank = LSPcnt;
                    ESPcntbank = ESPcnt;
                }
                if (p == 1)
                {
                    strMSPdeptCntcash = strMSPdeptCnt;
                    strLSPdeptCntcash = strLSPdeptCnt;
                    strESPdeptCntcash = strESPdeptCnt;
                    MSPcntcash = MSPcnt;
                    LSPcntcash = LSPcnt;
                    ESPcntcash = ESPcnt;
                }




                if (strHtmlDeptHeadC != "")
                {
                    strHtmlDptHeadC = strHtmlDeptHeadC;
                }
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<th class=\"th_b4 tr_l\">Description</th>";
                strHtmlEmpCnt += strHtmlDptHeadC;
                strHtmlEmpCnt += "<th class=\"th_b6\">Net Total</th>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "</thead>";
                strHtmlEmpCnt += "<tbody>";





                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td colspan=21 class='td_bnk tr_l'>Bank</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Monthly Salary)</td>";
                strHtmlEmpCnt += "<td>" + MSPcntbank + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + MSPcntbank + "</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Leave Settlement)</td>";
                strHtmlEmpCnt += "<td>" + LSPcntbank + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + LSPcntbank + "</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (End of Service Settlement)</td>";
                strHtmlEmpCnt += "<td>" + ESPcntbank + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + ESPcntbank + "</td>";
                strHtmlEmpCnt += "</tr>";

                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td colspan=21 class='td_bnk tr_l'>Cash</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Monthly Salary)</td>";
                strHtmlEmpCnt += "<td>" + MSPcntcash + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + MSPcntcash + "</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Leave Settlement)</td>";
                strHtmlEmpCnt += "<td>" + LSPcntcash + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + LSPcntcash + "</td>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (End of Service Settlement)</td>";
                strHtmlEmpCnt += "<td>" + ESPcntcash + "</td>";
                strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + ESPcntcash + "</td>";
                strHtmlEmpCnt += "</tr>";

                strHtmlEmpCnt += "</tbody>";
                strHtmlEmpCnt += "<tfoot>";
                strHtmlEmpCnt += "<tr class=\"fotr_1\">";
                strHtmlEmpCnt += "<th class=\"tr_l\">Total Employee#</th>";
                strHtmlEmpCnt += "<th class=tr_c>" + (MSPcntbank + LSPcntbank + ESPcntbank + MSPcntcash + LSPcntcash + ESPcntcash) + "</th>";
                strHtmlEmpCnt += "<th class=\"tr_c nt_tl\">" + (MSPcntbank + LSPcntbank + ESPcntbank + MSPcntcash + LSPcntcash + ESPcntcash) + "</th>";
                strHtmlEmpCnt += "</tr>";
                strHtmlEmpCnt += "</tfoot>";
                strHtmlEmpCnt += "</table>";
                divEmpCnt.InnerHtml = strHtmlEmpCnt;


                string strcurrenWord = objBusiness.ConvertCurrencyToWords(objEntityCommon, (MSPnet + LSPnet + ESPnet).ToString("0.00").Replace(",", ""));

                string strHtmlNetSum = "";
                strHtmlNetSum += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
                strHtmlNetSum += "<thead class=\"thead1\">";


                strHtmlNetSum += "<tr>";
                strHtmlNetSum += "<th colspan=\"3\">Net Summary</th>";
                strHtmlNetSum += "</tr>";

                //0041
                if (ddlpaymentmode.SelectedItem.Value == "0")
                {
                    strHtmlNetSum += "<tr>";
                    strHtmlNetSum += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                    strHtmlNetSum += "</tr>";
                }
                if (ddlpaymentmode.SelectedItem.Value == "1")
                {
                    strHtmlNetSum += "<tr>";
                    strHtmlNetSum += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                    strHtmlNetSum += "</tr>";
                }

                if (strMSPdeptNet == "" && strLSPdeptNet == "" && strESPdeptNet == "" && strNetdeptNet == "")
                {

                    strMSPdeptNet = "<td class=tr_r>0.00</td>";
                    strLSPdeptNet = "<td class=tr_r>0.00</td>";
                    strESPdeptNet = "<td class=tr_r>0.00</td>";
                    strNetdeptNet = "<td class=tr_r>0.00</td>";


                }
                strHtmlNetSum += "<tr>";
                strHtmlNetSum += "<th class=\"th_b4 tr_l\">Description</th>";
                strHtmlNetSum += strHtmlDptHead;
                strHtmlNetSum += "<th class=\"th_b6 tr_r\">Net Total</th>";
                strHtmlNetSum += "</tr>";
                strHtmlNetSum += "</thead>";
                strHtmlNetSum += "<tbody>";

                if (p == 0)
                {

                    strHtmlNetSum1 += "<tr>";
                    strHtmlNetSum1 += "<td colspan=18 class='td_bnk tr_l'>Bank</td>";
                    strHtmlNetSum1 += "</tr>";
                    strHtmlNetSum1 += "<tr>";
                    strHtmlNetSum1 += "<td class=\"tr_l\">Total Amount (Monthly Salary)</td>";
                    strHtmlNetSum1 += strMSPdeptNet;
                    strHtmlNetSum1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(MSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum1 += "</tr>";
                    strHtmlNetSum1 += "<tr>";
                    strHtmlNetSum1 += "<td class=\"tr_l\">Total Amount (Leave Settlement)</td>";
                    strHtmlNetSum1 += strLSPdeptNet;
                    strHtmlNetSum1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(LSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum1 += "</tr>";
                    strHtmlNetSum1 += "<tr>";
                    strHtmlNetSum1 += "<td class=\"tr_l\">Total Amount (End of Service Settlement)</td>";
                    strHtmlNetSum1 += strESPdeptNet;
                    strHtmlNetSum1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(ESPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum1 += "</tr>";
                    strHtmlNetSum1 += "</tbody>";
                    //strHtmlNetSum1 += "<tfoot>";
                    strHtmlNetSum1 += "<tr class=\"fotr_1\">";
                    strHtmlNetSum1 += "<th class=\"tr_l\">Net Amount</th>";
                    strHtmlNetSum1 += strNetdeptNet;
                    strHtmlNetSum1 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((MSPnet + LSPnet + ESPnet), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strHtmlNetSum1 += "</tr>";
                    strHtmlNetSum1 += "<tr class=\"fotr_1\">";
                    strHtmlNetSum1 += "<th class=\"tr_l\" style=background-Color:#f1f1f1 !important;>Amount in Words</th>";
                    strHtmlNetSum1 += "<th class=\"tr_l bg_wt\" colspan=\"" + (dtDistdept.Rows.Count + 1) + "\">" + strcurrenWord + "</th>";
                    strHtmlNetSum1 += "</tr>";
                    //strHtmlNetSum1 += "</tfoot>";
                }

                if (p == 1)
                {

                    strHtmlNetSum2 += "<tr>";
                    strHtmlNetSum2 += "<td colspan=18 class='td_bnk tr_l'>Cash</td>";
                    strHtmlNetSum2 += "</tr>";
                    strHtmlNetSum2 += "<tr>";
                    strHtmlNetSum2 += "<td class=\"tr_l\">Total Amount (Monthly Salary)</td>";
                    strHtmlNetSum2 += strMSPdeptNet;
                    strHtmlNetSum2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(MSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum2 += "</tr>";
                    strHtmlNetSum2 += "<tr>";
                    strHtmlNetSum2 += "<td class=\"tr_l\">Total Amount (Leave Settlement)</td>";
                    strHtmlNetSum2 += strLSPdeptNet;
                    strHtmlNetSum2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(LSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum2 += "</tr>";
                    strHtmlNetSum2 += "<tr>";
                    strHtmlNetSum2 += "<td class=\"tr_l\">Total Amount (End of Service Settlement)</td>";
                    strHtmlNetSum2 += strESPdeptNet;
                    strHtmlNetSum2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(ESPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtmlNetSum2 += "</tr>";
                    strHtmlNetSum2 += "</tbody>";
                    //strHtmlNetSum2 += "<tfoot>";
                    strHtmlNetSum2 += "<tr class=\"fotr_1\">";
                    strHtmlNetSum2 += "<th class=\"tr_l\">Net Amount</th>";
                    strHtmlNetSum2 += strNetdeptNet;
                    strHtmlNetSum2 += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((MSPnet + LSPnet + ESPnet), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strHtmlNetSum2 += "</tr>";
                    strHtmlNetSum2 += "<tr class=\"fotr_1\">";
                    strHtmlNetSum2 += "<th class=\"tr_l\" style=background-Color:#f1f1f1 !important;>Amount in Words</th>";
                    strHtmlNetSum2 += "<th class=\"tr_l bg_wt\" colspan=\"" + (dtDistdept.Rows.Count + 1) + "\">" + strcurrenWord + "</th>";
                    strHtmlNetSum2 += "</tr>";
                    //strHtmlNetSum2 += "</tfoot>";
                }



                if (strHtmlNetSum1 != "")
                {

                    strHtmlNetSum += strHtmlNetSum1;
                }

                if (strHtmlNetSum2 != "")
                {

                    strHtmlNetSum += strHtmlNetSum2;
                }

                strHtmlNetSum += "</tbody>";
                strHtmlNetSum += "</table>";
                divNetSummary.InnerHtml = strHtmlNetSum;


                string strHtmlSalary = "";
                strHtmlSalary += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
                strHtmlSalary += "<thead class=\"thead1\">";
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<th colspan=\"3\">Salary</th>";
                strHtmlSalary += "</tr>";

                //0041

                if (ddlpaymentmode.SelectedItem.Value == "0")
                {
                    strHtmlSalary += "<tr>";
                    strHtmlSalary += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                    strHtmlSalary += "</tr>";
                }
                if (ddlpaymentmode.SelectedItem.Value == "1")
                {
                    strHtmlSalary += "<tr>";
                    strHtmlSalary += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                    strHtmlSalary += "</tr>";
                }

                if (strHtmlDeptHead != "")
                {

                    strHtmlDptHead = strHtmlDeptHead;

                }

                //004
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<th class=\"th_b4 tr_l\">Description</th>";
                strHtmlSalary += strHtmlDptHead;
                strHtmlSalary += "<th class=\"th_b6 tr_r\">Net Total</th>";
                strHtmlSalary += "</tr>";
                strHtmlSalary += "</thead>";
                strHtmlSalary += "<tbody>";

                if (strNetdeptNOT == "" && strNetdeptHOT == "")
                {
                    strNetdeptNOT = "<td class=tr_r>0.00</td>";
                    strNetdeptHOT = "<td class=tr_r>0.00</td>";
                }
                if (strNetdeptBasic == "" && strPriAdd == "" && strdeptAdd == "" && strdeptAddNet == "" && strPriDed == "" && strdeptDed == "" && strdeptDedNet == "")
                {
                    strNetdeptBasic = "<td class=tr_r>0.00</td>";

                    strdeptAdd = "<td class=tr_r>0.00</td>";
                    strdeptAddNet = "<td class=tr_r>0.00</td>";

                    strdeptDed = "<td class=tr_r>0.00</td>";
                    strdeptDedNet = "<td class=tr_r>0.00</td>";
                }
                if (p == 0)
                {
                    strHtml1 += "<tr>";
                    strHtml1 += "<td colspan=18 class='td_bnk tr_l'>Bank</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += "<tr>";
                    strHtml1 += "<td class=\"tr_l\">Total Amount (Basic Salary)</td>";
                    strHtml1 += strNetdeptBasic;
                    strHtml1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotBasic, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml1 += "</tr>";


                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strHtml1 += "<tr>";
                        strHtml1 += "<td class=\"tr_l\">Total Amount (Normal OT)</td>";
                        strHtml1 += strNetdeptNOT;
                        strHtml1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPnOtAmt + decLSPnOtAmt + decESPnOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strHtml1 += "</tr>";
                        strHtml1 += "<tr>";
                        strHtml1 += "<td class=\"tr_l\">Total Amount (Holiday OT)</td>";
                        strHtml1 += strNetdeptHOT;
                        strHtml1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPhOtAmt + decLSPhOtAmt + decESPhOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strHtml1 += "</tr>";

                    }
                    strHtml1 += "<tr>";
                    strHtml1 += "<td colspan=\" 3\" class=\"td_fb tr_l\" style=\"background-color:#4a9dd6;color: #fff;\">Additions</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += strPriAdd;
                    strHtml1 += "<tr>";
                    strHtml1 += "<td class=\"tr_l\">Total Amount (Other Additions)</td>";
                    strHtml1 += strdeptAdd;
                    strHtml1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += "<tr class=\"td_fb\">";
                    strHtml1 += "<td class=\"tr_l\">Total Amount(All Additions)</td>";
                    strHtml1 += strdeptAddNet;
                    strHtml1 += "<td class=\" tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += "<tr>";
                    strHtml1 += "<td colspan=\"3\" class=\"td_fb tr_l\" style=\"background-color: #4a9dd6;color: #fff;\">Deductions</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += strPriDed;
                    strHtml1 += "<tr>";
                    strHtml1 += "<td class=\"tr_l\">Total Amount (Other Deductions)</td>";
                    strHtml1 += strdeptDed;
                    strHtml1 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml1 += "</tr>";
                    strHtml1 += "<tr class=\" td_fb\">";
                    strHtml1 += "<td class=\"tr_l\">Total Amount(All Deductions)</td>";
                    strHtml1 += strdeptDedNet;
                    strHtml1 += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml1 += "</tr>";



                }

                //


                if (p == 1)
                {
                    strHtml2 += "<tr>";
                    strHtml2 += "<td colspan=18 class='td_bnk tr_l'>Cash</td>";
                    strHtml2 += "</tr>";
                    strHtml2 += "<tr>";
                    strHtml2 += "<td class=\"tr_l\">Total Amount (Basic Salary)</td>";
                    strHtml2 += strNetdeptBasic;
                    strHtml2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotBasic, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml2 += "</tr>";


                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strHtml2 += "<tr>";
                        strHtml2 += "<td class=\"tr_l\">Total Amount (Normal OT)</td>";
                        strHtml2 += strNetdeptNOT;
                        strHtml2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPnOtAmt + decLSPnOtAmt + decESPnOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strHtml2 += "</tr>";
                        strHtml2 += "<tr>";
                        strHtml2 += "<td class=\"tr_l\">Total Amount (Holiday OT)</td>";
                        strHtml2 += strNetdeptHOT;
                        strHtml2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPhOtAmt + decLSPhOtAmt + decESPhOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        strHtml2 += "</tr>";

                    }
                    strHtml2 += "<tr>";
                    strHtml2 += "<td colspan=\"3\" class=\"td_fb tr_l\" style=\"background-color:#4a9dd6;color: #fff;\">Additions</td>";
                    strHtml2 += "</tr>";

                    strHtml2 += strPriAdd;
                    strHtml2 += "<tr>";
                    strHtml2 += "<td class=\"tr_l\">Total Amount (Other Additions)</td>";
                    strHtml2 += strdeptAdd;
                    strHtml2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml2 += "</tr>";
                    strHtml2 += "<tr class=\"td_fb\">";
                    strHtml2 += "<td class=\"tr_l\">Total Amount(All Additions)</td>";
                    strHtml2 += strdeptAddNet;
                    strHtml2 += "<td class=\" tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml2 += "</tr>";
                    strHtml2 += "<tr>";
                    strHtml2 += "<td colspan=\" 3\" class=\"td_fb tr_l\" style=\"background-color: #4a9dd6;color: #fff;\">Deductions</td>";
                    strHtml2 += "</tr>";
                    strHtml2 += strPriDed;
                    strHtml2 += "<tr>";
                    strHtml2 += "<td class=\"tr_l\">Total Amount (Other Deductions)</td>";
                    strHtml2 += strdeptDed;
                    strHtml2 += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml2 += "</tr>";
                    strHtml2 += "<tr class=\" td_fb\">";
                    strHtml2 += "<td class=\"tr_l\">Total Amount(All Deductions)</td>";
                    strHtml2 += strdeptDedNet;
                    strHtml2 += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strHtml2 += "</tr>";

                }

                if (strHtml1 != "")
                {
                    strHtmlSalary += strHtml1;
                }
                if (strHtml2 != "")
                {
                    strHtmlSalary += strHtml2;
                }

                strHtmlSalary += "</tbody>";
                strHtmlSalary += "</table>";
                divSalary.InnerHtml = strHtmlSalary;


               
            }

        }

        if (divMSP.InnerHtml.Length < 50)
        {
            linkMSP.Visible = false;
        }
        if (divLSP.InnerHtml.Length <50)
        {
            linkLSP.Visible = false;
        }
        if (divESP.InnerHtml.Length <50)
        {
            linkESP.Visible = false;
        }
    }
    //0041
    public void ConvertDataTabletoHTML(DataTable dtRead, DataTable dtDept, clsEntityMonthlySalaryStatement objEntityIntervewProcess)
    {
        clsBusinessLayerSalaryStatement objSalarySatement = new clsBusinessLayerSalaryStatement();
        clsEntityLayerSalaryStatement objEntitySalry = new clsEntityLayerSalaryStatement();
        clsCommonLibrary objCommon = new clsCommonLibrary();
        var strSALARPRS = Session["SALARPRS"];
        string[] StrProsId = strSALARPRS.ToString().Split('~');
        objEntitySalry.CorpID = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
        objEntitySalry.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
        objEntitySalry.SavConf = Convert.ToInt32(StrProsId[0]);
        objEntitySalry.CorpOffice = Convert.ToInt32(StrProsId[1]);
        objEntitySalry.StffWrkr = Convert.ToInt32(StrProsId[2]);
        if (StrProsId[3] != "0" && StrProsId[3] != "" && StrProsId[3] != null)
        {
            objEntitySalry.date = objCommon.textToDateTime(StrProsId[3]);
        }
        objEntitySalry.Month = Convert.ToInt32(StrProsId[4]);
        objEntitySalry.Year = Convert.ToInt32(StrProsId[5]);
        objEntitySalry.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
        DataTable dtorglist = objSalarySatement.LoadSalaryPrssListPrssTable(objEntitySalry);

        DataView dv = new DataView(dtRead);
        DataTable dt = new DataTable();

        for (int y = 0; y < dtorglist.Rows.Count; y++)
        {
            dv.RowFilter = "EID ='" + dtorglist.Rows[y]["EID"] + "'";

            //  dd = dv.Table.Clone();
            dt.Merge(dv.ToTable());


        }

        ConvertDataTableToHTMLSearch(dt, dtDept, objEntityIntervewProcess);

        divLSP.InnerHtml = "";
        divESP.InnerHtml = "";
        divNetSummary.InnerHtml = "";
        divSalary.InnerHtml = "";
        divEmpCnt.InnerHtml = "";
        Statmnt_Sumry.InnerHtml = "";
        sta_print.Visible = false;


    }

    //END

    public void ConvertDataTableToHTMLpdf(DataTable dt, DataTable dtDept, clsEntityMonthlySalaryStatement objEntityIntervewProcess)
    {



        if (dt.Rows.Count > 0)
        {
            int cntMSPsave = 0, cntMSPconf = 0, cntMSPpaid = 0, cntMSPclos = 0;
            int cntMSPsaveCurr = 0, cntMSPconfCurr = 0, cntMSPpaidCurr = 0, cntMSPclosCurr = 0;

            int cntLSPsave = 0, cntLSPconf = 0, cntLSPpaid = 0, cntLSPclos = 0;
            int cntLSPsaveCurr = 0, cntLSPconfCurr = 0, cntLSPpaidCurr = 0, cntLSPclosCurr = 0;

            int cntESPsave = 0, cntESPconf = 0, cntESPpaid = 0, cntESPclos = 0;
            int cntESPsaveCurr = 0, cntESPconfCurr = 0, cntESPpaidCurr = 0, cntESPclosCurr = 0;

            cntMSPsave = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 1"));
            cntMSPconf = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 2"));
            cntMSPpaid = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 3"));
            cntMSPclos = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 4"));

            cntLSPsave = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 1"));
            cntLSPconf = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 2"));
            cntLSPpaid = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 3"));
            cntLSPclos = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 4"));

            cntESPsave = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 1"));
            cntESPconf = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 2"));
            cntESPpaid = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 3"));
            cntESPclos = Convert.ToInt32(dt.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 4"));



            TextInfo tInfo = new CultureInfo("en-US", false).TextInfo;
            string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
            monthName = monthName + " " + objEntityIntervewProcess.Year;
            clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
            int intShowAdd = Convert.ToInt32(HiddenFieldShowAdd.Value);
            int intShowDed = Convert.ToInt32(HiddenFieldShowDed.Value);

            int daysInm = DateTime.DaysInMonth(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month);
            string strMSPsave = "", strMSPconf = "", strMSPpaid = "", strMSPclos = "";
            string strLSPsave = "", strLSPconf = "", strLSPpaid = "", strLSPclos = "";
            string strESPsave = "", strESPconf = "", strESPpaid = "", strESPclos = "";
            string strNormalOtRate = HiddenFieldNOTrate.Value, strHolidayOtRate = HiddenFieldHOTrate.Value, strCrnAbbr = "";
            decimal decMSPproBasic = 0, decMSPproBasicSave = 0, decMSPproBasicConf = 0, decMSPproBasicPaid = 0, decMSPproBasicClos = 0;
            decimal decMSPadd = 0, decMSPaddSave = 0, decMSPaddConf = 0, decMSPaddPaid = 0, decMSPaddClos = 0;
            decimal decMSPded = 0, decMSPdedSave = 0, decMSPdedConf = 0, decMSPdedPaid = 0, decMSPdedClos = 0;
            decimal decMSPnOtH = 0, decMSPnOtHSave = 0, decMSPnOtHConf = 0, decMSPnOtHPaid = 0, decMSPnOtHClos = 0;
            decimal decMSPnOtAmt = 0, decMSPnOtAmtSave = 0, decMSPnOtAmtConf = 0, decMSPnOtAmtPaid = 0, decMSPnOtAmtClos = 0;
            decimal decMSPhOtH = 0, decMSPhOtHSave = 0, decMSPhOtHConf = 0, decMSPhOtHPaid = 0, decMSPhOtHClos = 0;
            decimal decMSPhOtAmt = 0, decMSPhOtAmtSave = 0, decMSPhOtAmtConf = 0, decMSPhOtAmtPaid = 0, decMSPhOtAmtClos = 0;
            decimal decMSPnetOT = 0, decMSPnetOTSave = 0, decMSPnetOTConf = 0, decMSPnetOTPaid = 0, decMSPnetOTClos = 0;
            decimal decMSPnetAmnt = 0, decMSPnetAmntSave = 0, decMSPnetAmntConf = 0, decMSPnetAmntPaid = 0, decMSPnetAmntClos = 0;

            decimal decLSPproBasic = 0, decLSPproBasicSave = 0, decLSPproBasicConf = 0, decLSPproBasicPaid = 0, decLSPproBasicClos = 0;
            decimal decLSPtcktAmnt = 0, decLSPtcktAmntSave = 0, decLSPtcktAmntConf = 0, decLSPtcktAmntPaid = 0, decLSPtcktAmntClos = 0;
            decimal decLSPadd = 0, decLSPaddSave = 0, decLSPaddConf = 0, decLSPaddPaid = 0, decLSPaddClos = 0;
            decimal decLSPded = 0, decLSPdedSave = 0, decLSPdedConf = 0, decLSPdedPaid = 0, decLSPdedClos = 0;
            decimal decLSPleavDays = 0, decLSPleavDaysSave = 0, decLSPleavDaysConf = 0, decLSPleavDaysPaid = 0, decLSPleavDaysClos = 0;
            decimal decLSPleavSal = 0, decLSPleavSalSave = 0, decLSPleavSalConf = 0, decLSPleavSalPaid = 0, decLSPleavSalClos = 0;
            decimal decLSPprevSal = 0, decLSPprevSalSave = 0, decLSPprevSalConf = 0, decLSPprevSalPaid = 0, decLSPprevSalClos = 0;
            decimal decLSPnetAmnt = 0, decLSPnetAmntSave = 0, decLSPnetAmntConf = 0, decLSPnetAmntPaid = 0, decLSPnetAmntClos = 0;
            decimal decLSPnOtH = 0, decLSPnOtHSave = 0, decLSPnOtHConf = 0, decLSPnOtHPaid = 0, decLSPnOtHClos = 0;
            decimal decLSPnOtAmt = 0, decLSPnOtAmtSave = 0, decLSPnOtAmtConf = 0, decLSPnOtAmtPaid = 0, decLSPnOtAmtClos = 0;
            decimal decLSPhOtH = 0, decLSPhOtHSave = 0, decLSPhOtHConf = 0, decLSPhOtHPaid = 0, decLSPhOtHClos = 0;
            decimal decLSPhOtAmt = 0, decLSPhOtAmtSave = 0, decLSPhOtAmtConf = 0, decLSPhOtAmtPaid = 0, decLSPhOtAmtClos = 0;
            decimal decLSPnetOT = 0, decLSPnetOTSave = 0, decLSPnetOTConf = 0, decLSPnetOTPaid = 0, decLSPnetOTClos = 0;

            decimal decESPproBasic = 0, decESPproBasicSave = 0, decESPproBasicConf = 0, decESPproBasicPaid = 0, decESPproBasicClos = 0;
            decimal decESPtcktAmnt = 0, decESPtcktAmntSave = 0, decESPtcktAmntConf = 0, decESPtcktAmntPaid = 0, decESPtcktAmntClos = 0;
            decimal decESPadd = 0, decESPaddSave = 0, decESPaddConf = 0, decESPaddPaid = 0, decESPaddClos = 0;
            decimal decESPded = 0, decESPdedSave = 0, decESPdedConf = 0, decESPdedPaid = 0, decESPdedClos = 0;
            decimal decESPleavDays = 0, decESPleavDaysSave = 0, decESPleavDaysConf = 0, decESPleavDaysPaid = 0, decESPleavDaysClos = 0;
            decimal decESPleavSal = 0, decESPleavSalSave = 0, decESPleavSalConf = 0, decESPleavSalPaid = 0, decESPleavSalClos = 0;
            decimal decESPgratDays = 0, decESPgratDaysSave = 0, decESPgratDaysConf = 0, decESPgratDaysPaid = 0, decESPgratDaysClos = 0;
            decimal decESPgratSal = 0, decESPgratSalSave = 0, decESPgratSalConf = 0, decESPgratSalPaid = 0, decESPgratSalClos = 0;
            decimal decESPprevSal = 0, decESPprevSalSave = 0, decESPprevSalConf = 0, decESPprevSalPaid = 0, decESPprevSalClos = 0;
            decimal decESPnetAmnt = 0, decESPnetAmntSave = 0, decESPnetAmntConf = 0, decESPnetAmntPaid = 0, decESPnetAmntClos = 0;
            decimal decESPnOtH = 0, decESPnOtHSave = 0, decESPnOtHConf = 0, decESPnOtHPaid = 0, decESPnOtHClos = 0;
            decimal decESPnOtAmt = 0, decESPnOtAmtSave = 0, decESPnOtAmtConf = 0, decESPnOtAmtPaid = 0, decESPnOtAmtClos = 0;
            decimal decESPhOtH = 0, decESPhOtHSave = 0, decESPhOtHConf = 0, decESPhOtHPaid = 0, decESPhOtHClos = 0;
            decimal decESPhOtAmt = 0, decESPhOtAmtSave = 0, decESPhOtAmtConf = 0, decESPhOtAmtPaid = 0, decESPhOtAmtClos = 0;
            decimal decESPnetOT = 0, decESPnetOTSave = 0, decESPnetOTConf = 0, decESPnetOTPaid = 0, decESPnetOTClos = 0;

            DataTable dtadd = new DataTable();
            DataTable dtDed = new DataTable();
            if (intShowAdd == 1)
                dtadd = objBusinessIntervewProcess.ReadAllwnc(objEntityIntervewProcess);
            if (intShowDed == 1)
                dtDed = objBusinessIntervewProcess.ReadDedctn(objEntityIntervewProcess);
            DataTable dtOTctgry = new DataTable();
            if (objEntityIntervewProcess.StffWrkr == 1)
            {
                dtOTctgry = objBusinessIntervewProcess.ReadOTctgries(objEntityIntervewProcess);
                if (dtOTctgry.Rows.Count > 0)
                    strCrnAbbr = dtOTctgry.Rows[0]["CRNCMST_ABBRV"].ToString();
            }
            DataTable dtOTDetail = new DataTable();
            dtOTDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtOTDetail.Columns.Add("NORMAL", typeof(decimal));
            dtOTDetail.Columns.Add("HOLIDAY", typeof(decimal));

            DataTable dtDetail = new DataTable();
            dtDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtDetail.Columns.Add("PAGE", typeof(string));
            dtDetail.Columns.Add("STATUS", typeof(string));
            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtadd.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
            }
            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtDed.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
            }

            int roundNum = 2;
            if (HiddenFieldIndividualRound.Value == "1")
            {
                roundNum = 0;
            }
            clsBusinessLayer objBusiness = new clsBusinessLayer();
            clsEntityCommon objEntityCommon = new clsEntityCommon();
            objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
            clsCommonLibrary objCommon = new clsCommonLibrary();
            clsEntityLayerLeaveSettlmt objEntityLeavSettlmt = new clsEntityLayerLeaveSettlmt();
            clsBusinessLayerLeaveSettlmt objBusinessLeavSettlmt = new clsBusinessLayerLeaveSettlmt();
            if (Session["CORPOFFICEID"] != null)
            {
                objEntityLeavSettlmt.CorpId = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
                objEntityCommon.CorporateID = objEntityLeavSettlmt.CorpId;
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }

            if (Session["ORGID"] != null)
            {
                objEntityLeavSettlmt.OrgId = Convert.ToInt32(Session["ORGID"].ToString());
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }
            DataTable dtCorp = objBusinessLeavSettlmt.ReadCorporateAddress(objEntityLeavSettlmt);
            string strCompanyName = "", strCompanyAddr1 = "", strCompanyAddr2 = "", strCompanyAddr3 = "", strCompanyAddrCntry = "", strCompanyLogo = "";
            string strTitle = "";
            strTitle = "MONTHLY SALARY STATEMENT";
            DateTime datetm = DateTime.Now;
            string dat = "<B>Report Date: </B>" + datetm.ToString("R");
            if (dtCorp.Rows.Count > 0)
            {
                strCompanyName = dtCorp.Rows[0]["CORPRT_NAME"].ToString();
                strCompanyAddr1 = dtCorp.Rows[0]["CORPRT_ADDR1"].ToString();
                strCompanyAddr2 = dtCorp.Rows[0]["CORPRT_ADDR2"].ToString();
                strCompanyAddr3 = dtCorp.Rows[0]["CORPRT_ADDR3"].ToString();
                strCompanyAddrCntry = dtCorp.Rows[0]["CNTRY_NAME"].ToString();
                strCompanyLogo = dtCorp.Rows[0]["CORPRT_ICON"].ToString();
            }
            if (strCompanyLogo != "")
            {
                strCompanyLogo = objCommon.GetImagePath(clsCommonLibrary.IMAGE_SECTION.Bussiness_Unit) + strCompanyLogo;
            }
            string strAddress = "";
            strAddress = strCompanyAddr1;
            if (strCompanyAddr2 != "")
            {
                strAddress += ", " + strCompanyAddr2;
            }
            if (strCompanyAddr3 != "")
            {
                strAddress += ", " + strCompanyAddr3;
            }
            objEntityCommon.SectionId = Convert.ToInt32(clsCommonLibrary.Section.MONTHLY_SALARY_STATEMENT);
            Document document = new Document(PageSize.LETTER.Rotate(), 30f, 30f, 19f, 50f);
            using (System.IO.MemoryStream memoryStream = new System.IO.MemoryStream())
            {
                string strNextNumber = objBusiness.ReadNextNumberSequanceForUI(objEntityCommon);
                PdfWriter writer = PdfWriter.GetInstance(document, memoryStream);
                string strImageName = "MSS_" + objEntityIntervewProcess.Month + "_" + objEntityIntervewProcess.Year + "_" + strNextNumber + ".pdf";
                string strImagePath = objCommon.GetImagePath(CL_Compzit.clsCommonLibrary.IMAGE_SECTION.MONTHLY_SALARY_STATEMENT);
                string fullPath = System.Web.HttpContext.Current.Server.MapPath(strImagePath) + strImageName;
                if ((System.IO.File.Exists(fullPath)))
                {
                    System.IO.File.Delete(fullPath);
                }
                FileStream file = new FileStream(System.Web.HttpContext.Current.Server.MapPath(strImagePath) + strImageName, FileMode.Create);
                PdfWriter.GetInstance(document, file);
                writer.PageEvent = new PDFHeader();
                document.Open();
                int cursts = 0;
                if (cursts == 0)
                {
                    PdfPTable headtable = new PdfPTable(2);
                    //lbr -1
                    headtable.AddCell(new PdfPCell(new Phrase("MONTHLY SALARY STATEMENT - " + monthName.ToUpper(), new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.BOLD, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    if (strCompanyLogo != "")
                    {
                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(strCompanyLogo));
                        image.ScalePercent(PdfPCell.ALIGN_CENTER);
                        image.ScaleToFit(60f, 40f);
                        headtable.AddCell(new PdfPCell(image) { Rowspan = 4, Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    }
                    else
                    {
                        headtable.AddCell(new PdfPCell(new Phrase(" ", new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.NORMAL, BaseColor.BLACK)))) { Rowspan = 4, Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    }
                    headtable.AddCell(new PdfPCell(new Phrase(strCompanyName, new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.BOLD, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    headtable.AddCell(new PdfPCell(new Phrase(strAddress, new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.NORMAL, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    float[] headersHeading = { 92, 8 };
                    headtable.SetWidths(headersHeading);
                    headtable.WidthPercentage = 100;
                    document.Add(headtable);

                    PdfPTable tableLine = new PdfPTable(1);
                    float[] tableLineBody = { 100 };
                    tableLine.SetWidths(tableLineBody);
                    tableLine.WidthPercentage = 100;
                    tableLine.TotalWidth = 950F;

                    PdfPCell cell_headLine = (new PdfPCell(new Phrase("__________________________________________________________________________________________________________________________________________________________________", FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 0, BackgroundColor = iTextSharp.text.BaseColor.WHITE, Border = 0, });
                    cell_headLine.Padding = -5;
                    tableLine.AddCell(cell_headLine);

                    //tableLine.AddCell(new PdfPCell(new Phrase("______________________________________________________________________________________________________________________________", FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 0, BackgroundColor = iTextSharp.text.BaseColor.WHITE, Border = 0, });
                    tableLine.WriteSelectedRows(0, -1, 0, document.PageSize.GetTop(58), writer.DirectContent);

                    document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));

                    int MSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 8;
                    int LSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 12;
                    int ESPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 14;
                    int MSProwSpan = 1;
                    string strStafWork = "STAFF";
                    int HeadRowCnt = 2;
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        MSPcolSpan += 5;
                        LSPcolSpan += 5;
                        ESPcolSpan += 5;
                        MSProwSpan = 2;
                        strStafWork = "WORKER";
                        HeadRowCnt = 3;
                    }
                    PdfPTable tabHeadMSP = new PdfPTable(MSPcolSpan);
                    tabHeadMSP.WidthPercentage = 100;
                    tabHeadMSP.HeaderRows = HeadRowCnt;
                    PdfPTable tabHeadLSP = new PdfPTable(LSPcolSpan);
                    tabHeadLSP.WidthPercentage = 100;
                    tabHeadLSP.HeaderRows = HeadRowCnt;
                    PdfPTable tabHeadESP = new PdfPTable(ESPcolSpan);
                    tabHeadESP.WidthPercentage = 100;
                    tabHeadESP.HeaderRows = HeadRowCnt;
                    //Header_MSP
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("MONTHLY SALARY STATEMENT  - " + strStafWork, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });


                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    //0041
                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    //Header_LSP
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("LEAVE SETTLEMENT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Air Ticket Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Eligible Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Previous Month Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    //Header_ESP
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("END OF SERVICE SETTLEMENT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Air Ticket Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Eligible Days for Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Eligible Days for Gratuity", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Gratuity Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Previous Month Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    //0041
                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    //009
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        
                        DataRow drDtl = dtDetail.NewRow();
                        drDtl["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtl["PAGE"] = dt.Rows[i]["PAGE"].ToString();
                        drDtl["STATUS"] = dt.Rows[i]["STATUS"].ToString();
                        string Mode = dt.Rows[i]["PAGE"].ToString();
                        string Status = dt.Rows[i]["STATUS"].ToString();
                        DataTable dtOTctgryShow = new DataTable();
                        objEntityIntervewProcess.Employee = Convert.ToInt32(dt.Rows[i]["USR_ID"].ToString());
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (Mode != "1")
                            {
                                if (dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != null && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != null)
                                {
                                    objEntityIntervewProcess.CurrentDate = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString());
                                    objEntityIntervewProcess.date = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString());
                                    if (objEntityIntervewProcess.CurrentDate.Month != objEntityIntervewProcess.date.Month)
                                    {
                                        objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.CurrentDate.Year, objEntityIntervewProcess.CurrentDate.Month, 1);
                                    }
                                }
                            }
                            else
                            {
                                objEntityIntervewProcess.CurrentDate = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, daysInm);
                                objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1);
                            }
                            dtOTctgryShow = objBusinessIntervewProcess.ReadOTdtls(objEntityIntervewProcess);
                        }
                        DataTable dtAddShow = new DataTable();
                        DataTable dtDedShow = new DataTable();
                        objEntityIntervewProcess.SalaryPrssId = Convert.ToInt32(dt.Rows[i]["MASTER_ID"].ToString());
                        objEntityIntervewProcess.SavConf = Convert.ToInt32(Mode);
                        if (intShowAdd == 1)
                        {
                            dtAddShow = objBusinessIntervewProcess.ReadAllowanceDetails(objEntityIntervewProcess);
                        }
                        if (intShowDed == 1)
                        {
                            dtDedShow = objBusinessIntervewProcess.ReadDeductionDetails(objEntityIntervewProcess);
                        }
                        decimal decPerDaySal = Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()) / daysInm;
                        decimal workdays = Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()) / decPerDaySal;
                        workdays = Math.Round(workdays, 1);
                        if (workdays % 1 == 0)
                        {
                            workdays = Convert.ToInt32(workdays);
                        }
                        decimal decTotAdd = 0, decTotDed = 0;
                        decimal decTotOTcurr = 0;
                        if (Mode == "1" && Status == "1")
                        {
                            if (strMSPsave == "")
                            {
                                strMSPsave = "1";
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHSave += OtHrs;
                                            decMSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHSave += OtHrs;
                                            decMSPhOtAmtSave += currOtAmnt;

                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTSave += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicSave += Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString());
                            decMSPaddSave += decTotAdd;
                            decMSPdedSave += decTotDed;
                            decMSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPsaveCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPsaveCurr == cntMSPsave)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "1" && Status == "2")
                        {

                            if (strMSPconf == "")
                            {
                                strMSPconf = "1";
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHConf += OtHrs;
                                            decMSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHConf += OtHrs;
                                            decMSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTConf += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddConf += decTotAdd;
                            decMSPdedConf += decTotDed;
                            decMSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPconfCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPconfCurr == cntMSPconf)
                            {

                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "3")
                        {
                            if (strMSPpaid == "")
                            {
                                strMSPpaid = "1";
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHPaid += OtHrs;
                                            decMSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHPaid += OtHrs;
                                            decMSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTPaid += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decMSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddPaid += decTotAdd;
                            decMSPdedPaid += decTotDed;
                            decMSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPpaidCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPpaidCurr == cntMSPpaid)
                            {


                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "4")
                        {
                            if (strMSPclos == "")
                            {
                                strMSPclos = "1";
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHClos += OtHrs;
                                            decMSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHClos += OtHrs;
                                            decMSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTClos += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddClos += decTotAdd;
                            decMSPdedClos += decTotDed;
                            decMSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntMSPclosCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPclosCurr == cntMSPclos)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "1")
                        {

                            if (strLSPsave == "")
                            {
                                strLSPsave = "1";
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHSave += OtHrs;
                                            decLSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHSave += OtHrs;
                                            decLSPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTSave += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddSave += decTotAdd;
                            decLSPdedSave += decTotDed;
                            decLSPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPsaveCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPsaveCurr == cntLSPsave)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "2")
                        {
                            if (strLSPconf == "")
                            {
                                strLSPconf = "1";
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHConf += OtHrs;
                                            decLSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHConf += OtHrs;
                                            decLSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTConf += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddConf += decTotAdd;
                            decLSPdedConf += decTotDed;
                            decLSPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPconfCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPconfCurr == cntLSPconf)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "3")
                        {
                            if (strLSPpaid == "")
                            {
                                strLSPpaid = "1";
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHPaid += OtHrs;
                                            decLSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHPaid += OtHrs;
                                            decLSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTPaid += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddPaid += decTotAdd;
                            decLSPdedPaid += decTotDed;
                            decLSPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPpaidCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPpaidCurr == cntLSPpaid)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "4")
                        {
                            if (strLSPclos == "")
                            {
                                strLSPclos = "1";
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHClos += OtHrs;
                                            decLSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHClos += OtHrs;
                                            decLSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTClos += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY }); ;
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddClos += decTotAdd;
                            decLSPdedClos += decTotDed;
                            decLSPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPclosCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPclosCurr == cntLSPclos)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }



                        else if (Mode == "3" && Status == "1")
                        {
                            if (strESPsave == "")
                            {
                                strESPsave = "1";
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHSave += OtHrs;
                                            decESPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHSave += OtHrs;
                                            decESPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTSave += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddSave += decTotAdd;
                            decESPdedSave += decTotDed;
                            decESPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysSave += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPsaveCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPsaveCurr == cntESPsave)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "2")
                        {

                            if (strESPconf == "")
                            {
                                strESPconf = "1";
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHConf += OtHrs;
                                            decESPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHConf += OtHrs;
                                            decESPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTConf += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddConf += decTotAdd;
                            decESPdedConf += decTotDed;
                            decESPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysConf += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);


                            cntESPconfCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPconfCurr == cntESPconf)
                            {

                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "3" && Status == "3")
                        {
                            if (strESPpaid == "")
                            {
                                strESPpaid = "1";
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHPaid += OtHrs;
                                            decESPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHPaid += OtHrs;
                                            decESPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTPaid += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddPaid += decTotAdd;
                            decESPdedPaid += decTotDed;
                            decESPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysPaid += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPpaidCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPpaidCurr == cntESPpaid)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "4")
                        {
                            if (strESPclos == "")
                            {
                                strESPclos = "1";
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHClos += OtHrs;
                                            decESPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHClos += OtHrs;
                                            decESPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTClos += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddClos += decTotAdd;
                            decESPdedClos += decTotDed;
                            decESPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysClos += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntESPclosCurr++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPclosCurr == cntESPclos)
                            {


                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }

                    }
                    decMSPproBasic = decMSPproBasicSave + decMSPproBasicConf + decMSPproBasicPaid + decMSPproBasicClos;
                    decMSPadd = decMSPaddSave + decMSPaddConf + decMSPaddPaid + decMSPaddClos;
                    decMSPded = decMSPdedSave + decMSPdedConf + decMSPdedPaid + decMSPdedClos;
                    decMSPnetAmnt = decMSPnetAmntSave + decMSPnetAmntConf + decMSPnetAmntPaid + decMSPnetAmntClos;
                    decMSPnOtH = decMSPnOtHSave + decMSPnOtHConf + decMSPnOtHPaid + decMSPnOtHClos;
                    decMSPnOtAmt = decMSPnOtAmtSave + decMSPnOtAmtConf + decMSPnOtAmtPaid + decMSPnOtAmtClos;
                    decMSPhOtH = decMSPhOtHSave + decMSPhOtHConf + decMSPhOtHPaid + decMSPhOtHClos;
                    decMSPhOtAmt = decMSPhOtAmtSave + decMSPhOtAmtConf + decMSPhOtAmtPaid + decMSPhOtAmtClos;
                    decMSPnetOT = decMSPnetOTSave + decMSPnetOTConf + decMSPnetOTPaid + decMSPnetOTClos;
                    decLSPproBasic = decLSPproBasicSave + decLSPproBasicConf + decLSPproBasicPaid + decLSPproBasicClos;
                    decLSPtcktAmnt = decLSPtcktAmntSave + decLSPtcktAmntConf + decLSPtcktAmntPaid + decLSPtcktAmntClos;
                    decLSPadd = decLSPaddSave + decLSPaddConf + decLSPaddPaid + decLSPaddClos;
                    decLSPded = decLSPdedSave + decLSPdedConf + decLSPdedPaid + decLSPdedClos;
                    decLSPleavDays = decLSPleavDaysSave + decLSPleavDaysConf + decLSPleavDaysPaid + decLSPleavDaysClos;
                    decLSPleavSal = decLSPleavSalSave + decLSPleavSalConf + decLSPleavSalPaid + decLSPleavSalClos;
                    decLSPprevSal = decLSPprevSalSave + decLSPprevSalConf + decLSPprevSalPaid + decLSPprevSalClos;
                    decLSPnetAmnt = decLSPnetAmntSave + decLSPnetAmntConf + decLSPnetAmntPaid + decLSPnetAmntClos;
                    decLSPnOtH = decLSPnOtHSave + decLSPnOtHConf + decLSPnOtHPaid + decLSPnOtHClos;
                    decLSPnOtAmt = decLSPnOtAmtSave + decLSPnOtAmtConf + decLSPnOtAmtPaid + decLSPnOtAmtClos;
                    decLSPhOtH = decLSPhOtHSave + decLSPhOtHConf + decLSPhOtHPaid + decLSPhOtHClos;
                    decLSPhOtAmt = decLSPhOtAmtSave + decLSPhOtAmtConf + decLSPhOtAmtPaid + decLSPhOtAmtClos;
                    decLSPnetOT = decLSPnetOTSave + decLSPnetOTConf + decLSPnetOTPaid + decLSPnetOTClos;
                    decESPproBasic = decESPproBasicSave + decESPproBasicConf + decESPproBasicPaid + decESPproBasicClos;
                    decESPtcktAmnt = decESPtcktAmntSave + decESPtcktAmntConf + decESPtcktAmntPaid + decESPtcktAmntClos;
                    decESPadd = decESPaddSave + decESPaddConf + decESPaddPaid + decESPaddClos;
                    decESPded = decESPdedSave + decESPdedConf + decESPdedPaid + decESPdedClos;
                    decESPleavDays = decESPleavDaysSave + decESPleavDaysConf + decESPleavDaysPaid + decESPleavDaysClos;
                    decESPleavSal = decESPleavSalSave + decESPleavSalConf + decESPleavSalPaid + decESPleavSalClos;
                    decESPgratDays = decESPgratDaysSave + decESPgratDaysConf + decESPgratDaysPaid + decESPgratDaysClos;
                    decESPgratSal = decESPgratSalSave + decESPgratSalConf + decESPgratSalPaid + decESPgratSalClos;
                    decESPprevSal = decESPprevSalSave + decESPprevSalConf + decESPprevSalPaid + decESPprevSalClos;
                    decESPnetAmnt = decESPnetAmntSave + decESPnetAmntConf + decESPnetAmntPaid + decESPnetAmntClos;
                    decESPnOtH = decESPnOtHSave + decESPnOtHConf + decESPnOtHPaid + decESPnOtHClos;
                    decESPnOtAmt = decESPnOtAmtSave + decESPnOtAmtConf + decESPnOtAmtPaid + decESPnOtAmtClos;
                    decESPhOtH = decESPhOtHSave + decESPhOtHConf + decESPhOtHPaid + decESPhOtHClos;
                    decESPhOtAmt = decESPhOtAmtSave + decESPhOtAmtConf + decESPhOtAmtPaid + decESPhOtAmtClos;
                    decESPnetOT = decESPnetOTSave + decESPnetOTConf + decESPnetOTPaid + decESPnetOTClos;
                    //Body_MSP 
                    if (strMSPsave != "" || strMSPconf != "" || strMSPpaid != "" || strMSPclos != "")
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadMSP);
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }
                    //Body_LSP
                    if (strLSPsave != "" || strLSPconf != "" || strLSPpaid != "" || strLSPclos != "")
                    {
                        float pos3 = writer.GetVerticalPosition(false);
                        if (pos3 < 150)
                        {
                            document.NewPage();
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Grand Total Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadLSP);
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }
                    //Body_ESP
                    if (strESPsave != "" || strESPconf != "" || strESPpaid != "" || strESPclos != "")
                    {
                        float pos4 = writer.GetVerticalPosition(false);
                        if (pos4 < 150)
                        {
                            document.NewPage();
                        }

                        tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadESP);
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }

                    //Department wise tables
                    int cnt = 0, ColWiseTot = 0, MSPcnt = 0, LSPcnt = 0, ESPcnt = 0;
                    decimal net = 0, ColWiseTotNet = 0, MSPnet = 0, LSPnet = 0, ESPnet = 0;
                    decimal Basic = 0, RowWiseTotBasic = 0;
                    decimal Add = 0, RowWiseTotAdd = 0, RowWiseTotAddG = 0;
                    decimal Ded = 0, RowWiseTotDed = 0, RowWiseTotDedG = 0;

                    DataView dtview = new DataView(dtDept);
                    DataTable dtDistdept = dtview.ToTable(true, "CPRDEPT_ID", "CPRDEPT_NAME");

                    DataTable dtPriAdd = new DataTable();
                    dtPriAdd.Columns.Add("CPRDEPT_ID", typeof(string));
                    dtPriAdd.Columns.Add("ADD", typeof(decimal));
                    DataTable dtPriDed = new DataTable();
                    dtPriDed.Columns.Add("CPRDEPT_ID", typeof(string));
                    dtPriDed.Columns.Add("DED", typeof(decimal));

                    int EmpCntcolSpan = dtDistdept.Rows.Count + 2;
                    PdfPTable tabHeadSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabBasicSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNOTsal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabHOTsal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabDedSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthDedSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotDedSal = new PdfPTable(EmpCntcolSpan);
                    tabHeadSal.WidthPercentage = 100;
                    tabBasicSal.WidthPercentage = 100;
                    tabNOTsal.WidthPercentage = 100;
                    tabHOTsal.WidthPercentage = 100;
                    tabAddSal.WidthPercentage = 100;
                    tabOthAddSal.WidthPercentage = 100;
                    tabTotAddSal.WidthPercentage = 100;
                    tabDedSal.WidthPercentage = 100;
                    tabOthDedSal.WidthPercentage = 100;
                    tabTotDedSal.WidthPercentage = 100;
                   
                    tabHeadSal.AddCell(new PdfPCell(new Phrase("SALARY", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadSal.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadSal.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadSal.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });



                    tabBasicSal.AddCell(new PdfPCell(new Phrase("Total Amount (Basic Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNOTsal.AddCell(new PdfPCell(new Phrase("Total Amount (Normal OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHOTsal.AddCell(new PdfPCell(new Phrase("Total Amount (Holiday OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabAddSal.AddCell(new PdfPCell(new Phrase("Additions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthAddSal.AddCell(new PdfPCell(new Phrase("Total Amount (Other Additions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotAddSal.AddCell(new PdfPCell(new Phrase("Total Amount(All Additions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabDedSal.AddCell(new PdfPCell(new Phrase("Deductions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthDedSal.AddCell(new PdfPCell(new Phrase("Total Amount (Other Deductions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotDedSal.AddCell(new PdfPCell(new Phrase("Total Amount(All Deductions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        decimal decNetAmnt = 0;
                        tabAddSal.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriAdd.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["ADD"] = decAmnt;
                            dtPriAdd.Rows.Add(drDtl);
                        }
                        tabAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        decimal decNetAmnt = 0;
                        tabDedSal.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriDed.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["DED"] = decAmnt;
                            dtPriDed.Rows.Add(drDtl);
                        }
                        tabDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    PdfPTable tabHeadEmpCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetEmpCnt = new PdfPTable(EmpCntcolSpan);
                    tabHeadEmpCnt.WidthPercentage = 100;
                    tabMSPempCnt.WidthPercentage = 100;
                    tabLSPempCnt.WidthPercentage = 100;
                    tabESPempCnt.WidthPercentage = 100;
                    tabNetEmpCnt.WidthPercentage = 100;
                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("EMPLOYEE COUNT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });





                    tabMSPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetEmpCnt.AddCell(new PdfPCell(new Phrase("Total Employee#", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });



                    PdfPTable tabHeadNet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetnet = new PdfPTable(EmpCntcolSpan);
                    tabHeadNet.WidthPercentage = 100;
                    tabMSPnet.WidthPercentage = 100;
                    tabLSPnet.WidthPercentage = 100;
                    tabESPnet.WidthPercentage = 100;
                    tabNetnet.WidthPercentage = 100;
                    tabHeadNet.AddCell(new PdfPCell(new Phrase("NET SUMMARY", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {

                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    tabHeadNet.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                    tabMSPnet.AddCell(new PdfPCell(new Phrase("Total Amount (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPnet.AddCell(new PdfPCell(new Phrase("Total Amount (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPnet.AddCell(new PdfPCell(new Phrase("Total Amount (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetnet.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });

                    for (int i = 0; i < dtDistdept.Rows.Count; i++)
                    {
                        ColWiseTotNet = 0; ColWiseTot = 0;
                        tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadNet.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadSal.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        //MSP
                        DataRow[] dr = dtDept.Select("PAGE=1 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0; Basic = 0; Add = 0; Ded = 0;
                        if (dr.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr[0]["TOTAL_DED"].ToString());
                        }
                        tabMSPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        MSPcnt += cnt;
                        tabMSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        MSPnet += net;
                        //LSP
                        DataRow[] dr1 = dtDept.Select("PAGE=2 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr1.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr1[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr1[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr1[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr1[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr1[0]["TOTAL_DED"].ToString());
                        }
                        tabLSPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        LSPcnt += cnt;
                        tabLSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        LSPnet += net;
                        //ESP
                        DataRow[] dr2 = dtDept.Select("PAGE=3 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr2.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr2[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr2[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr2[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr2[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr2[0]["TOTAL_DED"].ToString());
                        }
                        tabESPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        ESPcnt += cnt;
                        tabESPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        ESPnet += net;

                        decimal decAmntA = 0, decAmntD = 0;
                        if (dtadd.Rows.Count > 0)
                        {
                            decAmntA = Convert.ToDecimal(dtPriAdd.Compute("Sum(ADD)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        if (dtDed.Rows.Count > 0)
                        {
                            decAmntD = Convert.ToDecimal(dtPriDed.Compute("Sum(DED)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        decimal decNotAmnt = 0, decHotAmnt = 0;
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            decNotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(NORMAL)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            decHotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(HOLIDAY)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabNOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decHotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        //Add
                        tabOthAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Add - decAmntA - decNotAmnt - decHotAmnt), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        //Ded
                        tabOthDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Ded - decAmntD), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        //Net
                        RowWiseTotAddG += Add;
                        RowWiseTotDedG += Ded;
                        RowWiseTotBasic += Basic;
                        RowWiseTotAdd += (Add - decAmntA - decNotAmnt - decHotAmnt);
                        RowWiseTotDed += (Ded - decAmntD);
                        tabNetEmpCnt.AddCell(new PdfPCell(new Phrase(ColWiseTot.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(ColWiseTotNet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        tabBasicSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Basic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Add, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Ded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                    tabMSPempCnt.AddCell(new PdfPCell(new Phrase(MSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCnt.AddCell(new PdfPCell(new Phrase(LSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCnt.AddCell(new PdfPCell(new Phrase(ESPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetEmpCnt.AddCell(new PdfPCell(new Phrase((MSPcnt + LSPcnt + ESPcnt).ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    //float pos5 = writer.GetVerticalPosition(false);
                    //if (pos5 < 100)
                    //{
                    //0041
                    if (HiddenFieldSalaryProcess.Value != "1")
                    {
                        //end


                        document.NewPage();
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        document.Add(new Paragraph(new Chunk("                                                                                                             STATEMENT SUMMARY", FontFactory.GetFont("Times New Roman", 10, Font.BOLD, BaseColor.BLACK))));
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //}
                        document.Add(tabHeadEmpCnt);
                        document.Add(tabMSPempCnt);
                        document.Add(tabLSPempCnt);
                        document.Add(tabESPempCnt);
                        document.Add(tabNetEmpCnt);

                        tabHeadSal.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabBasicSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabNOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPnOtAmt + decLSPnOtAmt + decESPnOtAmt), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPhOtAmt + decLSPhOtAmt + decESPhOtAmt), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabOthAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddG, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabOthDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedG, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        float pos2 = writer.GetVerticalPosition(false);
                        if (pos2 < 100)
                        {
                            document.NewPage();
                        }
                        document.Add(tabHeadSal);
                        document.Add(tabBasicSal);
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            document.Add(tabNOTsal);
                            document.Add(tabHOTsal);
                        }
                        document.Add(tabAddSal);
                        document.Add(tabOthAddSal);
                        document.Add(tabTotAddSal);
                        document.Add(tabDedSal);
                        document.Add(tabOthDedSal);
                        document.Add(tabTotDedSal);


                        objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
                        string strcurrenWord = objBusiness.ConvertCurrencyToWords(objEntityCommon, (MSPnet + LSPnet + ESPnet).ToString().Replace(",", ""));
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabMSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(MSPnet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabLSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(LSPnet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabESPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(ESPnet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((MSPnet + LSPnet + ESPnet), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase("Amount in Words", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(strcurrenWord, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan - 1, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        float pos6 = writer.GetVerticalPosition(false);
                        if (pos6 < 100)
                        {
                            document.NewPage();
                        }
                        document.Add(tabHeadNet);
                        document.Add(tabMSPnet);
                        document.Add(tabLSPnet);
                        document.Add(tabESPnet);
                        document.Add(tabNetnet);




                        float pos1 = writer.GetVerticalPosition(false);
                        PdfPTable endtable = new PdfPTable(6);
                        float[] endBody = { 25, 10, 25, 10, 25, 5 };
                        endtable.SetWidths(endBody);
                        endtable.WidthPercentage = 100;
                        endtable.TotalWidth = document.PageSize.Width - 80f;

                        endtable.AddCell(new PdfPCell(new Phrase("FINANCE MANAGER", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase("GENERAL MANAGER", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase("RECEIVER’S SIGNATURE", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });

                        endtable.TotalWidth = 555F;
                        if (pos1 > 90)
                        {
                            endtable.WriteSelectedRows(0, -1, 123, 65, writer.DirectContent);
                        }
                        else
                        {
                            document.NewPage();
                            endtable.WriteSelectedRows(0, -1, 123, 65, writer.DirectContent);
                        }
                    }
                    document.Close();
                    byte[] bytes = memoryStream.ToArray();
                    memoryStream.Close();
                    Response.Clear();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + strImageName);
                    Response.Buffer = true;
                    Response.Cache.SetCacheability(HttpCacheability.NoCache);
                    Response.BinaryWrite(bytes);
                    Response.End();
                    Response.Close();
                }
            }
        }

    }


    public class PDFHeader : PdfPageEventHelper
    {
        // This is the contentbyte object of the writer
        PdfContentByte cb;

        // we will put the final number of pages in a template
        PdfTemplate footerTemplate;

        // this is the BaseFont we are going to use for the header / footer
        BaseFont bf = null;

        // This keeps track of the creation time
        DateTime PrintTime = DateTime.Now;

        public override void OnOpenDocument(PdfWriter writer, Document document)
        {
            try
            {
                PrintTime = DateTime.Now;
                bf = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                cb = writer.DirectContent;
                footerTemplate = cb.CreateTemplate(200, 200);
            }
            catch (DocumentException de)
            {
                //handle exception here
            }
            catch (System.IO.IOException ioe)
            {
                //handle exception here
            }
        }
        public override void OnEndPage(iTextSharp.text.pdf.PdfWriter writer, iTextSharp.text.Document document)
        {
            base.OnEndPage(writer, document);
            clsEntityLayerLeaveSettlmt objEntityLeavSettlmt = new clsEntityLayerLeaveSettlmt();
            clsBusinessLayerLeaveSettlmt objBusinessLeavSettlmt = new clsBusinessLayerLeaveSettlmt();
            objEntityLeavSettlmt.EmployeeId = Convert.ToInt32(HttpContext.Current.Session["USERID"].ToString());
            DataTable dtEmp = objBusinessLeavSettlmt.ReadEmpDtls(objEntityLeavSettlmt);


            PdfPTable table3 = new PdfPTable(1);
            float[] tableBody3 = { 100 };
            table3.SetWidths(tableBody3);
            table3.WidthPercentage = 100;
            table3.TotalWidth = 950F;
            table3.AddCell(new PdfPCell(new Phrase("_____________________________________________________________________________________________________________________________________________________________________________________________", FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 0, BackgroundColor = iTextSharp.text.BaseColor.WHITE, Border = 0 });
            table3.WriteSelectedRows(0, -1, 0, document.PageSize.GetBottom(50), writer.DirectContent);

            PdfPTable headImg = new PdfPTable(3);
            string strImageLogo = "/Images/Design_Images/images/Compztlogo.png";
            if (strImageLogo != "")
            {
                iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(strImageLogo));
                image.ScalePercent(PdfPCell.ALIGN_CENTER);
                image.ScaleToFit(60f, 40f);
                headImg.AddCell(new PdfPCell(image) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT, VerticalAlignment = Element.ALIGN_TOP });
            }
            headImg.AddCell(new PdfPCell(new Paragraph("Report generated in Compzit by:" + dtEmp.Rows[0]["USR_CODE"].ToString() + ", " + dtEmp.Rows[0]["USR_FNAME"].ToString() + "\nReport generated on:" + DateTime.Now.ToString("MM/dd/yyyy hh:mm tt"), FontFactory.GetFont("Arial", 8, Font.NORMAL, BaseColor.BLACK))) { Border = 0, HorizontalAlignment = Element.ALIGN_CENTER });
            headImg.AddCell(new PdfPCell(new Paragraph(" ", FontFactory.GetFont("Arial", 8, Font.NORMAL, BaseColor.BLACK))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
            float[] headersHeading = { 20, 60, 20 };
            headImg.SetWidths(headersHeading);
            headImg.WidthPercentage = 100;
            headImg.TotalWidth = document.PageSize.Width - 80f;
            headImg.WriteSelectedRows(0, -1, 50, document.PageSize.GetBottom(40), writer.DirectContent);


            String text = "Page " + writer.PageNumber + " of ";
            //Add paging to footer
            {
                cb.BeginText();
                cb.SetFontAndSize(bf, 8);
                cb.SetTextMatrix(document.PageSize.GetRight(100), document.PageSize.GetBottom(30));
                cb.ShowText(text);
                cb.EndText();
                float len = bf.GetWidthPoint(text, 8);
                cb.AddTemplate(footerTemplate, document.PageSize.GetRight(100) + len, document.PageSize.GetBottom(30));
            }
        }
        public override void OnCloseDocument(PdfWriter writer, Document document)
        {
            base.OnCloseDocument(writer, document);
            footerTemplate.BeginText();
            footerTemplate.SetFontAndSize(bf, 8);
            footerTemplate.SetTextMatrix(0, 0);
            footerTemplate.ShowText((writer.PageNumber).ToString());
            footerTemplate.EndText();
        }
    }
    protected void btnPrint_Click(object sender, EventArgs e)
    {
        clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
        clsEntityMonthlySalaryStatement objEntityIntervewProcess = new clsEntityMonthlySalaryStatement();
        if (Session["CORPOFFICEID"] != null)
        {
            objEntityIntervewProcess.CorpID = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
        }
        else if (Session["CORPOFFICEID"] == null)
        {
            Response.Redirect("/Default.aspx");
        }
        if (Session["ORGID"] != null)
        {
            objEntityIntervewProcess.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
        }
        else if (Session["ORGID"] == null)
        {
            Response.Redirect("/Default.aspx");
        }


        //0041

        ddlpaymentmode.ClearSelection();

        ddlpaymentmode.Items.FindByValue(Hiddenddlpay.Value).Selected = true;

        
        if (Session["SALARPRS"] != null && HiddenFieldSalaryProcess.Value == "1")
        {
            clsCommonLibrary objCommon = new clsCommonLibrary();
            var strSALARPRS = Session["SALARPRS"];
            string[] StrProsId = strSALARPRS.ToString().Split('~');
            clsBusinessLayerSalaryStatement objSalarySatement = new clsBusinessLayerSalaryStatement();
            clsEntityLayerSalaryStatement objEntitySalry = new clsEntityLayerSalaryStatement();


            if (Convert.ToInt32(StrProsId[0]) == 1)
            {

                objEntityIntervewProcess.PendFinshId = 2;


            }

            else
            {
                objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProsId[0]);
            }

            objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProsId[1]);
            objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProsId[2]);
            objEntityIntervewProcess.Month = Convert.ToInt32(StrProsId[4]);
            objEntityIntervewProcess.Year = Convert.ToInt32(StrProsId[5]);
            string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
            headMnthYear.InnerHtml = monthName + " " + objEntityIntervewProcess.Year;
            DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
            DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);

            objEntitySalry.CorpID = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
            objEntitySalry.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
            objEntitySalry.SavConf = Convert.ToInt32(StrProsId[0]);
            objEntitySalry.CorpOffice = Convert.ToInt32(StrProsId[1]);
            objEntitySalry.StffWrkr = Convert.ToInt32(StrProsId[2]);
            if (StrProsId[3] != "0" && StrProsId[3] != "" && StrProsId[3] != null)
            {
                objEntitySalry.date = objCommon.textToDateTime(StrProsId[3]);
            }
            objEntitySalry.Month = Convert.ToInt32(StrProsId[4]);
            objEntitySalry.Year = Convert.ToInt32(StrProsId[5]);
            objEntitySalry.Orgid = Convert.ToInt32(Session["ORGID"].ToString());
            DataTable dtorgl = objSalarySatement.LoadSalaryPrssListPrssTable(objEntitySalry);

            DataView dv = new DataView(dtorglist);
            DataTable dt = new DataTable();

            for (int y = 0; y < dtorgl.Rows.Count; y++)
            {
                dv.RowFilter = "EID ='" + dtorgl.Rows[y]["EID"] + "'";

                //  dd = dv.Table.Clone();
                dt.Merge(dv.ToTable());


            }


            ConvertTopdf(dt, dtorglistDept, objEntityIntervewProcess);
            HiddenFieldShowAdd.Value = "0";
            HiddenFieldShowDed.Value = "0";


        }
        else if (Session["SALARPRSS"] != null && HiddenFieldSalaryProcess.Value == "")

        //END
        {
            var strSALARPRSS = Session["SALARPRSS"];
            string[] StrProssId = strSALARPRSS.ToString().Split('~');
            objEntityIntervewProcess.PendFinshId = Convert.ToInt32(StrProssId[0]);
            objEntityIntervewProcess.CorpOffice = Convert.ToInt32(StrProssId[1]);
            objEntityIntervewProcess.StffWrkr = Convert.ToInt32(StrProssId[2]);
            objEntityIntervewProcess.Month = Convert.ToInt32(StrProssId[3]);
            objEntityIntervewProcess.Year = Convert.ToInt32(StrProssId[4]);
            DataTable dtorglist = objBusinessIntervewProcess.LoadSalaryPrssListPrssTable(objEntityIntervewProcess);
            DataTable dtorglistDept = objBusinessIntervewProcess.LoadSalaryPrssListPrssTableDept(objEntityIntervewProcess);


            int PayMode = Convert.ToInt32(ddlpaymentmode.SelectedItem.Value);
            DataView dv = new DataView(dtorglist);
            DataTable dt = new DataTable();


            if (PayMode == 0)
            {

                dv.RowFilter = "PAYMENT_METHOD = 0";
                dt.Merge(dv.ToTable());

            }
            if (PayMode == 1)
            {

                dv.RowFilter = "PAYMENT_METHOD = 1";
                dt.Merge(dv.ToTable());

            }
            if (PayMode == 2)
            {


                dt.Merge(dv.ToTable());

            }


            DataView dvRes = new DataView(dt);
            dvRes.RowFilter = "PAGE = 1";
            DataView dvLs = new DataView(dt);
            dvLs.RowFilter = "PAGE = 2";
            DataView dvEnds = new DataView(dt);
            dvEnds.RowFilter = "PAGE = 3";

            DataTable dtorgDeptlist = new DataTable();
            dtorgDeptlist.Columns.Add("CPRDEPT_ID", typeof(string));
            dtorgDeptlist.Columns.Add("CPRDEPT_NAME", typeof(string));
            dtorgDeptlist.Columns.Add("PAGE", typeof(string));
            dtorgDeptlist.Columns.Add("SUM_BASIC", typeof(decimal));
            dtorgDeptlist.Columns.Add("TOTAL_ADD", typeof(decimal));
            dtorgDeptlist.Columns.Add("TOTAL_DED", typeof(decimal));
            dtorgDeptlist.Columns.Add("NET_AMNT", typeof(decimal));
            dtorgDeptlist.Columns.Add("CNT", typeof(string));
            decimal sum_basic = 0;
            decimal total_add = 0;
            decimal total_ded = 0;
            decimal net_amnt = 0;
            decimal Sum_basic = 0;
            decimal Total_add = 0;
            decimal Total_ded = 0;
            decimal Net_amnt = 0;
            decimal Sum_Basic = 0;
            decimal Total_Add = 0;
            decimal Total_Ded = 0;
            decimal Net_Amnt = 0;
            if (dvRes.Count > 0)
            {
                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvRes.Count; i++)
                {

                    sum_basic = sum_basic + Convert.ToDecimal(dvRes[i]["PRSD_BASICPAY"].ToString());
                    total_add = total_add + Convert.ToDecimal(dvRes[i]["TOTAL_ADD"].ToString());
                    total_ded = total_ded + Convert.ToDecimal(dvRes[i]["TOTAL_DED"].ToString());
                    net_amnt = net_amnt + Convert.ToDecimal(dvRes[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "1";


                row["SUM_BASIC"] = sum_basic;
                row["TOTAL_ADD"] = total_add;
                row["TOTAL_DED"] = total_ded;
                row["NET_AMNT"] = net_amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);
            }

            if (dvLs.Count > 0)
            {

                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvLs.Count; i++)
                {

                    Sum_basic = Sum_basic + Convert.ToDecimal(dvLs[i]["PRSD_BASICPAY"].ToString());
                    Total_add = Total_add + Convert.ToDecimal(dvLs[i]["TOTAL_ADD"].ToString());
                    Total_ded = Total_ded + Convert.ToDecimal(dvLs[i]["TOTAL_DED"].ToString());
                    Net_amnt = Net_amnt + Convert.ToDecimal(dvLs[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "2";


                row["SUM_BASIC"] = Sum_basic;
                row["TOTAL_ADD"] = Total_add;
                row["TOTAL_DED"] = Total_ded;
                row["NET_AMNT"] = Net_amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);

            }


            if (dvEnds.Count > 0)
            {


                DataRow row = dtorgDeptlist.NewRow();
                for (int i = 0; i < dvEnds.Count; i++)
                {

                    Sum_Basic = Sum_Basic + Convert.ToDecimal(dvEnds[i]["PRSD_BASICPAY"].ToString());
                    Total_Add = Total_Add + Convert.ToDecimal(dvEnds[i]["TOTAL_ADD"].ToString());
                    Total_Ded = Total_Ded + Convert.ToDecimal(dvEnds[i]["TOTAL_DED"].ToString());
                    Net_Amnt = Net_Amnt + Convert.ToDecimal(dvEnds[i]["NET_AMNT"].ToString());

                }
                row["CPRDEPT_ID"] = dtorglistDept.Rows[0]["CPRDEPT_ID"].ToString();
                row["CPRDEPT_NAME"] = dtorglistDept.Rows[0]["CPRDEPT_NAME"].ToString();
                row["PAGE"] = "3";


                row["SUM_BASIC"] = Sum_Basic;
                row["TOTAL_ADD"] = Total_Add;
                row["TOTAL_DED"] = Total_Ded;
                row["NET_AMNT"] = Net_Amnt;

                row["CNT"] = dt.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

                dtorgDeptlist.Rows.Add(row);


            }

            if (PayMode == 2)
            {

              ConvertTopdf(dt, dtorglistDept, objEntityIntervewProcess);

            }

            else
            {

                ConvertDataTableToHTMLpdf(dt, dtorgDeptlist, objEntityIntervewProcess);
            }
            //   ConvertDataTableToHTMLpdf(dtorglist, dtorglistDept, objEntityIntervewProcess);
        }
    }


    public void ConvertDataTableToHTML(DataTable dt, DataTable dtDept, clsEntityMonthlySalaryStatement objEntityIntervewProcess)
     {
        clsBusinessLayer objBusiness = new clsBusinessLayer();

        if (dt.Rows.Count == 0)
        {

            divMSP.InnerHtml = "";
            divLSP.InnerHtml = "";
            Statmnt_Sumry.InnerHtml = "";
            divESP.InnerHtml = "";
            divEmpCnt.InnerHtml = "";
            divNetSummary.InnerHtml = "";
            divSalary.InnerHtml = "";
            nodata.Visible = true;
            headMnthYear.Visible = false;
           // list_b.Visible = false;
            sta_print.Visible = false;
            print_button.Visible = false;
        }

        else
        {
            sta_print.Visible = true;
            print_button.Visible = true;

            clsEntityCommon objEntityCommon = new clsEntityCommon();
            objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
            clsCommonLibrary objCommon = new clsCommonLibrary();
            clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
            int intShowAdd = 0, intShowDed = 0;
            if (cbxAdd.Checked == true)
                intShowAdd = 1;
            if (cbxDed.Checked == true)
                intShowDed = 1;
            nodata.Visible = false;
            headMnthYear.Visible = true;
            divMSP.InnerHtml = "";
            divLSP.InnerHtml = "";
            divESP.InnerHtml = "";


            int daysInm = DateTime.DaysInMonth(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month);
            string strMSPsave = "", strMSPconf = "", strMSPpaid = "", strMSPclos = "", strMSP = "";
            string strLSPsave = "", strLSPconf = "", strLSPpaid = "", strLSPclos = "", strLSP = "";
            string strESPsave = "", strESPconf = "", strESPpaid = "", strESPclos = "", strESP = "";
            string strNormalOtRate = "", strHolidayOtRate = "", strCrnAbbr = "";

            decimal decMSPproBasic = 0, decMSPproBasicSave = 0, decMSPproBasicConf = 0, decMSPproBasicPaid = 0, decMSPproBasicClos = 0;
            decimal decMSPadd = 0, decMSPaddSave = 0, decMSPaddConf = 0, decMSPaddPaid = 0, decMSPaddClos = 0;
            decimal decMSPded = 0, decMSPdedSave = 0, decMSPdedConf = 0, decMSPdedPaid = 0, decMSPdedClos = 0;
            decimal decMSPnOtH = 0, decMSPnOtHSave = 0, decMSPnOtHConf = 0, decMSPnOtHPaid = 0, decMSPnOtHClos = 0;
            decimal decMSPnOtAmt = 0, decMSPnOtAmtSave = 0, decMSPnOtAmtConf = 0, decMSPnOtAmtPaid = 0, decMSPnOtAmtClos = 0;
            decimal decMSPhOtH = 0, decMSPhOtHSave = 0, decMSPhOtHConf = 0, decMSPhOtHPaid = 0, decMSPhOtHClos = 0;
            decimal decMSPhOtAmt = 0, decMSPhOtAmtSave = 0, decMSPhOtAmtConf = 0, decMSPhOtAmtPaid = 0, decMSPhOtAmtClos = 0;
            decimal decMSPnetOT = 0, decMSPnetOTSave = 0, decMSPnetOTConf = 0, decMSPnetOTPaid = 0, decMSPnetOTClos = 0;
            decimal decMSPnetAmnt = 0, decMSPnetAmntSave = 0, decMSPnetAmntConf = 0, decMSPnetAmntPaid = 0, decMSPnetAmntClos = 0;

            decimal decLSPproBasic = 0, decLSPproBasicSave = 0, decLSPproBasicConf = 0, decLSPproBasicPaid = 0, decLSPproBasicClos = 0;
            decimal decLSPtcktAmnt = 0, decLSPtcktAmntSave = 0, decLSPtcktAmntConf = 0, decLSPtcktAmntPaid = 0, decLSPtcktAmntClos = 0;
            decimal decLSPadd = 0, decLSPaddSave = 0, decLSPaddConf = 0, decLSPaddPaid = 0, decLSPaddClos = 0;
            decimal decLSPded = 0, decLSPdedSave = 0, decLSPdedConf = 0, decLSPdedPaid = 0, decLSPdedClos = 0;
            decimal decLSPleavDays = 0, decLSPleavDaysSave = 0, decLSPleavDaysConf = 0, decLSPleavDaysPaid = 0, decLSPleavDaysClos = 0;
            decimal decLSPleavSal = 0, decLSPleavSalSave = 0, decLSPleavSalConf = 0, decLSPleavSalPaid = 0, decLSPleavSalClos = 0;
            decimal decLSPprevSal = 0, decLSPprevSalSave = 0, decLSPprevSalConf = 0, decLSPprevSalPaid = 0, decLSPprevSalClos = 0;
            decimal decLSPnetAmnt = 0, decLSPnetAmntSave = 0, decLSPnetAmntConf = 0, decLSPnetAmntPaid = 0, decLSPnetAmntClos = 0;
            decimal decLSPnOtH = 0, decLSPnOtHSave = 0, decLSPnOtHConf = 0, decLSPnOtHPaid = 0, decLSPnOtHClos = 0;
            decimal decLSPnOtAmt = 0, decLSPnOtAmtSave = 0, decLSPnOtAmtConf = 0, decLSPnOtAmtPaid = 0, decLSPnOtAmtClos = 0;
            decimal decLSPhOtH = 0, decLSPhOtHSave = 0, decLSPhOtHConf = 0, decLSPhOtHPaid = 0, decLSPhOtHClos = 0;
            decimal decLSPhOtAmt = 0, decLSPhOtAmtSave = 0, decLSPhOtAmtConf = 0, decLSPhOtAmtPaid = 0, decLSPhOtAmtClos = 0;
            decimal decLSPnetOT = 0, decLSPnetOTSave = 0, decLSPnetOTConf = 0, decLSPnetOTPaid = 0, decLSPnetOTClos = 0;

            decimal decESPproBasic = 0, decESPproBasicSave = 0, decESPproBasicConf = 0, decESPproBasicPaid = 0, decESPproBasicClos = 0;
            decimal decESPtcktAmnt = 0, decESPtcktAmntSave = 0, decESPtcktAmntConf = 0, decESPtcktAmntPaid = 0, decESPtcktAmntClos = 0;
            decimal decESPadd = 0, decESPaddSave = 0, decESPaddConf = 0, decESPaddPaid = 0, decESPaddClos = 0;
            decimal decESPded = 0, decESPdedSave = 0, decESPdedConf = 0, decESPdedPaid = 0, decESPdedClos = 0;
            decimal decESPleavDays = 0, decESPleavDaysSave = 0, decESPleavDaysConf = 0, decESPleavDaysPaid = 0, decESPleavDaysClos = 0;
            decimal decESPleavSal = 0, decESPleavSalSave = 0, decESPleavSalConf = 0, decESPleavSalPaid = 0, decESPleavSalClos = 0;
            decimal decESPgratDays = 0, decESPgratDaysSave = 0, decESPgratDaysConf = 0, decESPgratDaysPaid = 0, decESPgratDaysClos = 0;
            decimal decESPgratSal = 0, decESPgratSalSave = 0, decESPgratSalConf = 0, decESPgratSalPaid = 0, decESPgratSalClos = 0;
            decimal decESPprevSal = 0, decESPprevSalSave = 0, decESPprevSalConf = 0, decESPprevSalPaid = 0, decESPprevSalClos = 0;
            decimal decESPnetAmnt = 0, decESPnetAmntSave = 0, decESPnetAmntConf = 0, decESPnetAmntPaid = 0, decESPnetAmntClos = 0;
            decimal decESPnOtH = 0, decESPnOtHSave = 0, decESPnOtHConf = 0, decESPnOtHPaid = 0, decESPnOtHClos = 0;
            decimal decESPnOtAmt = 0, decESPnOtAmtSave = 0, decESPnOtAmtConf = 0, decESPnOtAmtPaid = 0, decESPnOtAmtClos = 0;
            decimal decESPhOtH = 0, decESPhOtHSave = 0, decESPhOtHConf = 0, decESPhOtHPaid = 0, decESPhOtHClos = 0;
            decimal decESPhOtAmt = 0, decESPhOtAmtSave = 0, decESPhOtAmtConf = 0, decESPhOtAmtPaid = 0, decESPhOtAmtClos = 0;
            decimal decESPnetOT = 0, decESPnetOTSave = 0, decESPnetOTConf = 0, decESPnetOTPaid = 0, decESPnetOTClos = 0;



            DataTable dtadd = new DataTable();
            DataTable dtDed = new DataTable();
            if (intShowAdd == 1)
                dtadd = objBusinessIntervewProcess.ReadAllwnc(objEntityIntervewProcess);
            if (intShowDed == 1)
                dtDed = objBusinessIntervewProcess.ReadDedctn(objEntityIntervewProcess);

            DataTable dtOTctgry = new DataTable();
            int intRowSpan = 1;
            if (objEntityIntervewProcess.StffWrkr == 1)
            {
                dtOTctgry = objBusinessIntervewProcess.ReadOTctgries(objEntityIntervewProcess);
                intRowSpan = 2;
                if (dtOTctgry.Rows.Count > 0)
                    strCrnAbbr = dtOTctgry.Rows[0]["CRNCMST_ABBRV"].ToString();
            }
            DataTable dtOTDetail = new DataTable();
            dtOTDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtOTDetail.Columns.Add("NORMAL", typeof(decimal));
            dtOTDetail.Columns.Add("HOLIDAY", typeof(decimal));

            string strHeadAddC = "", strHeadAdd = "";
            string strHeadDedC = "", strHeadDed = "";

            DataTable dtDetail = new DataTable();
            dtDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtDetail.Columns.Add("PAGE", typeof(string));
            dtDetail.Columns.Add("STATUS", typeof(string));
            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtadd.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    strHeadAdd += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    strHeadAddC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5_2 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                }
                else
                {
                    strHeadAdd += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    strHeadAddC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5_2 tr_r\">" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                }
            }
            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtDed.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    strHeadDed += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    strHeadDedC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                }
                else
                {
                    strHeadDed += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                    strHeadDedC += "<th rowspan=\"" + intRowSpan + "\" class=\"th_b5 tr_r\">" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + "</th>";
                }
            }
            int roundNum = 2;
            if (HiddenFieldIndividualRound.Value == "1")
            {
                roundNum = 0;
            }

            for (int i = 0; i < dt.Rows.Count; i++)
            {
                DataRow drDtl = dtDetail.NewRow();
                drDtl["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                //0041
                HiddenPaymentMode.Value = dt.Rows[i]["PAYMENT_METHOD"].ToString();

                //end
                drDtl["PAGE"] = dt.Rows[i]["PAGE"].ToString();
                drDtl["STATUS"] = dt.Rows[i]["STATUS"].ToString();
                string Mode = dt.Rows[i]["PAGE"].ToString();
                string Status = dt.Rows[i]["STATUS"].ToString();
                DataTable dtOTctgryShow = new DataTable();
                objEntityIntervewProcess.Employee = Convert.ToInt32(dt.Rows[i]["USR_ID"].ToString());
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    if (Mode != "1")
                    {
                        if (dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != null && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != "" && dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != null)
                        {
                            objEntityIntervewProcess.CurrentDate = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_TO_DATE"].ToString());
                            objEntityIntervewProcess.date = objCommon.textToDateTime(dt.Rows[i]["LEVSETLMT_FROM_DATE"].ToString());
                            if (objEntityIntervewProcess.CurrentDate.Month != objEntityIntervewProcess.date.Month)
                            {
                                objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.CurrentDate.Year, objEntityIntervewProcess.CurrentDate.Month, 1);
                            }
                        }
                    }
                    else
                    {
                        objEntityIntervewProcess.CurrentDate = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, daysInm);
                        objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1);
                    }
                    dtOTctgryShow = objBusinessIntervewProcess.ReadOTdtls(objEntityIntervewProcess);
                }
                DataTable dtAddShow = new DataTable();
                DataTable dtDedShow = new DataTable();
                objEntityIntervewProcess.SalaryPrssId = Convert.ToInt32(dt.Rows[i]["MASTER_ID"].ToString());
                objEntityIntervewProcess.SavConf = Convert.ToInt32(Mode);
                if (intShowAdd == 1)
                {
                    dtAddShow = objBusinessIntervewProcess.ReadAllowanceDetails(objEntityIntervewProcess);
                }
                if (intShowDed == 1)
                {
                    dtDedShow = objBusinessIntervewProcess.ReadDeductionDetails(objEntityIntervewProcess);
                }

                decimal decPerDaySal = Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()) / daysInm;
                decimal workdays = Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()) / decPerDaySal;
                workdays = Math.Round(workdays, 1);
                if (workdays % 1 == 0)
                {
                    workdays = Convert.ToInt32(workdays);
                }
                decimal decTotAdd = 0, decTotDed = 0;
                decimal decTotOTcurr = 0;
                if (Mode == "1" && Status == "1")
                {
                    strMSPsave += "<tr>";
                    strMSPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strMSPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                    strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPnOtHSave += OtHrs;
                                    decMSPnOtAmtSave += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPhOtHSave += OtHrs;
                                    decMSPhOtAmtSave += currOtAmnt;

                                }
                            }
                            strMSPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decMSPnetOTSave += decTotOTcurr;
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strMSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPsave += "</tr>";

                    decMSPproBasicSave += Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString());
                    decMSPaddSave += decTotAdd;
                    decMSPdedSave += decTotDed;
                    decMSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "1" && Status == "2")
                {
                    strMSPconf += "<tr>";
                    strMSPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strMSPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                    strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPnOtHConf += OtHrs;
                                    decMSPnOtAmtConf += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPhOtHConf += OtHrs;
                                    decMSPhOtAmtConf += currOtAmnt;
                                }
                            }
                            strMSPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decMSPnetOTConf += decTotOTcurr;
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strMSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPconf += "</tr>";

                    decMSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decMSPaddConf += decTotAdd;
                    decMSPdedConf += decTotDed;
                    decMSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "1" && Status == "3")
                {
                    strMSPpaid += "<tr>";
                    strMSPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strMSPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                    strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPnOtHPaid += OtHrs;
                                    decMSPnOtAmtPaid += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPhOtHPaid += OtHrs;
                                    decMSPhOtAmtPaid += currOtAmnt;
                                }
                            }
                            strMSPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decMSPnetOTPaid += decTotOTcurr;
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strMSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPpaid += "</tr>";

                    decMSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decMSPaddPaid += decTotAdd;
                    decMSPdedPaid += decTotDed;
                    decMSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "1" && Status == "4")
                {
                    strMSPclos += "<tr>";
                    strMSPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strMSPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                    strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPnOtHClos += OtHrs;
                                    decMSPnOtAmtClos += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decMSPhOtHClos += OtHrs;
                                    decMSPhOtAmtClos += currOtAmnt;
                                }
                            }
                            strMSPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decMSPnetOTClos += decTotOTcurr;
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strMSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strMSPclos += "</tr>";

                    decMSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decMSPaddClos += decTotAdd;
                    decMSPdedClos += decTotDed;
                    decMSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "2" && Status == "1")
                {
                    strLSPsave += "<tr>";
                    strLSPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strLSPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPnOtHSave += OtHrs;
                                    decLSPnOtAmtSave += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPhOtHSave += OtHrs;
                                    decLSPhOtAmtSave += currOtAmnt;
                                }
                            }
                            strLSPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decLSPnetOTSave += decTotOTcurr;
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPsave += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPsave += "</tr>";

                    decLSPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decLSPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decLSPaddSave += decTotAdd;
                    decLSPdedSave += decTotDed;
                    decLSPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decLSPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decLSPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decLSPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "2" && Status == "2")
                {
                    strLSPconf += "<tr>";
                    strLSPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strLSPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPnOtHConf += OtHrs;
                                    decLSPnOtAmtConf += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPhOtHConf += OtHrs;
                                    decLSPhOtAmtConf += currOtAmnt;
                                }
                            }
                            strLSPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decLSPnetOTConf += decTotOTcurr;
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPconf += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPconf += "</tr>";

                    decLSPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decLSPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decLSPaddConf += decTotAdd;
                    decLSPdedConf += decTotDed;
                    decLSPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decLSPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decLSPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decLSPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "2" && Status == "3")
                {
                    strLSPpaid += "<tr>";
                    strLSPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strLSPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPnOtHPaid += OtHrs;
                                    decLSPnOtAmtPaid += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPhOtHPaid += OtHrs;
                                    decLSPhOtAmtPaid += currOtAmnt;
                                }
                            }
                            strLSPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decLSPnetOTPaid += decTotOTcurr;
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPpaid += "</tr>";

                    decLSPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decLSPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decLSPaddPaid += decTotAdd;
                    decLSPdedPaid += decTotDed;
                    decLSPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decLSPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decLSPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decLSPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "2" && Status == "4")
                {
                    strLSPclos += "<tr>";
                    strLSPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strLSPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPnOtHClos += OtHrs;
                                    decLSPnOtAmtClos += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decLSPhOtHClos += OtHrs;
                                    decLSPhOtAmtClos += currOtAmnt;
                                }
                            }
                            strLSPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decLSPnetOTClos += decTotOTcurr;
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPclos += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strLSPclos += "</tr>";

                    decLSPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decLSPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decLSPaddClos += decTotAdd;
                    decLSPdedClos += decTotDed;
                    decLSPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decLSPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decLSPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decLSPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }



                else if (Mode == "3" && Status == "1")
                {
                    strESPsave += "<tr>";
                    strESPsave += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strESPsave += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "<td class=\"tr_c\">" + workdays + "</td>";
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPnOtHSave += OtHrs;
                                    decESPnOtAmtSave += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPhOtHSave += OtHrs;
                                    decESPhOtAmtSave += currOtAmnt;
                                }
                            }
                            strESPsave += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decESPnetOTSave += decTotOTcurr;
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPsave += "</tr>";

                    decESPproBasicSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decESPtcktAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decESPaddSave += decTotAdd;
                    decESPdedSave += decTotDed;
                    decESPleavDaysSave += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decESPleavSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decESPgratDaysSave += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                    decESPgratSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                    decESPprevSalSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decESPnetAmntSave += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "3" && Status == "2")
                {
                    strESPconf += "<tr>";
                    strESPconf += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strESPconf += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "<td class=\"tr_c\">" + workdays + "</td>";
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPnOtHConf += OtHrs;
                                    decESPnOtAmtConf += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPhOtHConf += OtHrs;
                                    decESPhOtAmtConf += currOtAmnt;
                                }
                            }
                            strESPconf += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decESPnetOTConf += decTotOTcurr;
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPconf += "</tr>";

                    decESPproBasicConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decESPtcktAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decESPaddConf += decTotAdd;
                    decESPdedConf += decTotDed;
                    decESPleavDaysConf += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decESPleavSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decESPgratDaysConf += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                    decESPgratSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                    decESPprevSalConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decESPnetAmntConf += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "3" && Status == "3")
                {
                    strESPpaid += "<tr>";
                    strESPpaid += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strESPpaid += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "<td class=\"tr_c\">" + workdays + "</td>";
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;
                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPnOtHPaid += OtHrs;
                                    decESPnOtAmtPaid += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPhOtHPaid += OtHrs;
                                    decESPhOtAmtPaid += currOtAmnt;
                                }
                            }
                            strESPpaid += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decESPnetOTPaid += decTotOTcurr;
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPpaid += "</tr>";

                    decESPproBasicPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decESPtcktAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decESPaddPaid += decTotAdd;
                    decESPdedPaid += decTotDed;
                    decESPleavDaysPaid += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decESPleavSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decESPgratDaysPaid += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                    decESPgratSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                    decESPprevSalPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decESPnetAmntPaid += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                else if (Mode == "3" && Status == "4")
                {
                    strESPclos += "<tr>";
                    strESPclos += "<td class=\"tr_l\" class=\"fotr_1\">" + dt.Rows[i]["EID"].ToString() + "</td>";
                    strESPclos += "<td class=\"tr_l\">" + dt.Rows[i]["EMPLOYEE"].ToString() + "</td>";
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "<td class=\"tr_c\">" + workdays + "</td>";
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        if (decPerDaySal > 0)
                        {
                            decPerDaySal = decPerDaySal / 8;
                        }
                        DataRow drDtlO = dtOTDetail.NewRow();
                        drDtlO["CPRDEPT_ID"] = dt.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtlO["NORMAL"] = 0;
                        drDtlO["HOLIDAY"] = 0;



                        for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                        {
                            DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                            decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                            if (dr.Length > 0)
                            {
                                OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                currOtAmnt = OtHrs * otRate * decPerDaySal;
                                currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                decTotOTcurr += currOtAmnt;
                                if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                {
                                    strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPnOtHClos += OtHrs;
                                    decESPnOtAmtClos += currOtAmnt;
                                    drDtlO["NORMAL"] = currOtAmnt;
                                }
                                else
                                {
                                    drDtlO["HOLIDAY"] = currOtAmnt;
                                    strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                    decESPhOtHClos += OtHrs;
                                    decESPhOtAmtClos += currOtAmnt;
                                }
                            }
                            strESPclos += "<td class=\"tr_c\">" + OtHrs + "</td>";
                            strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        }
                        dtOTDetail.Rows.Add(drDtlO);
                        decESPnetOTClos += decTotOTcurr;
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    }
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtAddShow.Rows.Count; j++)
                    {
                        decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotAdd = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    for (int j = 0; j < dtDedShow.Rows.Count; j++)
                    {
                        decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                        strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                        drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                    }
                    decTotDed = Math.Round(Convert.ToDecimal(dt.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "<td class=\"tr_c\">" + dt.Rows[i]["ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "<td class=\"tr_c\">" + dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString() + "</td>";
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon) + "</td>";
                    strESPclos += "</tr>";

                    decESPproBasicClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                    decESPtcktAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                    decESPaddClos += decTotAdd;
                    decESPdedClos += decTotDed;
                    decESPleavDaysClos += Convert.ToDecimal(dt.Rows[i]["ELIGIBLE_DAYS"].ToString());
                    decESPleavSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                    decESPgratDaysClos += Convert.ToDecimal(dt.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                    decESPgratSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                    decESPprevSalClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                    decESPnetAmntClos += Math.Round(Convert.ToDecimal(dt.Rows[i]["NET_AMNT"].ToString()), 0);
                }
                dtDetail.Rows.Add(drDtl);
            }
            decMSPproBasic = decMSPproBasicSave + decMSPproBasicConf + decMSPproBasicPaid + decMSPproBasicClos;
            decMSPadd = decMSPaddSave + decMSPaddConf + decMSPaddPaid + decMSPaddClos;
            decMSPded = decMSPdedSave + decMSPdedConf + decMSPdedPaid + decMSPdedClos;
            decMSPnetAmnt = decMSPnetAmntSave + decMSPnetAmntConf + decMSPnetAmntPaid + decMSPnetAmntClos;
            decLSPproBasic = decLSPproBasicSave + decLSPproBasicConf + decLSPproBasicPaid + decLSPproBasicClos;
            decLSPtcktAmnt = decLSPtcktAmntSave + decLSPtcktAmntConf + decLSPtcktAmntPaid + decLSPtcktAmntClos;
            decLSPadd = decLSPaddSave + decLSPaddConf + decLSPaddPaid + decLSPaddClos;
            decLSPded = decLSPdedSave + decLSPdedConf + decLSPdedPaid + decLSPdedClos;
            decLSPleavDays = decLSPleavDaysSave + decLSPleavDaysConf + decLSPleavDaysPaid + decLSPleavDaysClos;
            decLSPleavSal = decLSPleavSalSave + decLSPleavSalConf + decLSPleavSalPaid + decLSPleavSalClos;
            decLSPprevSal = decLSPprevSalSave + decLSPprevSalConf + decLSPprevSalPaid + decLSPprevSalClos;
            decLSPnetAmnt = decLSPnetAmntSave + decLSPnetAmntConf + decLSPnetAmntPaid + decLSPnetAmntClos;
            decESPproBasic = decESPproBasicSave + decESPproBasicConf + decESPproBasicPaid + decESPproBasicClos;
            decESPtcktAmnt = decESPtcktAmntSave + decESPtcktAmntConf + decESPtcktAmntPaid + decESPtcktAmntClos;
            decESPadd = decESPaddSave + decESPaddConf + decESPaddPaid + decESPaddClos;
            decESPded = decESPdedSave + decESPdedConf + decESPdedPaid + decESPdedClos;
            decESPleavDays = decESPleavDaysSave + decESPleavDaysConf + decESPleavDaysPaid + decESPleavDaysClos;
            decESPleavSal = decESPleavSalSave + decESPleavSalConf + decESPleavSalPaid + decESPleavSalClos;
            decESPgratDays = decESPgratDaysSave + decESPgratDaysConf + decESPgratDaysPaid + decESPgratDaysClos;
            decESPgratSal = decESPgratSalSave + decESPgratSalConf + decESPgratSalPaid + decESPgratSalClos;
            decESPprevSal = decESPprevSalSave + decESPprevSalConf + decESPprevSalPaid + decESPprevSalClos;
            decESPnetAmnt = decESPnetAmntSave + decESPnetAmntConf + decESPnetAmntPaid + decESPnetAmntClos;
            decMSPnOtH = decMSPnOtHSave + decMSPnOtHConf + decMSPnOtHPaid + decMSPnOtHClos;
            decMSPnOtAmt = decMSPnOtAmtSave + decMSPnOtAmtConf + decMSPnOtAmtPaid + decMSPnOtAmtClos;
            decMSPhOtH = decMSPhOtHSave + decMSPhOtHConf + decMSPhOtHPaid + decMSPhOtHClos;
            decMSPhOtAmt = decMSPhOtAmtSave + decMSPhOtAmtConf + decMSPhOtAmtPaid + decMSPhOtAmtClos;
            decMSPnetOT = decMSPnetOTSave + decMSPnetOTConf + decMSPnetOTPaid + decMSPnetOTClos;
            decLSPnOtH = decLSPnOtHSave + decLSPnOtHConf + decLSPnOtHPaid + decLSPnOtHClos;
            decLSPnOtAmt = decLSPnOtAmtSave + decLSPnOtAmtConf + decLSPnOtAmtPaid + decLSPnOtAmtClos;
            decLSPhOtH = decLSPhOtHSave + decLSPhOtHConf + decLSPhOtHPaid + decLSPhOtHClos;
            decLSPhOtAmt = decLSPhOtAmtSave + decLSPhOtAmtConf + decLSPhOtAmtPaid + decLSPhOtAmtClos;
            decLSPnetOT = decLSPnetOTSave + decLSPnetOTConf + decLSPnetOTPaid + decLSPnetOTClos;
            decESPnOtH = decESPnOtHSave + decESPnOtHConf + decESPnOtHPaid + decESPnOtHClos;
            decESPnOtAmt = decESPnOtAmtSave + decESPnOtAmtConf + decESPnOtAmtPaid + decESPnOtAmtClos;
            decESPhOtH = decESPhOtHSave + decESPhOtHConf + decESPhOtHPaid + decESPhOtHClos;
            decESPhOtAmt = decESPhOtAmtSave + decESPhOtAmtConf + decESPhOtAmtPaid + decESPhOtAmtClos;
            decESPnetOT = decESPnetOTSave + decESPnetOTConf + decESPnetOTPaid + decESPnetOTClos;
            if (strMSPsave != "" || strMSPconf != "" || strMSPpaid != "" || strMSPclos != "")
            {
                int MSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 8;
                strMSP += "<div class=\"devider\"></div>";
                strMSP += "<div class=\"free_sp\"></div>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    MSPcolSpan += 5;
                    strMSP += "<table class=\"display table-bordered pro_tab1 tbl_fl1\" cellspacing=\"0\" width=\"100%\">";
                    strMSP += "<thead class=\"thead1\">";
                    strMSP += "<tr><th colspan=\"" + MSPcolSpan + "\">MONTHLY SALARY STATEMENT  - WORKER </th></tr>";
                    //0041
                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strMSP += "<tr>";
                        strMSP += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                        strMSP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strMSP += "<tr>";
                        strMSP += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                        strMSP += "</tr>";
                    }

                    strMSP += "<tr>";
                    strMSP += "<th class=\"th_b1 tr_l\" rowspan=\"2\">Employee ID</th>";
                    strMSP += "<th class=\"th_b8 tr_l\" rowspan=\"2\">Employee Name</th>";
                    strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Basic</th>";
                    strMSP += "<th class=\"th_b5_2 tr_c\" rowspan=\"2\">Days</th>";
                    strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Earned </br> Basic</th>";
                    strMSP += "<th class=\"th_b1 bg_nrm\"colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                    strMSP += "<th class=\"th_b1 bg_hld\"colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                    strMSP += "<th class=\"th_b1 tr_r\" rowspan=\"2\">Total OT<br> Amount</th>";
                    strMSP += strHeadAdd;
                    strMSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                    strMSP += strHeadDed;
                    strMSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deductions</th>";
                    strMSP += "<th class=\"th_b5_5 tr_r\" rowspan=\"2\">Net Amount</th>";
                    strMSP += "</tr>";
                    strMSP += "<tr>";
                    strMSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strMSP += "<th class=\"th_b7 tr_r\">Amount</th>";
                    strMSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strMSP += "<th class=\"th_b7 tr_r\">Amount</th>";
                    strMSP += "</tr>";
                }
                else
                {
                    strMSP += "<table class=\"display table-bordered pro_tab1 tbl_fl\" cellspacing=\"0\" width=\"100%\">";
                    strMSP += "<thead class=\"thead1\">";
                    strMSP += "<tr><th colspan=\"" + MSPcolSpan + "\">MONTHLY SALARY STATEMENT  - STAFF </th></tr>";

                    //0041
                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strMSP += "<tr>";
                        strMSP += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                        strMSP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strMSP += "<tr>";
                        strMSP += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                        strMSP += "</tr>";
                    }
                    strMSP += "<tr>";
                    strMSP += "<th class=\"th_b1 tr_l\">Employee ID</th>";
                    strMSP += "<th class=\"th_b8 tr_l\">Employee Name</th>";
                    strMSP += "<th class=\"th_b5 tr_r\">Basic</th>";
                    strMSP += "<th class=\"th_b5_2 tr_c\">Days</th>";
                    strMSP += "<th class=\"th_b5 tr_r\">Earned<br> Basic</th>";
                    strMSP += strHeadAdd;
                    strMSP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                    strMSP += strHeadDed;
                    strMSP += "<th class=\"th_b5 tr_r\">Other<br> Deduction</th>";
                    strMSP += "<th class=\"th_b5_5 tr_r\">Net Amount</th>";
                    strMSP += "</tr>";
                }
                strMSP += "</thead>";
                strMSP += "<tbody>";



                if (strMSPsave != "")
                {


                    strMSP += "<tr>";
                    strMSP += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                    strMSP += "</tr>";
                    strMSP += strMSPsave;
                    strMSP += "<tr class=\"fotr_1_1\">";
                    strMSP += "<th></th>";
                    strMSP += "<th></th>";
                    strMSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Pending)</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";

                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strMSP += "<th class=\"tr_c\">" + decMSPnOtHSave.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_c\">" + decMSPhOtHSave.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "</tr>";
                }
                if (strMSPconf != "")
                {


                    strMSP += "<tr>";
                    strMSP += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed</td>";
                    strMSP += "</tr>";
                    strMSP += strMSPconf;
                    strMSP += "<tr class=\"fotr_1_1\">";
                    strMSP += "<th></th>";
                    strMSP += "<th></th>";
                    strMSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Confirmed)</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strMSP += "<th class=\"tr_c\">" + decMSPnOtHConf.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_c\">" + decMSPhOtHConf.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "</tr>";
                }
                if (strMSPpaid != "")
                {
                    strMSP += "<tr>";
                    strMSP += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                    strMSP += "</tr>";
                    strMSP += strMSPpaid;
                    strMSP += "<tr class=\"fotr_1_1\">";
                    strMSP += "<th></th>";
                    strMSP += "<th></th>";
                    strMSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Paid)</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strMSP += "<th class=\"tr_c\">" + decMSPnOtHPaid.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_c\">" + decMSPhOtHPaid.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "</tr>";
                }
                if (strMSPclos != "")
                {
                    strMSP += "<tr>";
                    strMSP += "<td colspan=\"" + MSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                    strMSP += "</tr>";
                    strMSP += strMSPclos;
                    strMSP += "<tr class=\"fotr_1_1\">";
                    strMSP += "<th></th>";
                    strMSP += "<th></th>";
                    strMSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Closed)</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strMSP += "<th class=\"tr_c\">" + decMSPnOtHClos.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_c\">" + decMSPhOtHClos.ToString("0.00") + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "</tr>";
                }
                strMSP += "</tbody>";
                strMSP += "<tfoot>";
                strMSP += "<tr class=\"fotr_1_1\">";
                strMSP += "<th></th>";
                strMSP += "<th></th>";
                strMSP += "<th colspan=\"2\" class=\"tr_l\">Grand Total</th>";
                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    strMSP += "<th class=\"tr_c\">" + decMSPnOtH.ToString("0.00") + "</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_c\">" + decMSPhOtH.ToString("0.00") + "</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                {
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                {
                    strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strMSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strMSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strMSP += "</tr>";
                strMSP += "</tfoot>";
                strMSP += "</table>";
                divMSP.InnerHtml = strMSP;
            }
            else
            {
              //  linkMSP.Visible = false;
            }

            if (strLSPsave != "" || strLSPconf != "" || strLSPpaid != "" || strLSPclos != "")
            {
                int LSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 12;
                strLSP += "<div class=\"devider\"></div>";
                strLSP += "<div class=\"free_sp\"></div>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    LSPcolSpan += 5;
                    strLSP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\" width=\"100%\">";
                    strLSP += "<thead class=\"thead1\">";
                    strLSP += "<tr>";
                    strLSP += "<th colspan=\"" + LSPcolSpan + "\">Leave Settlement </th>";
                    strLSP += "</tr>";
                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strLSP += "<tr>";
                        strLSP += "<td colspan=21 class=td_bnk tr_l>Bank</td>";
                        strLSP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strLSP += "<tr>";
                        strLSP += "<td colspan=21 class=td_bnk tr_l>Cash</td>";
                        strLSP += "</tr>";
                    }

                    strLSP += "<tr>";
                    strLSP += "<th class=\"th_b1_4 tr_l\" rowspan=\"2\">Employee ID</th>";
                    strLSP += "<th class=\"th_b7 tr_l\" rowspan=\"2\">Employee Name</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Basic</th>";
                    strLSP += "<th class=\"th_b5_2 tr_c\" rowspan=\"2\">Days</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Earned </br>Basic</th>";
                    strLSP += "<th class=\"th_b1 bg_nrm\"colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                    strLSP += "<th class=\"th_b1 bg_hld\"colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                    strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Total OT <br>Amount</th>";
                    strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Air Ticket</br>Amount</th>";
                    strLSP += strHeadAddC;
                    strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                    strLSP += strHeadDedC;
                    strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deduction</th>";
                    strLSP += "<th class=\"th_b1_4 tr_c\" rowspan=\"2\">Eligible Days</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Leave </br> Salary</th>";
                    strLSP += "<th class=\"th_b1_4 tr_r\" rowspan=\"2\">Previous<br> Month</br> Salary</th>";
                    strLSP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Net </br>Amount</th>";
                    strLSP += "</tr>";
                    strLSP += "<tr>";
                    strLSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strLSP += "<th class=\"th_b1 tr_r\">Amount</th>";
                    strLSP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strLSP += "<th class=\"th_b1 tr_r\">Amount</th>";
                    strLSP += "</tr>";


                }
                else
                {
                    strLSP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\" width=\"100%\">";
                    strLSP += "<thead class=\"thead1\">";
                    strLSP += "<tr>";
                    strLSP += "<th colspan=\"" + LSPcolSpan + "\">Leave Settlement </th>";

                    strLSP += "</tr>";
                    //0041

                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strLSP += "<tr>";
                        strLSP += "<td colspan=21 class=td_bnk tr_l>Bank</td>";
                        strLSP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strLSP += "<tr>";
                        strLSP += "<td colspan=21 class=td_bnk tr_l>Cash</td>";
                        strLSP += "</tr>";
                    }
                    strLSP += "<tr>";
                    strLSP += "<th class=\"th_b1_4 tr_l\">Employee ID</th>";
                    strLSP += "<th class=\"th_b7 tr_l\">Employee Name</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\">Basic</th>";
                    strLSP += "<th class=\"th_b5_2 tr_c\">Days</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\">Earned<br> Basic</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\">Air Ticket<br>Amount</th>";
                    strLSP += strHeadAddC;
                    strLSP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                    strLSP += strHeadDedC;
                    strLSP += "<th class=\"th_b5 tr_r\">Other<br> Deduction</th>";
                    strLSP += "<th class=\"th_b1_4 tr_c\">Eligible Days<br> for Leave Salary</th>";
                    strLSP += "<th class=\"th_b5_2 tr_r\">Leave<br> Salary</th>";
                    strLSP += "<th class=\"th_b1_4 tr_r\">Previous<br> Month Salary</th>";
                    strLSP += "<th class=\"th_b5 tr_r\">Net Amount</th>";
                    strLSP += "</tr>";
                }
                strLSP += "</thead>";
                strLSP += "<tbody>";


                if (strLSPsave != "")
                {
                    strLSP += "<tr>";
                    strLSP += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                    strLSP += "</tr>";
                    strLSP += strLSPsave;
                    strLSP += "<tr class=\"fotr_1\">";
                    strLSP += "<th></th>";
                    strLSP += "<th></th>";
                    strLSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Pending)</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strLSP += "<th class=\"tr_c\">" + decLSPnOtHSave.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_c\">" + decLSPhOtHSave.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_c\">" + decLSPleavDaysSave.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "</tr>";
                }
                if (strLSPconf != "")
                {
                    strLSP += "<tr>";
                    strLSP += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                    strLSP += "</tr>";
                    strLSP += strLSPconf;
                    strLSP += "<tr class=\"fotr_1\">";
                    strLSP += "<th></th>";
                    strLSP += "<th></th>";
                    strLSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Confirmed)</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strLSP += "<th class=\"tr_c\">" + decLSPnOtHConf.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_c\">" + decLSPhOtHConf.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_c\">" + decLSPleavDaysConf.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "</tr>";
                }
                if (strLSPpaid != "")
                {
                    strLSP += "<tr>";
                    strLSP += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                    strLSP += "</tr>";
                    strLSP += strLSPpaid;
                    strLSP += "<tr class=\"fotr_1\">";
                    strLSP += "<th></th>";
                    strLSP += "<th></th>";
                    strLSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Paid)</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strLSP += "<th class=\"tr_c\">" + decLSPnOtHPaid.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_c\">" + decLSPhOtHPaid.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_c\">" + decLSPleavDaysPaid.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "</tr>";
                }
                if (strLSPclos != "")
                {
                    strLSP += "<tr>";
                    strLSP += "<td colspan=\"" + LSPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                    strLSP += "</tr>";
                    strLSP += strLSPclos;
                    strLSP += "<tr class=\"fotr_1\">";
                    strLSP += "<th></th>";
                    strLSP += "<th></th>";
                    strLSP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Closed)</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strLSP += "<th class=\"tr_c\">" + decLSPnOtHClos.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_c\">" + decLSPhOtHClos.ToString("0.00") + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_c\">" + decLSPleavDaysClos.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "</tr>";
                }
                strLSP += "</tbody>";
                strLSP += "<tfoot>";
                strLSP += "<tr class=\"fotr_1_1\">";
                strLSP += "<th></th>";
                strLSP += "<th></th>";
                strLSP += "<th colspan=\"2\" class=\"tr_l\">Grand Total Amount</th>";
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    strLSP += "<th class=\"tr_c\">" + decLSPnOtH.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_c\">" + decLSPhOtH.ToString("0.00") + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                {
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                {
                    strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strLSP += "<th class=\"tr_c\">" + decLSPleavDays.ToString("0.00") + "</th>";
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strLSP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strLSP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strLSP += "</tr>";
                strLSP += "</tfoot>";
                strLSP += "</table>";
                divLSP.InnerHtml = strLSP;
            }
            else
            {
                //linkLSP.Visible = false;
            }
            if (strESPsave != "" || strESPconf != "" || strESPpaid != "" || strESPclos != "")
            {
                int ESPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 14;
                strESP += "<div class=\"devider\"></div>";
                strESP += "<div class=\"free_sp\"></div>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    ESPcolSpan += 5;
                    strESP += "<table class=\"display table-bordered pro_tab1 tbl_fl3\" cellspacing=\"0\">";
                    strESP += "<thead class=\"thead1\">";
                    strESP += "<tr>";
                    strESP += "<th colspan=\"" + ESPcolSpan + "\">End of Service Settlement</th>";
                    strESP += "</tr>";
                    //0041


                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strESP += "<tr>";
                        strESP += "<td colspan=" + ESPcolSpan + " class=td_bnk tr_l>Bank</td>";
                        strESP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strESP += "<tr>";
                        strESP += "<td colspan=" + ESPcolSpan + " class=td_bnk tr_l>Cash</td>";
                        strESP += "</tr>";
                    }

                    strESP += "<tr>";
                    strESP += "<th class=\"th_b5 tr_l\" rowspan=\"2\">Employee ID</th>";
                    strESP += "<th class=\"th_b1 tr_l\" rowspan=\"2\">Employee Name</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Basic</th>";
                    strESP += "<th class=\"th_b5_1 tr_c\" rowspan=\"2\">Days</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Earned <br> Basic</th>";
                    strESP += "<th class=\"th_b5 bg_nrm\" colspan=\"2\">Normal OT @ " + strCrnAbbr + " " + strNormalOtRate + "</th>";
                    strESP += "<th class=\"th_b5 bg_hld\" colspan=\"2\">Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate + "</th>";
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Total OT <br>Amount</th>";
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Air Ticket<br>Amount</th>";
                    strESP += strHeadAddC;
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Addition</th>";
                    strESP += strHeadDedC;
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Other<br> Deduction</th>";
                    strESP += "<th class=\"th_b1 tr_c\" rowspan=\"2\">Eligible Days<br> for Leave </br>Salary</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\" rowspan=\"2\">Leave</br> Salary</th>";
                    strESP += "<th class=\"th_b1 tr_c\" rowspan=\"2\">Eligible Days</br> for Gratuity</th>";
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Gratuity<br> Amount</th>";
                    strESP += "<th class=\"th_b5 tr_r\" rowspan=\"2\">Previous<br> Month</br> Salary</th>";
                    strESP += "<th class=\"th_b5_2 tr_r\" rowspan=\"2\">Net </br> Amount</th>";
                    strESP += "</tr>";
                    strESP += "<tr>";
                    strESP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strESP += "<th class=\"th_b5 tr_r\">Amount</th>";
                    strESP += "<th class=\"th_b5 tr_c\">Hours</th>";
                    strESP += "<th class=\"th_b5 tr_r\">Amount</th>";
                    strESP += "</tr>";
                }
                else
                {
                    strESP += "<table class=\"display table-bordered pro_tab1 tbl_fl2\" cellspacing=\"0\">";
                    strESP += "<thead class=\"thead1\">";
                    strESP += "<tr>";
                    strESP += "<th colspan=\"" + ESPcolSpan + "\">End of Service Settlement</th>";
                    strESP += "</tr>";
                    //0041


                    if (ddlpaymentmode.SelectedItem.Value == "0")
                    {
                        strESP += "<tr>";
                        strESP += "<td colspan=" + ESPcolSpan + "  class=td_bnk tr_l>Bank</td>";
                        strESP += "</tr>";
                    }
                    if (ddlpaymentmode.SelectedItem.Value == "1")
                    {
                        strESP += "<tr>";
                        strESP += "<td colspan=" + ESPcolSpan + "  class=td_bnk tr_l>Cash</td>";
                        strESP += "</tr>";
                    }
                    strESP += "<tr>";
                    strESP += "<th class=\"th_b5 tr_l\">Employee ID</th>";
                    strESP += "<th class=\"th_b1 tr_l\">Employee Name</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\">Basic</th>";
                    strESP += "<th class=\"th_b5_1 tr_c\">Days</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\">Earned<br> Basic</th>";
                    strESP += "<th class=\"th_b5_2 tr_r\">Air Ticket<br>Amount</th>";
                    strESP += strHeadAddC;
                    strESP += "<th class=\"th_b5_2 tr_r\">Other<br> Addition</th>";
                    strESP += strHeadDedC;
                    strESP += "<th class=\"th_b5_2 tr_r\">Other<br> Deduction</th>";
                    strESP += "<th class=\"th_b5 tr_c\">Eligible Days<br> for Leave Salary</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\">Leave<br> Salary</th>";
                    strESP += "<th class=\"th_b5 tr_c\">Eligible Days<br> for Gratuity</th>";
                    strESP += "<th class=\"th_b5_1 tr_r\">Gratuity<br> Amount</th>";
                    strESP += "<th class=\"th_b5 tr_r\">Previous<br> Month Salary</th>";
                    strESP += "<th class=\"th_b5_2 tr_r\">Net Amount</th>";
                    strESP += "</tr>";

                }
                strESP += "</thead>";
                strESP += "<tbody>";


                if (strESPsave != "")
                {
                    strESP += "<tr>";
                    strESP += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_pend tr_l\">Confirm Pending </td>";
                    strESP += "</tr>";
                    strESP += strESPsave;
                    strESP += "<tr class=\"fotr_1\">";
                    strESP += "<th></th>";
                    strESP += "<th></th>";
                    strESP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Pending)</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strESP += "<th class=\"tr_c\">" + decESPnOtHSave.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_c\">" + decESPhOtHSave.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPleavDaysSave.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPgratDaysSave.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "</tr>";
                }
                if (strESPconf != "")
                {
                    strESP += "<tr>";
                    strESP += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_cnfm tr_l\">Confirmed </td>";
                    strESP += "</tr>";
                    strESP += strESPconf;
                    strESP += "<tr class=\"fotr_1\">";
                    strESP += "<th></th>";
                    strESP += "<th></th>";
                    strESP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Confirmed)</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strESP += "<th class=\"tr_c\">" + decESPnOtHConf.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_c\">" + decESPhOtHConf.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPleavDaysConf.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPgratDaysConf.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "</tr>";
                }
                if (strESPpaid != "")
                {
                    strESP += "<tr>";
                    strESP += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_paid tr_l\">Paid </td>";
                    strESP += "</tr>";
                    strESP += strESPpaid;
                    strESP += "<tr class=\"fotr_1\">";
                    strESP += "<th></th>";
                    strESP += "<th></th>";
                    strESP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Paid)</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strESP += "<th class=\"tr_c\">" + decESPnOtHPaid.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_c\">" + decESPhOtHPaid.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPleavDaysPaid.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPgratDaysPaid.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "</tr>";
                }
                if (strESPclos != "")
                {
                    strESP += "<tr>";
                    strESP += "<td colspan=\"" + ESPcolSpan + "\" class=\"td_clos tr_l\">Closed </td>";
                    strESP += "</tr>";
                    strESP += strESPclos;
                    strESP += "<tr class=\"fotr_1\">";
                    strESP += "<th></th>";
                    strESP += "<th></th>";
                    strESP += "<th colspan=\"2\" class=\"tr_l\">Subtotal(Closed)</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        strESP += "<th class=\"tr_c\">" + decESPnOtHClos.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_c\">" + decESPhOtHClos.ToString("0.00") + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    }
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPleavDaysClos.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPgratDaysClos.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "</tr>";
                }
                strESP += "</tbody>";
                strESP += "<tfoot>";
                strESP += "<tr class=\"fotr_1_1\">";
                strESP += "<th></th>";
                strESP += "<th></th>";
                strESP += "<th colspan=\"2\" class=\"tr_l\">Grand Total</th>";
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasic, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    strESP += "<th class=\"tr_c\">" + decESPnOtH.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_c\">" + decESPhOtH.ToString("0.00") + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOT, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                {
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPadd, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                {
                    strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                }
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPded, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strESP += "<th class=\"tr_c\">" + decESPleavDays.ToString("0.00") + "</th>";
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strESP += "<th class=\"tr_c\">" + decESPgratDays.ToString("0.00") + "</th>";
                strESP += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSal, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strESP += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSal, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strESP += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strESP += "</tr>";
                strESP += "</tfoot>";
                strESP += "</table>";
                divESP.InnerHtml = strESP;
            }
            else
            {
               // linkESP.Visible = false;
            }
            HiddenFieldNOTrate.Value = strNormalOtRate;
            HiddenFieldHOTrate.Value = strHolidayOtRate;

            //Department wise tables
            string strHtmlDeptHeadC = "", strHtmlDeptHead = "";
            string strMSPdeptCnt = "", strLSPdeptCnt = "", strESPdeptCnt = "", strNetdeptCnt = "";
            string strMSPdeptNet = "", strLSPdeptNet = "", strESPdeptNet = "", strNetdeptNet = "";
            int cnt = 0, ColWiseTot = 0, MSPcnt = 0, LSPcnt = 0, ESPcnt = 0;
            decimal net = 0, ColWiseTotNet = 0, MSPnet = 0, LSPnet = 0, ESPnet = 0;
            decimal Basic = 0, RowWiseTotBasic = 0;
            string strNetdeptBasic = "", strNetdeptNOT = "", strNetdeptHOT = "";
            string strdeptAdd = "", strdeptAddNet = "";
            decimal Add = 0, RowWiseTotAdd = 0, RowWiseTotAddG = 0;
            string strdeptDed = "", strdeptDedNet = "";
            decimal Ded = 0, RowWiseTotDed = 0, RowWiseTotDedG = 0;

            DataView dtview = new DataView(dtDept);
            DataTable dtDistdept = dtview.ToTable(true, "CPRDEPT_ID", "CPRDEPT_NAME");

            DataTable dtPriAdd = new DataTable();
            dtPriAdd.Columns.Add("CPRDEPT_ID", typeof(string));
            dtPriAdd.Columns.Add("ADD", typeof(decimal));
            DataTable dtPriDed = new DataTable();
            dtPriDed.Columns.Add("CPRDEPT_ID", typeof(string));
            dtPriDed.Columns.Add("DED", typeof(decimal));

            string strPriAdd = "", strPriDed = "";
            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
            {
                decimal decNetAmnt = 0;
                strPriAdd += "<tr>";
                strPriAdd += "<td class=\"tr_l\">Total Amount (" + dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString() + ")</td>";
                for (int i = 0; i < dtDistdept.Rows.Count; i++)
                {
                    decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    strPriAdd += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    decNetAmnt += decAmnt;
                    DataRow drDtl = dtPriAdd.NewRow();
                    drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                    drDtl["ADD"] = decAmnt;
                    dtPriAdd.Rows.Add(drDtl);
                }
                strPriAdd += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strPriAdd += "</tr>";
            }
            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
            {
                decimal decNetAmnt = 0;
                strPriDed += "<tr>";
                strPriDed += "<td class=\"tr_l\">Total Amount (" + dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString() + ")</td>";
                for (int i = 0; i < dtDistdept.Rows.Count; i++)
                {
                    decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    strPriDed += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    decNetAmnt += decAmnt;
                    DataRow drDtl = dtPriDed.NewRow();
                    drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                    drDtl["DED"] = decAmnt;
                    dtPriDed.Rows.Add(drDtl);
                }
                strPriDed += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strPriDed += "</tr>";
            }
            for (int i = 0; i < dtDistdept.Rows.Count; i++)
            {
                ColWiseTotNet = 0; ColWiseTot = 0;

                strHtmlDeptHeadC += "<th class=\"th_b6\">" + dtDistdept.Rows[i][1].ToString() + "</th>";

                strHtmlDeptHead += "<th class=\"th_b6 tr_r\">" + dtDistdept.Rows[i][1].ToString() + "</th>";

                //MSP
                DataRow[] dr = dtDept.Select("PAGE=1 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                cnt = 0; net = 0; Basic = 0; Add = 0; Ded = 0;
                if (dr.Length > 0)
                {
                    cnt = Convert.ToInt32(dr[0]["CNT"].ToString());
                    net = Convert.ToDecimal(dr[0]["NET_AMNT"].ToString());
                    Basic += Convert.ToDecimal(dr[0]["SUM_BASIC"].ToString());
                    Add += Convert.ToDecimal(dr[0]["TOTAL_ADD"].ToString());
                    Ded += Convert.ToDecimal(dr[0]["TOTAL_DED"].ToString());
                }
                strMSPdeptCnt += "<td>" + cnt + "</td>";
                ColWiseTot += cnt;
                MSPcnt += cnt;
                strMSPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                ColWiseTotNet += net;
                MSPnet += net;
                //LSP
                DataRow[] dr1 = dtDept.Select("PAGE=2 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                cnt = 0; net = 0;
                if (dr1.Length > 0)
                {
                    cnt = Convert.ToInt32(dr1[0]["CNT"].ToString());
                    net = Convert.ToDecimal(dr1[0]["NET_AMNT"].ToString());
                    Basic += Convert.ToDecimal(dr1[0]["SUM_BASIC"].ToString());
                    Add += Convert.ToDecimal(dr1[0]["TOTAL_ADD"].ToString());
                    Ded += Convert.ToDecimal(dr1[0]["TOTAL_DED"].ToString());
                }
                strLSPdeptCnt += "<td>" + cnt + "</td>";
                ColWiseTot += cnt;
                LSPcnt += cnt;
                strLSPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                ColWiseTotNet += net;
                LSPnet += net;
                //ESP
                DataRow[] dr2 = dtDept.Select("PAGE=3 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                cnt = 0; net = 0;
                if (dr2.Length > 0)
                {
                    cnt = Convert.ToInt32(dr2[0]["CNT"].ToString());
                    net = Convert.ToDecimal(dr2[0]["NET_AMNT"].ToString());
                    Basic += Convert.ToDecimal(dr2[0]["SUM_BASIC"].ToString());
                    Add += Convert.ToDecimal(dr2[0]["TOTAL_ADD"].ToString());
                    Ded += Convert.ToDecimal(dr2[0]["TOTAL_DED"].ToString());
                }
                strESPdeptCnt += "<td>" + cnt + "</td>";
                ColWiseTot += cnt;
                ESPcnt += cnt;
                strESPdeptNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                ColWiseTotNet += net;
                ESPnet += net;

                decimal decAmntA = 0, decAmntD = 0;
                if (dtadd.Rows.Count > 0)
                {
                    decAmntA = Convert.ToDecimal(dtPriAdd.Compute("Sum(ADD)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                }
                if (dtDed.Rows.Count > 0)
                {
                    decAmntD = Convert.ToDecimal(dtPriDed.Compute("Sum(DED)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                }
                decimal decNotAmnt = 0, decHotAmnt = 0;
                if (objEntityIntervewProcess.StffWrkr == 1)
                {
                    decNotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(NORMAL)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    decHotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(HOLIDAY)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                    strNetdeptNOT += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decNotAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                    strNetdeptHOT += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(decHotAmnt, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                }
                //Add
                strdeptAdd += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((Add - decAmntA - decNotAmnt - decHotAmnt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                //Ded
                strdeptDed += "<td class=\" tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((Ded - decAmntD), roundNum).ToString("0.00"), objEntityCommon) + "</td>";

                //Net
                RowWiseTotAddG += Add;
                RowWiseTotDedG += Ded;
                RowWiseTotBasic += Basic;
                RowWiseTotAdd += (Add - decAmntA - decNotAmnt - decHotAmnt);
                RowWiseTotDed += (Ded - decAmntD);
                strNetdeptCnt += "<th class=\"tr_c\">" + ColWiseTot + "</th>";
                strNetdeptNet += "<th class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(ColWiseTotNet, roundNum).ToString("0.00"), objEntityCommon) + "</th>";
                strNetdeptBasic += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Basic, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strdeptAddNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Add, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strdeptDedNet += "<td class=\"tr_r\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(Ded, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            }

            string strHtmlEmpCnt = "";
            strHtmlEmpCnt += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
            strHtmlEmpCnt += "<thead class=\"thead1\">";
            strHtmlEmpCnt += "<tr>";
            strHtmlEmpCnt += "<th colspan=\"" + (dtDistdept.Rows.Count + 2) + "\">EMPLOYEE COUNT</th>";
            strHtmlEmpCnt += "</tr>";


            //0041
            if (ddlpaymentmode.SelectedItem.Value == "0")
            {
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td colspan=21 class=td_bnk tr_l>Bank</td>";
                strHtmlEmpCnt += "</tr>";
            }
            if (ddlpaymentmode.SelectedItem.Value == "1")
            {
                strHtmlEmpCnt += "<tr>";
                strHtmlEmpCnt += "<td colspan=21 class=td_bnk tr_l>Cash</td>";
                strHtmlEmpCnt += "</tr>";
            }


            strHtmlEmpCnt += "<tr>";
            strHtmlEmpCnt += "<th class=\"th_b4 tr_l\">Description</th>";
            strHtmlEmpCnt += strHtmlDeptHeadC;
            strHtmlEmpCnt += "<th class=\"th_b6\">Net Total</th>";
            strHtmlEmpCnt += "</tr>";
            strHtmlEmpCnt += "</thead>";
            strHtmlEmpCnt += "<tbody>";




            strHtmlEmpCnt += "<tr>";
            strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Monthly Salary)</td>";
            strHtmlEmpCnt += strMSPdeptCnt;
            strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + MSPcnt + "</td>";
            strHtmlEmpCnt += "</tr>";
            strHtmlEmpCnt += "<tr>";
            strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (Leave Settlement)</td>";
            strHtmlEmpCnt += strLSPdeptCnt;
            strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + LSPcnt + "</td>";
            strHtmlEmpCnt += "</tr>";
            strHtmlEmpCnt += "<tr>";
            strHtmlEmpCnt += "<td class=\"tr_l\">Total Employee# (End of Service Settlement)</td>";
            strHtmlEmpCnt += strESPdeptCnt;
            strHtmlEmpCnt += "<td class=\"fotr_1 nt_tl\">" + ESPcnt + "</td>";
            strHtmlEmpCnt += "</tr>";
            strHtmlEmpCnt += "</tbody>";
            strHtmlEmpCnt += "<tfoot>";
            strHtmlEmpCnt += "<tr class=\"fotr_1\">";
            strHtmlEmpCnt += "<th class=\"tr_l\">Total Employee#</th>";
            strHtmlEmpCnt += strNetdeptCnt;
            strHtmlEmpCnt += "<th class=\"tr_c nt_tl\">" + (MSPcnt + LSPcnt + ESPcnt) + "</th>";
            strHtmlEmpCnt += "</tr>";
            strHtmlEmpCnt += "</tfoot>";
            strHtmlEmpCnt += "</table>";
            divEmpCnt.InnerHtml = strHtmlEmpCnt;


            string strcurrenWord = objBusiness.ConvertCurrencyToWords(objEntityCommon, (MSPnet + LSPnet + ESPnet).ToString("0.00").Replace(",", ""));

            string strHtmlNetSum = "";
            strHtmlNetSum += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
            strHtmlNetSum += "<thead class=\"thead1\">";


            strHtmlNetSum += "<tr>";
            strHtmlNetSum += "<th colspan=\"" + (dtDistdept.Rows.Count + 2) + "\">Net Summary</th>";
            strHtmlNetSum += "</tr>";

            //0041
            if (ddlpaymentmode.SelectedItem.Value == "0")
            {
                strHtmlNetSum += "<tr>";
                strHtmlNetSum += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                strHtmlNetSum += "</tr>";
            }
            if (ddlpaymentmode.SelectedItem.Value == "1")
            {
                strHtmlNetSum += "<tr>";
                strHtmlNetSum += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                strHtmlNetSum += "</tr>";
            }


            strHtmlNetSum += "<tr>";
            strHtmlNetSum += "<th class=\"th_b4 tr_l\">Description</th>";
            strHtmlNetSum += strHtmlDeptHead;
            strHtmlNetSum += "<th class=\"th_b6 tr_r\">Net Total</th>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "</thead>";
            strHtmlNetSum += "<tbody>";


            strHtmlNetSum += "<tr>";
            strHtmlNetSum += "<td class=\"tr_l\">Total Amount (Monthly Salary)</td>";
            strHtmlNetSum += strMSPdeptNet;
            strHtmlNetSum += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(MSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "<tr>";
            strHtmlNetSum += "<td class=\"tr_l\">Total Amount (Leave Settlement)</td>";
            strHtmlNetSum += strLSPdeptNet;
            strHtmlNetSum += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(LSPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "<tr>";
            strHtmlNetSum += "<td class=\"tr_l\">Total Amount (End of Service Settlement)</td>";
            strHtmlNetSum += strESPdeptNet;
            strHtmlNetSum += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(ESPnet, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "</tbody>";
            strHtmlNetSum += "<tfoot>";
            strHtmlNetSum += "<tr class=\"fotr_1\">";
            strHtmlNetSum += "<th class=\"tr_l\">Net Amount</th>";
            strHtmlNetSum += strNetdeptNet;
            strHtmlNetSum += "<th class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((MSPnet + LSPnet + ESPnet), roundNum).ToString("0.00"), objEntityCommon) + "</th>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "<tr class=\"fotr_1\">";
            strHtmlNetSum += "<th class=\"tr_l\">Amount in Words</th>";
            strHtmlNetSum += "<th class=\"tr_l bg_wt\" colspan=\"" + (dtDistdept.Rows.Count + 1) + "\">" + strcurrenWord + "</th>";
            strHtmlNetSum += "</tr>";
            strHtmlNetSum += "</tfoot>";
            strHtmlNetSum += "</table>";
            divNetSummary.InnerHtml = strHtmlNetSum;

            string strHtmlSalary = "";
            strHtmlSalary += "<table class=\"display table-bordered pro_tab1 tbl_800\" cellspacing=\"0\" width=\"100%\">";
            strHtmlSalary += "<thead class=\"thead1\">";
            strHtmlSalary += "<tr>";
            strHtmlSalary += "<th colspan=\"" + (dtDistdept.Rows.Count + 2) + "\">Salary</th>";
            strHtmlSalary += "</tr>";

            //0041

            if (ddlpaymentmode.SelectedItem.Value == "0")
            {
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<td colspan=18 class=td_bnk tr_l>Bank</td>";
                strHtmlSalary += "</tr>";
            }
            if (ddlpaymentmode.SelectedItem.Value == "1")
            {
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<td colspan=18 class=td_bnk tr_l>Cash</td>";
                strHtmlSalary += "</tr>";
            }



            strHtmlSalary += "<tr>";
            strHtmlSalary += "<th class=\"th_b4 tr_l\">Description</th>";
            strHtmlSalary += strHtmlDeptHead;
            strHtmlSalary += "<th class=\"th_b6 tr_r\">Net Total</th>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += "</thead>";
            strHtmlSalary += "<tbody>";


            strHtmlSalary += "<tr>";
            strHtmlSalary += "<td class=\"tr_l\">Total Amount (Basic Salary)</td>";
            strHtmlSalary += strNetdeptBasic;
            strHtmlSalary += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotBasic, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlSalary += "</tr>";
            if (objEntityIntervewProcess.StffWrkr == 1)
            {
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<td class=\"tr_l\">Total Amount (Normal OT)</td>";
                strHtmlSalary += strNetdeptNOT;
                strHtmlSalary += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPnOtAmt + decLSPnOtAmt + decESPnOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strHtmlSalary += "</tr>";
                strHtmlSalary += "<tr>";
                strHtmlSalary += "<td class=\"tr_l\">Total Amount (Holiday OT)</td>";
                strHtmlSalary += strNetdeptHOT;
                strHtmlSalary += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round((decMSPhOtAmt + decLSPhOtAmt + decESPhOtAmt), roundNum).ToString("0.00"), objEntityCommon) + "</td>";
                strHtmlSalary += "</tr>";
            }
            strHtmlSalary += "<tr>";
            strHtmlSalary += "<td colspan=\"" + (dtDistdept.Rows.Count + 2) + "\" class=\"td_fb tr_l\" style=\"background-color:#4a9dd6;color: #fff;\">Additions</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += strPriAdd;
            strHtmlSalary += "<tr>";
            strHtmlSalary += "<td class=\"tr_l\">Total Amount (Other Additions)</td>";
            strHtmlSalary += strdeptAdd;
            strHtmlSalary += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAdd, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += "<tr class=\"td_fb\">";
            strHtmlSalary += "<td class=\"tr_l\">Total Amount(All Additions)</td>";
            strHtmlSalary += strdeptAddNet;
            strHtmlSalary += "<td class=\" tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += "<tr>";
            strHtmlSalary += "<td colspan=\"" + (dtDistdept.Rows.Count + 2) + "\" class=\"td_fb tr_l\" style=\"background-color: #4a9dd6;color: #fff;\">Deductions</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += strPriDed;
            strHtmlSalary += "<tr>";
            strHtmlSalary += "<td class=\"tr_l\">Total Amount (Other Deductions)</td>";
            strHtmlSalary += strdeptDed;
            strHtmlSalary += "<td class=\"fotr_1 tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDed, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += "<tr class=\" td_fb\">";
            strHtmlSalary += "<td class=\"tr_l\">Total Amount(All Deductions)</td>";
            strHtmlSalary += strdeptDedNet;
            strHtmlSalary += "<td class=\"tr_r nt_tl\">" + objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedG, roundNum).ToString("0.00"), objEntityCommon) + "</td>";
            strHtmlSalary += "</tr>";
            strHtmlSalary += "</tbody>";
            strHtmlSalary += "</table>";
            divSalary.InnerHtml = strHtmlSalary;

            if (divMSP.InnerHtml.Length < 50)
            {
                linkMSP.Visible = false;
            }
            if (divLSP.InnerHtml.Length < 50)
            {
                linkLSP.Visible = false;
            }
            if (divESP.InnerHtml.Length < 50)
            {
                linkESP.Visible = false;
            }
        }
    }


    public void ConvertTopdf(DataTable dt, DataTable dtDept, clsEntityMonthlySalaryStatement objEntityIntervewProcess)
    {

        DataView dv = new DataView(dt);
        DataTable dtAll = new DataTable();
        DataTable dtbank = new DataTable();
        DataTable dtCash = new DataTable();



        dv.RowFilter = "PAYMENT_METHOD = 0";
        dtbank.Merge(dv.ToTable());

        dv.RowFilter = "PAYMENT_METHOD = 1";
        dtCash.Merge(dv.ToTable());


        DataView dvRes = new DataView(dtbank);
        dvRes.RowFilter = "PAGE = 1";
        DataView dvLs = new DataView(dtbank);
        dvLs.RowFilter = "PAGE = 2";
        DataView dvEnds = new DataView(dtbank);
        dvEnds.RowFilter = "PAGE = 3";
        DataView dvReslt = new DataView(dtCash);
        dvReslt.RowFilter = "PAGE = 1";
        DataView dvLsp = new DataView(dtCash);
        dvLsp.RowFilter = "PAGE = 2";
        DataView dvEsp = new DataView(dtCash);
        dvEsp.RowFilter = "PAGE = 3";

        DataTable dtorgDeptlistbank = new DataTable();
        dtorgDeptlistbank.Columns.Add("CPRDEPT_ID", typeof(string));
        dtorgDeptlistbank.Columns.Add("CPRDEPT_NAME", typeof(string));
        dtorgDeptlistbank.Columns.Add("PAGE", typeof(string));
        dtorgDeptlistbank.Columns.Add("SUM_BASIC", typeof(decimal));
        dtorgDeptlistbank.Columns.Add("TOTAL_ADD", typeof(decimal));
        dtorgDeptlistbank.Columns.Add("TOTAL_DED", typeof(decimal));
        dtorgDeptlistbank.Columns.Add("NET_AMNT", typeof(decimal));
        dtorgDeptlistbank.Columns.Add("CNT", typeof(string));
        decimal sum_basic = 0; decimal total_add = 0; decimal total_ded = 0; decimal net_amnt = 0;
        decimal Sum_basic = 0; decimal Total_add = 0; decimal Total_ded = 0; decimal Net_amnt = 0;
        decimal Sum_Basic = 0; decimal Total_Add = 0; decimal Total_Ded = 0; decimal Net_Amnt = 0;

        if (dvRes.Count > 0)
        {
            DataRow row = dtorgDeptlistbank.NewRow();
            for (int i = 0; i < dvRes.Count; i++)
            {

                sum_basic = sum_basic + Convert.ToDecimal(dvRes[i]["PRSD_BASICPAY"].ToString());
                total_add = total_add + Convert.ToDecimal(dvRes[i]["TOTAL_ADD"].ToString());
                total_ded = total_ded + Convert.ToDecimal(dvRes[i]["TOTAL_DED"].ToString());
                net_amnt = net_amnt + Convert.ToDecimal(dvRes[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "1";


            row["SUM_BASIC"] = sum_basic;
            row["TOTAL_ADD"] = total_add;
            row["TOTAL_DED"] = total_ded;
            row["NET_AMNT"] = net_amnt;

            row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

            dtorgDeptlistbank.Rows.Add(row);
        }

        if (dvLs.Count > 0)
        {

            DataRow row = dtorgDeptlistbank.NewRow();
            for (int i = 0; i < dvLs.Count; i++)
            {

                Sum_basic = Sum_basic + Convert.ToDecimal(dvLs[i]["PRSD_BASICPAY"].ToString());
                Total_add = Total_add + Convert.ToDecimal(dvLs[i]["TOTAL_ADD"].ToString());
                Total_ded = Total_ded + Convert.ToDecimal(dvLs[i]["TOTAL_DED"].ToString());
                Net_amnt = Net_amnt + Convert.ToDecimal(dvLs[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "2";


            row["SUM_BASIC"] = Sum_basic;
            row["TOTAL_ADD"] = Total_add;
            row["TOTAL_DED"] = Total_ded;
            row["NET_AMNT"] = Net_amnt;

            row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

            dtorgDeptlistbank.Rows.Add(row);

        }


        if (dvEnds.Count > 0)
        {


            DataRow row = dtorgDeptlistbank.NewRow();
            for (int i = 0; i < dvEnds.Count; i++)
            {

                Sum_Basic = Sum_Basic + Convert.ToDecimal(dvEnds[i]["PRSD_BASICPAY"].ToString());
                Total_Add = Total_Add + Convert.ToDecimal(dvEnds[i]["TOTAL_ADD"].ToString());
                Total_Ded = Total_Ded + Convert.ToDecimal(dvEnds[i]["TOTAL_DED"].ToString());
                Net_Amnt = Net_Amnt + Convert.ToDecimal(dvEnds[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtbank.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtbank.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "3";


            row["SUM_BASIC"] = Sum_Basic;
            row["TOTAL_ADD"] = Total_Add;
            row["TOTAL_DED"] = Total_Ded;
            row["NET_AMNT"] = Net_Amnt;

            row["CNT"] = dtbank.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

            dtorgDeptlistbank.Rows.Add(row);


        }
        DataTable dtorgDeptlistcash = new DataTable();
        dtorgDeptlistcash.Columns.Add("CPRDEPT_ID", typeof(string));
        dtorgDeptlistcash.Columns.Add("CPRDEPT_NAME", typeof(string));
        dtorgDeptlistcash.Columns.Add("PAGE", typeof(string));
        dtorgDeptlistcash.Columns.Add("SUM_BASIC", typeof(decimal));
        dtorgDeptlistcash.Columns.Add("TOTAL_ADD", typeof(decimal));
        dtorgDeptlistcash.Columns.Add("TOTAL_DED", typeof(decimal));
        dtorgDeptlistcash.Columns.Add("NET_AMNT", typeof(decimal));
        dtorgDeptlistcash.Columns.Add("CNT", typeof(string));

        decimal sumbasic = 0; decimal totaladd = 0; decimal totalded = 0; decimal netamnt = 0;
        decimal Sumbasic = 0; decimal Totaladd = 0; decimal Totalded = 0; decimal Netamnt = 0;
        decimal SumBasic = 0; decimal TotalAdd = 0; decimal TotalDed = 0; decimal NetAmnt = 0;

        int flagpdfmspbank = 0, flagpdfmspcash = 0, flagpdflspbank = 0, flagpdflspcash = 0, flagpdfespbank = 0, flagpdfespcash = 0;

        if (dvReslt.Count > 0)
        {
            DataRow row = dtorgDeptlistcash.NewRow();
            for (int i = 0; i < dvReslt.Count; i++)
            {

                sumbasic = sumbasic + Convert.ToDecimal(dvReslt[i]["PRSD_BASICPAY"].ToString());
                totaladd = totaladd + Convert.ToDecimal(dvReslt[i]["TOTAL_ADD"].ToString());
                totalded = totalded + Convert.ToDecimal(dvReslt[i]["TOTAL_DED"].ToString());
                netamnt = netamnt + Convert.ToDecimal(dvReslt[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "1";


            row["SUM_BASIC"] = sumbasic;
            row["TOTAL_ADD"] = totaladd;
            row["TOTAL_DED"] = totalded;
            row["NET_AMNT"] = netamnt;

            row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "1").ToList().Count.ToString();

            dtorgDeptlistcash.Rows.Add(row);
        }

        if (dvLsp.Count > 0)
        {

            DataRow row = dtorgDeptlistcash.NewRow();
            for (int i = 0; i < dvLsp.Count; i++)
            {

                Sumbasic = Sumbasic + Convert.ToDecimal(dvLsp[i]["PRSD_BASICPAY"].ToString());
                Totaladd = Totaladd + Convert.ToDecimal(dvLsp[i]["TOTAL_ADD"].ToString());
                Totalded = Totalded + Convert.ToDecimal(dvLsp[i]["TOTAL_DED"].ToString());
                Netamnt = Netamnt + Convert.ToDecimal(dvLsp[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "2";


            row["SUM_BASIC"] = Sumbasic;
            row["TOTAL_ADD"] = Totaladd;
            row["TOTAL_DED"] = Totalded;
            row["NET_AMNT"] = Netamnt;

            row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "2").ToList().Count.ToString();

            dtorgDeptlistcash.Rows.Add(row);

        }


        if (dvEsp.Count > 0)
        {


            DataRow row = dtorgDeptlistcash.NewRow();
            for (int i = 0; i < dvEsp.Count; i++)
            {

                SumBasic = SumBasic + Convert.ToDecimal(dvEsp[i]["PRSD_BASICPAY"].ToString());
                TotalAdd = TotalAdd + Convert.ToDecimal(dvEsp[i]["TOTAL_ADD"].ToString());
                TotalDed = TotalDed + Convert.ToDecimal(dvEsp[i]["TOTAL_DED"].ToString());
                NetAmnt = NetAmnt + Convert.ToDecimal(dvEsp[i]["NET_AMNT"].ToString());

            }
            row["CPRDEPT_ID"] = dtCash.Rows[0]["CPRDEPT_ID"].ToString();
            row["CPRDEPT_NAME"] = dtCash.Rows[0]["CPRDEPT_NAME"].ToString();
            row["PAGE"] = "3";


            row["SUM_BASIC"] = SumBasic;
            row["TOTAL_ADD"] = TotalAdd;
            row["TOTAL_DED"] = TotalDed;
            row["NET_AMNT"] = NetAmnt;

            row["CNT"] = dtCash.AsEnumerable().Where(x => x["PAGE"].ToString() == "3").ToList().Count.ToString();

            dtorgDeptlistcash.Rows.Add(row);


        }

        if (dtbank.Rows.Count > 0 || dtCash.Rows.Count > 0)

        {

            int cntMSPsavebank = 0, cntMSPconfbank = 0, cntMSPpaidbank = 0, cntMSPclosbank = 0;
            int cntMSPsaveCurrbank = 0, cntMSPconfCurrbank = 0, cntMSPpaidCurrbank = 0, cntMSPclosCurrbank = 0;

            int cntLSPsavebank = 0, cntLSPconfbank = 0, cntLSPpaidbank = 0, cntLSPclosbank = 0;
            int cntLSPsaveCurrbank = 0, cntLSPconfCurrbank = 0, cntLSPpaidCurrbank = 0, cntLSPclosCurrbank = 0;

            int cntESPsavebank = 0, cntESPconfbank = 0, cntESPpaidbank = 0, cntESPclosbank = 0;
            int cntESPsaveCurrbank = 0, cntESPconfCurrbank = 0, cntESPpaidCurrbank = 0, cntESPclosCurrbank = 0;

            int cntMSPsavecash = 0, cntMSPconfcash = 0, cntMSPpaidcash = 0, cntMSPcloscash = 0;
            int cntMSPsaveCurrcash = 0, cntMSPconfCurrcash = 0, cntMSPpaidCurrcash = 0, cntMSPclosCurrcash = 0;

            int cntLSPsavecash = 0, cntLSPconfcash = 0, cntLSPpaidcash = 0, cntLSPcloscash = 0;
            int cntLSPsaveCurrcash = 0, cntLSPconfCurrcash = 0, cntLSPpaidCurrcash = 0, cntLSPclosCurrcash = 0;

            int cntESPsavecash = 0, cntESPconfcash = 0, cntESPpaidcash = 0, cntESPcloscash = 0;
            int cntESPsaveCurrcash = 0, cntESPconfCurrcash = 0, cntESPpaidCurrcash = 0, cntESPclosCurrcash = 0;

            cntMSPsavebank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 1"));
            cntMSPconfbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 2"));
            cntMSPpaidbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 3"));
            cntMSPclosbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 4"));

            cntLSPsavebank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 1"));
            cntLSPconfbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 2"));
            cntLSPpaidbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 3"));
            cntLSPclosbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 4"));

            cntESPsavebank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 1"));
            cntESPconfbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 2"));
            cntESPpaidbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 3"));
            cntESPclosbank = Convert.ToInt32(dtbank.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 4"));

            cntMSPsavecash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 1"));
            cntMSPconfcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 2"));
            cntMSPpaidcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 3"));
            cntMSPcloscash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 1 AND STATUS = 4"));

            cntLSPsavecash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 1"));
            cntLSPconfcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 2"));
            cntLSPpaidcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 3"));
            cntLSPcloscash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 2 AND STATUS = 4"));

            cntESPsavecash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 1"));
            cntESPconfcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 2"));
            cntESPpaidcash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 3"));
            cntESPcloscash = Convert.ToInt32(dtCash.Compute("COUNT(PAGE)", "PAGE = 3 AND STATUS = 4"));

            TextInfo tInfo = new CultureInfo("en-US", false).TextInfo;
            string monthName = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
            monthName = monthName + " " + objEntityIntervewProcess.Year;
            clsBusinessMonthlySalaryStatement objBusinessIntervewProcess = new clsBusinessMonthlySalaryStatement();
            int intShowAdd = Convert.ToInt32(HiddenFieldShowAdd.Value);
            int intShowDed = Convert.ToInt32(HiddenFieldShowDed.Value);

            //19
            int daysInm = DateTime.DaysInMonth(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month);
            string strMSPsave = "", strMSPconf = "", strMSPpaid = "", strMSPclos = "";
            string strLSPsave = "", strLSPconf = "", strLSPpaid = "", strLSPclos = "";
            string strESPsave = "", strESPconf = "", strESPpaid = "", strESPclos = "";
            string strNormalOtRate = HiddenFieldNOTrate.Value, strHolidayOtRate = HiddenFieldHOTrate.Value, strCrnAbbr = "";
            decimal decMSPproBasic = 0, decMSPproBasicSave = 0, decMSPproBasicConf = 0, decMSPproBasicPaid = 0, decMSPproBasicClos = 0;
            decimal decMSPadd = 0, decMSPaddSave = 0, decMSPaddConf = 0, decMSPaddPaid = 0, decMSPaddClos = 0;
            decimal decMSPded = 0, decMSPdedSave = 0, decMSPdedConf = 0, decMSPdedPaid = 0, decMSPdedClos = 0;
            decimal decMSPnOtH = 0, decMSPnOtHSave = 0, decMSPnOtHConf = 0, decMSPnOtHPaid = 0, decMSPnOtHClos = 0, decMSPnOtHbank = 0, decMSPnOtHSavebank = 0, decMSPnOtHConfbank = 0, decMSPnOtHPaidbank = 0, decMSPnOtHClosbank = 0;
            decimal decMSPnOtAmt = 0, decMSPnOtAmtSave = 0, decMSPnOtAmtConf = 0, decMSPnOtAmtPaid = 0, decMSPnOtAmtClos = 0, decMSPnOtAmtbank = 0, decMSPnOtAmtSavebank = 0, decMSPnOtAmtConfbank = 0, decMSPnOtAmtPaidbank = 0, decMSPnOtAmtClosbank = 0;
            decimal decMSPhOtH = 0, decMSPhOtHSave = 0, decMSPhOtHConf = 0, decMSPhOtHPaid = 0, decMSPhOtHClos = 0, decMSPhOtHbank = 0, decMSPhOtHSavebank = 0, decMSPhOtHConfbank = 0, decMSPhOtHPaidbank = 0, decMSPhOtHClosbank = 0;
            decimal decMSPhOtAmt = 0, decMSPhOtAmtSave = 0, decMSPhOtAmtConf = 0, decMSPhOtAmtPaid = 0, decMSPhOtAmtClos = 0, decMSPhOtAmtbank = 0, decMSPhOtAmtSavebank = 0, decMSPhOtAmtConfbank = 0, decMSPhOtAmtPaidbank = 0, decMSPhOtAmtClosbank = 0;
            decimal decMSPnetOT = 0, decMSPnetOTSave = 0, decMSPnetOTConf = 0, decMSPnetOTPaid = 0, decMSPnetOTClos = 0, decMSPnetOTbank = 0, decMSPnetOTSavebank = 0, decMSPnetOTConfbank = 0, decMSPnetOTPaidbank = 0, decMSPnetOTClosbank = 0;
            decimal decMSPnetAmnt = 0, decMSPnetAmntSave = 0, decMSPnetAmntConf = 0, decMSPnetAmntPaid = 0, decMSPnetAmntClos = 0, decMSPnetAmntbank = 0, decMSPnetAmntSavebank = 0, decMSPnetAmntConfbank = 0, decMSPnetAmntPaidbank = 0, decMSPnetAmntClosbank = 0;
            decimal decMSPproBasicSavebank = 0;decimal decMSPaddSavebank = 0;decimal decMSPdedSavebank = 0; decimal decMSPproBasicConfbank = 0;
            decimal decMSPaddConfbank = 0; decimal decMSPdedConfbank = 0;decimal decMSPproBasicPaidbank = 0;
            decimal decMSPaddPaidbank = 0; decimal decMSPdedPaidbank = 0; 
            decimal decMSPproBasicClosbank = 0;   decimal decMSPaddClosbank = 0;  decimal decMSPdedClosbank = 0;

            decimal decLSPproBasic = 0, decLSPproBasicSave = 0, decLSPproBasicConf = 0, decLSPproBasicPaid = 0, decLSPproBasicClos = 0, decLSPproBasicbank = 0, decLSPproBasicSavebank = 0, decLSPproBasicConfbank = 0, decLSPproBasicPaidbank = 0, decLSPproBasicClosbank = 0;
            decimal decLSPtcktAmnt = 0, decLSPtcktAmntSave = 0, decLSPtcktAmntConf = 0, decLSPtcktAmntPaid = 0, decLSPtcktAmntClos = 0, decLSPtcktAmntbank = 0, decLSPtcktAmntSavebank = 0, decLSPtcktAmntConfbank = 0, decLSPtcktAmntPaidbank = 0, decLSPtcktAmntClosbank = 0;
            decimal decLSPadd = 0, decLSPaddSave = 0, decLSPaddConf = 0, decLSPaddPaid = 0, decLSPaddClos = 0, decLSPaddbank = 0, decLSPaddSavebank = 0, decLSPaddConfbank = 0, decLSPaddPaidbank = 0, decLSPaddClosbank = 0;
            decimal decLSPded = 0, decLSPdedSave = 0, decLSPdedConf = 0, decLSPdedPaid = 0, decLSPdedClos = 0, decLSPdedbank = 0, decLSPdedSavebank = 0, decLSPdedConfbank = 0, decLSPdedPaidbank = 0, decLSPdedClosbank = 0;
            decimal decLSPleavDays = 0, decLSPleavDaysSave = 0, decLSPleavDaysConf = 0, decLSPleavDaysPaid = 0, decLSPleavDaysClos = 0, decLSPleavDaysbank = 0, decLSPleavDaysSavebank = 0, decLSPleavDaysConfbank = 0, decLSPleavDaysPaidbank = 0, decLSPleavDaysClosbank = 0;
            decimal decLSPleavSal = 0, decLSPleavSalSave = 0, decLSPleavSalConf = 0, decLSPleavSalPaid = 0, decLSPleavSalClos = 0, decLSPleavSalbank = 0, decLSPleavSalSavebank = 0, decLSPleavSalConfbank = 0, decLSPleavSalPaidbank = 0, decLSPleavSalClosbank = 0;
            decimal decLSPprevSal = 0, decLSPprevSalSave = 0, decLSPprevSalConf = 0, decLSPprevSalPaid = 0, decLSPprevSalClos = 0, decLSPprevSalbank = 0, decLSPprevSalSavebank = 0, decLSPprevSalConfbank = 0, decLSPprevSalPaidbank = 0, decLSPprevSalClosbank = 0;
            decimal decLSPnetAmnt = 0, decLSPnetAmntSave = 0, decLSPnetAmntConf = 0, decLSPnetAmntPaid = 0, decLSPnetAmntClos = 0, decLSPnetAmntbank = 0, decLSPnetAmntSavebank = 0, decLSPnetAmntConfbank = 0, decLSPnetAmntPaidbank = 0, decLSPnetAmntClosbank = 0;
            decimal decLSPnOtH = 0, decLSPnOtHSave = 0, decLSPnOtHConf = 0, decLSPnOtHPaid = 0, decLSPnOtHClos = 0, decLSPnOtHbank = 0, decLSPnOtHSavebank = 0, decLSPnOtHConfbank = 0, decLSPnOtHPaidbank = 0, decLSPnOtHClosbank = 0;
            decimal decLSPnOtAmt = 0, decLSPnOtAmtSave = 0, decLSPnOtAmtConf = 0, decLSPnOtAmtPaid = 0, decLSPnOtAmtClos = 0, decLSPnOtAmtbank = 0, decLSPnOtAmtSavebank = 0, decLSPnOtAmtConfbank = 0, decLSPnOtAmtPaidbank = 0, decLSPnOtAmtClosbank = 0;
            decimal decLSPhOtH = 0, decLSPhOtHSave = 0, decLSPhOtHConf = 0, decLSPhOtHPaid = 0, decLSPhOtHClos = 0, decLSPhOtHbank = 0, decLSPhOtHSavebank = 0, decLSPhOtHConfbank = 0, decLSPhOtHPaidbank = 0, decLSPhOtHClosbank = 0;
            decimal decLSPhOtAmt = 0, decLSPhOtAmtSave = 0, decLSPhOtAmtConf = 0, decLSPhOtAmtPaid = 0, decLSPhOtAmtClos = 0, decLSPhOtAmtbank = 0, decLSPhOtAmtSavebank = 0, decLSPhOtAmtConfbank = 0, decLSPhOtAmtPaidbank = 0, decLSPhOtAmtClosbank = 0;
            decimal decLSPnetOT = 0, decLSPnetOTSave = 0, decLSPnetOTConf = 0, decLSPnetOTPaid = 0, decLSPnetOTClos = 0, decLSPnetOTbank = 0, decLSPnetOTSavebank = 0, decLSPnetOTConfbank = 0, decLSPnetOTPaidbank = 0, decLSPnetOTClosbank = 0;

            decimal decESPproBasic = 0, decESPproBasicSave = 0, decESPproBasicConf = 0, decESPproBasicPaid = 0, decESPproBasicClos = 0, decESPproBasicbank = 0, decESPproBasicSavebank = 0, decESPproBasicConfbank = 0, decESPproBasicPaidbank = 0, decESPproBasicClosbank = 0;
            decimal decESPtcktAmnt = 0, decESPtcktAmntSave = 0, decESPtcktAmntConf = 0, decESPtcktAmntPaid = 0, decESPtcktAmntClos = 0, decESPtcktAmntbank = 0, decESPtcktAmntSavebank = 0, decESPtcktAmntConfbank = 0, decESPtcktAmntPaidbank = 0, decESPtcktAmntClosbank = 0;
            decimal decESPadd = 0, decESPaddSave = 0, decESPaddConf = 0, decESPaddPaid = 0, decESPaddClos = 0, decESPaddbank = 0, decESPaddSavebank = 0, decESPaddConfbank = 0, decESPaddPaidbank = 0, decESPaddClosbank = 0;
            decimal decESPded = 0, decESPdedSave = 0, decESPdedConf = 0, decESPdedPaid = 0, decESPdedClos = 0, decESPdedbank = 0, decESPdedSavebank = 0, decESPdedConfbank = 0, decESPdedPaidbank = 0, decESPdedClosbank = 0;
            decimal decESPleavDays = 0, decESPleavDaysSave = 0, decESPleavDaysConf = 0, decESPleavDaysPaid = 0, decESPleavDaysClos = 0, decESPleavDaysbank = 0, decESPleavDaysSavebank = 0, decESPleavDaysConfbank = 0, decESPleavDaysPaidbank = 0, decESPleavDaysClosbank = 0;
            decimal decESPleavSal = 0, decESPleavSalSave = 0, decESPleavSalConf = 0, decESPleavSalPaid = 0, decESPleavSalClos = 0, decESPleavSalbank = 0, decESPleavSalSavebank = 0, decESPleavSalConfbank = 0, decESPleavSalPaidbank = 0, decESPleavSalClosbank = 0;
            decimal decESPgratDays = 0, decESPgratDaysSave = 0, decESPgratDaysConf = 0, decESPgratDaysPaid = 0, decESPgratDaysClos = 0, decESPgratDaysbank = 0, decESPgratDaysSavebank = 0, decESPgratDaysConfbank = 0, decESPgratDaysPaidbank = 0, decESPgratDaysClosbank = 0;
            decimal decESPgratSal = 0, decESPgratSalSave = 0, decESPgratSalConf = 0, decESPgratSalPaid = 0, decESPgratSalClos = 0, decESPgratSalbank = 0, decESPgratSalSavebank = 0, decESPgratSalConfbank = 0, decESPgratSalPaidbank = 0, decESPgratSalClosbank = 0;
            decimal decESPprevSal = 0, decESPprevSalSave = 0, decESPprevSalConf = 0, decESPprevSalPaid = 0, decESPprevSalClos = 0, decESPprevSalbank = 0, decESPprevSalSavebank = 0, decESPprevSalConfbank = 0, decESPprevSalPaidbank = 0, decESPprevSalClosbank = 0;
            decimal decESPnetAmnt = 0, decESPnetAmntSave = 0, decESPnetAmntConf = 0, decESPnetAmntPaid = 0, decESPnetAmntClos = 0, decESPnetAmntbank = 0, decESPnetAmntSavebank = 0, decESPnetAmntConfbank = 0, decESPnetAmntPaidbank = 0, decESPnetAmntClosbank = 0;
            decimal decESPnOtH = 0, decESPnOtHSave = 0, decESPnOtHConf = 0, decESPnOtHPaid = 0, decESPnOtHClos = 0, decESPnOtHbank = 0, decESPnOtHSavebank = 0, decESPnOtHConfbank = 0, decESPnOtHPaidbank = 0, decESPnOtHClosbank = 0;
            decimal decESPnOtAmt = 0, decESPnOtAmtSave = 0, decESPnOtAmtConf = 0, decESPnOtAmtPaid = 0, decESPnOtAmtClos = 0, decESPnOtAmtbank = 0, decESPnOtAmtSavebank = 0, decESPnOtAmtConfbank = 0, decESPnOtAmtPaidbank = 0, decESPnOtAmtClosbank = 0;
            decimal decESPhOtH = 0, decESPhOtHSave = 0, decESPhOtHConf = 0, decESPhOtHPaid = 0, decESPhOtHClos = 0, decESPhOtHbank = 0, decESPhOtHSavebank = 0, decESPhOtHConfbank = 0, decESPhOtHPaidbank = 0, decESPhOtHClosbank = 0;
            decimal decESPhOtAmt = 0, decESPhOtAmtSave = 0, decESPhOtAmtConf = 0, decESPhOtAmtPaid = 0, decESPhOtAmtClos = 0, decESPhOtAmtbank = 0, decESPhOtAmtSavebank = 0, decESPhOtAmtConfbank = 0, decESPhOtAmtPaidbank = 0, decESPhOtAmtClosbank = 0;
            decimal decESPnetOT = 0, decESPnetOTSave = 0, decESPnetOTConf = 0, decESPnetOTPaid = 0, decESPnetOTClos = 0, decESPnetOTbank = 0, decESPnetOTSavebank = 0, decESPnetOTConfbank = 0, decESPnetOTPaidbank = 0, decESPnetOTClosbank = 0;
            decimal basicbank = 0;
            decimal addbank = 0;
            decimal mspnetbank = 0, lspnetbank = 0, espnetbank = 0, mspnetcash = 0, lspnetcash = 0, espnetcash = 0;
            decimal desbank = 0;
            DataTable dtadd = new DataTable();
            DataTable dtDed = new DataTable();
            if (intShowAdd == 1)
                dtadd = objBusinessIntervewProcess.ReadAllwnc(objEntityIntervewProcess);
            if (intShowDed == 1)
                dtDed = objBusinessIntervewProcess.ReadDedctn(objEntityIntervewProcess);
            DataTable dtOTctgry = new DataTable();
            if (objEntityIntervewProcess.StffWrkr == 1)
            {
                dtOTctgry = objBusinessIntervewProcess.ReadOTctgries(objEntityIntervewProcess);
                if (dtOTctgry.Rows.Count > 0)
                    strCrnAbbr = dtOTctgry.Rows[0]["CRNCMST_ABBRV"].ToString();
            }
            DataTable dtOTDetail = new DataTable();
            dtOTDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtOTDetail.Columns.Add("NORMAL", typeof(decimal));
            dtOTDetail.Columns.Add("HOLIDAY", typeof(decimal));

            DataTable dtDetail = new DataTable();
            dtDetail.Columns.Add("CPRDEPT_ID", typeof(string));
            dtDetail.Columns.Add("PAGE", typeof(string));
            dtDetail.Columns.Add("STATUS", typeof(string));
            for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtadd.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
            }
            for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
            {
                dtDetail.Columns.Add("" + dtDed.Rows[intRowCount]["PAYRL_ID"], typeof(decimal));
            }

            int roundNum = 2;
            if (HiddenFieldIndividualRound.Value == "1")
            {
                roundNum = 0;
            }
            clsBusinessLayer objBusiness = new clsBusinessLayer();
            clsEntityCommon objEntityCommon = new clsEntityCommon();
            objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
            clsCommonLibrary objCommon = new clsCommonLibrary();
            clsEntityLayerLeaveSettlmt objEntityLeavSettlmt = new clsEntityLayerLeaveSettlmt();
            clsBusinessLayerLeaveSettlmt objBusinessLeavSettlmt = new clsBusinessLayerLeaveSettlmt();
            if (Session["CORPOFFICEID"] != null)
            {
                objEntityLeavSettlmt.CorpId = Convert.ToInt32(Session["CORPOFFICEID"].ToString());
                objEntityCommon.CorporateID = objEntityLeavSettlmt.CorpId;
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }

            if (Session["ORGID"] != null)
            {
                objEntityLeavSettlmt.OrgId = Convert.ToInt32(Session["ORGID"].ToString());
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }
            DataTable dtCorp = objBusinessLeavSettlmt.ReadCorporateAddress(objEntityLeavSettlmt);
            string strCompanyName = "", strCompanyAddr1 = "", strCompanyAddr2 = "", strCompanyAddr3 = "", strCompanyAddrCntry = "", strCompanyLogo = "";
            string strTitle = "";
            strTitle = "MONTHLY SALARY STATEMENT";
            DateTime datetm = DateTime.Now;
            string dat = "<B>Report Date: </B>" + datetm.ToString("R");
            if (dtCorp.Rows.Count > 0)
            {
                strCompanyName = dtCorp.Rows[0]["CORPRT_NAME"].ToString();
                strCompanyAddr1 = dtCorp.Rows[0]["CORPRT_ADDR1"].ToString();
                strCompanyAddr2 = dtCorp.Rows[0]["CORPRT_ADDR2"].ToString();
                strCompanyAddr3 = dtCorp.Rows[0]["CORPRT_ADDR3"].ToString();
                strCompanyAddrCntry = dtCorp.Rows[0]["CNTRY_NAME"].ToString();
                strCompanyLogo = dtCorp.Rows[0]["CORPRT_ICON"].ToString();
            }
            if (strCompanyLogo != "")
            {
                strCompanyLogo = objCommon.GetImagePath(clsCommonLibrary.IMAGE_SECTION.Bussiness_Unit) + strCompanyLogo;
            }
            string strAddress = "";
            strAddress = strCompanyAddr1;
            if (strCompanyAddr2 != "")
            {
                strAddress += ", " + strCompanyAddr2;
            }
            if (strCompanyAddr3 != "")
            {
                strAddress += ", " + strCompanyAddr3;
            }
            objEntityCommon.SectionId = Convert.ToInt32(clsCommonLibrary.Section.MONTHLY_SALARY_STATEMENT);
            Document document = new Document(PageSize.LETTER.Rotate(), 30f, 30f, 19f, 50f);
            using (System.IO.MemoryStream memoryStream = new System.IO.MemoryStream())
            {
                string strNextNumber = objBusiness.ReadNextNumberSequanceForUI(objEntityCommon);
                PdfWriter writer = PdfWriter.GetInstance(document, memoryStream);
                string strImageName = "MSS_" + objEntityIntervewProcess.Month + "_" + objEntityIntervewProcess.Year + "_" + strNextNumber + ".pdf";
                string strImagePath = objCommon.GetImagePath(CL_Compzit.clsCommonLibrary.IMAGE_SECTION.MONTHLY_SALARY_STATEMENT);
                string fullPath = System.Web.HttpContext.Current.Server.MapPath(strImagePath) + strImageName;
                if ((System.IO.File.Exists(fullPath)))
                {
                    System.IO.File.Delete(fullPath);
                }
                FileStream file = new FileStream(System.Web.HttpContext.Current.Server.MapPath(strImagePath) + strImageName, FileMode.Create);
                PdfWriter.GetInstance(document, file);
                writer.PageEvent = new PDFHeader();
                document.Open();
                int cursts = 0;
                if (cursts == 0)
                {
                    PdfPTable headtable = new PdfPTable(2);
                    //lbr -1
                    headtable.AddCell(new PdfPCell(new Phrase("MONTHLY SALARY STATEMENT - " + monthName.ToUpper(), new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.BOLD, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    if (strCompanyLogo != "")
                    {
                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(strCompanyLogo));
                        image.ScalePercent(PdfPCell.ALIGN_CENTER);
                        image.ScaleToFit(60f, 40f);
                        headtable.AddCell(new PdfPCell(image) { Rowspan = 4, Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    }
                    else
                    {
                        headtable.AddCell(new PdfPCell(new Phrase(" ", new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.NORMAL, BaseColor.BLACK)))) { Rowspan = 4, Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    }
                    headtable.AddCell(new PdfPCell(new Phrase(strCompanyName, new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.BOLD, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    headtable.AddCell(new PdfPCell(new Phrase(strAddress, new Font(FontFactory.GetFont("Tahoma,Arial", 9, Font.NORMAL, BaseColor.BLACK)))) { Border = 0, HorizontalAlignment = Element.ALIGN_LEFT });
                    float[] headersHeading = { 92, 8 };
                    headtable.SetWidths(headersHeading);
                    headtable.WidthPercentage = 100;
                    document.Add(headtable);

                    PdfPTable tableLine = new PdfPTable(1);
                    float[] tableLineBody = { 100 };
                    tableLine.SetWidths(tableLineBody);
                    tableLine.WidthPercentage = 100;
                    tableLine.TotalWidth = 950F;

                    PdfPCell cell_headLine = (new PdfPCell(new Phrase("__________________________________________________________________________________________________________________________________________________________________", FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 0, BackgroundColor = iTextSharp.text.BaseColor.WHITE, Border = 0, });
                    cell_headLine.Padding = -5;
                    tableLine.AddCell(cell_headLine);

                    //tableLine.AddCell(new PdfPCell(new Phrase("______________________________________________________________________________________________________________________________", FontFactory.GetFont("Arial", 9, Font.NORMAL, BaseColor.GRAY))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 0, BackgroundColor = iTextSharp.text.BaseColor.WHITE, Border = 0, });
                    tableLine.WriteSelectedRows(0, -1, 0, document.PageSize.GetTop(58), writer.DirectContent);

                    document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));

                    int MSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 8;
                    int LSPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 12;
                    int ESPcolSpan = dtadd.Rows.Count + dtDed.Rows.Count + 14;
                    int MSProwSpan = 1;
                    string strStafWork = "STAFF";
                    int HeadRowCnt = 2;
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        MSPcolSpan += 5;
                        LSPcolSpan += 5;
                        ESPcolSpan += 5;
                        MSProwSpan = 2;
                        strStafWork = "WORKER";
                        HeadRowCnt = 3;
                    }
                    PdfPTable tabHeadMSP = new PdfPTable(MSPcolSpan);
                    tabHeadMSP.WidthPercentage = 100;
                    tabHeadMSP.HeaderRows = HeadRowCnt;
                    PdfPTable tabHeadLSP = new PdfPTable(LSPcolSpan);
                    tabHeadLSP.WidthPercentage = 100;
                    tabHeadLSP.HeaderRows = HeadRowCnt;
                    PdfPTable tabHeadESP = new PdfPTable(ESPcolSpan);
                    tabHeadESP.WidthPercentage = 100;
                    tabHeadESP.HeaderRows = HeadRowCnt;
                    //Header_MSP
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("MONTHLY SALARY STATEMENT  - " + strStafWork, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });


                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    ////0041
                    //if (ddlpaymentmode.SelectedItem.Value == "0")
                    //{
                    //    tabHeadMSP.AddCell(new PdfPCell(new Phrase("BANK", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    //}
                    //if (ddlpaymentmode.SelectedItem.Value == "1")
                    //{

                    //    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    //}
                    //Header_LSP
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("LEAVE SETTLEMENT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Air Ticket Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Eligible Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Previous Month Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    //0041

                    //if (ddlpaymentmode.SelectedItem.Value == "0")
                    //{
                    //    tabHeadLSP.AddCell(new PdfPCell(new Phrase("BANK", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });

                    //}
                    //if (ddlpaymentmode.SelectedItem.Value == "1")
                    //{

                    //    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                    //}
                    //Header_ESP
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("END OF SERVICE SETTLEMENT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Employee ID", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Employee Name", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Days", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Earned Basic", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Normal OT @ " + strCrnAbbr + " " + strNormalOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Holiday OT @ " + strCrnAbbr + " " + strHolidayOtRate, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Total OT Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Air Ticket Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Other Addition", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Other Deduction", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Eligible Days for Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Leave Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Eligible Days for Gratuity", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Gratuity Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Previous Month Salary", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Rowspan = MSProwSpan, HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    if (objEntityIntervewProcess.StffWrkr == 1)
                    {
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Hours", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    //0041
                    //if (ddlpaymentmode.SelectedItem.Value == "0")
                    //{
                    //    tabHeadESP.AddCell(new PdfPCell(new Phrase("BANK", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });

                    //}
                    //if (ddlpaymentmode.SelectedItem.Value == "1")
                    //{

                    //    tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                    //}
                    //009
                    //bank
                    for (int i = 0; i < dtbank.Rows.Count; i++)
                    {
                        //12-2020

                        DataRow drDtl = dtDetail.NewRow();
                        drDtl["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtl["PAGE"] = dtbank.Rows[i]["PAGE"].ToString();
                        drDtl["STATUS"] = dtbank.Rows[i]["STATUS"].ToString();
                        string Mode = dtbank.Rows[i]["PAGE"].ToString();
                        string Status = dtbank.Rows[i]["STATUS"].ToString();
                        DataTable dtOTctgryShow = new DataTable();
                        objEntityIntervewProcess.Employee = Convert.ToInt32(dtbank.Rows[i]["USR_ID"].ToString());
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (Mode != "1")
                            {
                                if (dtbank.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != "" && dtbank.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != null && dtbank.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != "" && dtbank.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != null)
                                {
                                    objEntityIntervewProcess.CurrentDate = objCommon.textToDateTime(dtbank.Rows[i]["LEVSETLMT_TO_DATE"].ToString());
                                    objEntityIntervewProcess.date = objCommon.textToDateTime(dtbank.Rows[i]["LEVSETLMT_FROM_DATE"].ToString());
                                    if (objEntityIntervewProcess.CurrentDate.Month != objEntityIntervewProcess.date.Month)
                                    {
                                        objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.CurrentDate.Year, objEntityIntervewProcess.CurrentDate.Month, 1);
                                    }
                                }
                            }
                            else
                            {
                                objEntityIntervewProcess.CurrentDate = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, daysInm);
                                objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1);
                            }
                            dtOTctgryShow = objBusinessIntervewProcess.ReadOTdtls(objEntityIntervewProcess);
                        }
                        DataTable dtAddShow = new DataTable();
                        DataTable dtDedShow = new DataTable();
                        objEntityIntervewProcess.SalaryPrssId = Convert.ToInt32(dtbank.Rows[i]["MASTER_ID"].ToString());
                        objEntityIntervewProcess.SavConf = Convert.ToInt32(Mode);
                        if (intShowAdd == 1)
                        {
                            dtAddShow = objBusinessIntervewProcess.ReadAllowanceDetails(objEntityIntervewProcess);
                        }
                        if (intShowDed == 1)
                        {
                            dtDedShow = objBusinessIntervewProcess.ReadDeductionDetails(objEntityIntervewProcess);
                        }
                        decimal decPerDaySal = Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()) / daysInm;
                        decimal workdays = Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()) / decPerDaySal;
                        workdays = Math.Round(workdays, 1);
                        if (workdays % 1 == 0)
                        {
                            workdays = Convert.ToInt32(workdays);
                        }
                        decimal decTotAdd = 0, decTotDed = 0;
                        decimal decTotOTcurr = 0;
                        if (Mode == "1" && Status == "1")
                        {
                            if (strMSPsave == "")
                            {
                                strMSPsave = "1";
                                // evm0041
                                if (flagpdfmspbank == 0)
                                {
                                    flagpdfmspbank = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                                }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHSave += OtHrs;
                                            decMSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHSave += OtHrs;
                                            decMSPhOtAmtSave += currOtAmnt;

                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTSave += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicSave += Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString());
                            decMSPaddSave += decTotAdd;
                            decMSPdedSave += decTotDed;
                            decMSPnetAmntSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPsaveCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPsaveCurrbank == cntMSPsavebank)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "1" && Status == "2")
                        {

                            if (strMSPconf == "")
                            {
                                strMSPconf = "1";
                                if (flagpdfmspbank == 0)
                                {
                                    flagpdfmspbank = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                                } tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHConf += OtHrs;
                                            decMSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHConf += OtHrs;
                                            decMSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTConf += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddConf += decTotAdd;
                            decMSPdedConf += decTotDed;
                            decMSPnetAmntConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPconfCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPconfCurrbank == cntMSPconfbank)
                            {

                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "3")
                        {
                            if (strMSPpaid == "")
                            {
                                strMSPpaid = "1";
                                if (flagpdfmspbank == 0)
                                {
                                    flagpdfmspbank = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            //1010
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHPaid += OtHrs;
                                            decMSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHPaid += OtHrs;
                                            decMSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTPaid += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decMSPproBasicPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddPaid += decTotAdd;
                            decMSPdedPaid += decTotDed;
                            decMSPnetAmntPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPpaidCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPpaidCurrbank == cntMSPpaidbank)
                            {


                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "4")
                        {
                            if (strMSPclos == "")
                            {
                                strMSPclos = "1";
                                if (flagpdfmspbank == 0)
                                {
                                    flagpdfmspbank = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHClos += OtHrs;
                                            decMSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHClos += OtHrs;
                                            decMSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTClos += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decMSPproBasicClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddClos += decTotAdd;
                            decMSPdedClos += decTotDed;
                            decMSPnetAmntClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntMSPclosCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPclosCurrbank == cntMSPclosbank)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "1")
                        {

                            if (strLSPsave == "")
                            {
                                strLSPsave = "1";
                                if (flagpdflspbank == 0)
                                {
                                    flagpdflspbank = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });

                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHSave += OtHrs;
                                            decLSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHSave += OtHrs;
                                            decLSPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTSave += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddSave += decTotAdd;
                            decLSPdedSave += decTotDed;
                            decLSPleavDaysSave += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPsaveCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPsaveCurrbank == cntLSPsavebank)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "2")
                        {
                            if (strLSPconf == "")
                            {
                                strLSPconf = "1";
                                if (flagpdflspbank == 0)
                                {
                                    flagpdflspbank = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHConf += OtHrs;
                                            decLSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHConf += OtHrs;
                                            decLSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTConf += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddConf += decTotAdd;
                            decLSPdedConf += decTotDed;
                            decLSPleavDaysConf += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPconfCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPconfCurrbank == cntLSPconfbank)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "3")
                        {
                            if (strLSPpaid == "")
                            {
                                strLSPpaid = "1";
                                if (flagpdflspbank == 0)
                                {
                                    flagpdflspbank = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });

                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHPaid += OtHrs;
                                            decLSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHPaid += OtHrs;
                                            decLSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTPaid += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddPaid += decTotAdd;
                            decLSPdedPaid += decTotDed;
                            decLSPleavDaysPaid += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPpaidCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPpaidCurrbank == cntLSPpaidbank)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "4")
                        {
                            if (strLSPclos == "")
                            {
                                strLSPclos = "1";
                                if (flagpdflspbank == 0)
                                {
                                    flagpdflspbank = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHClos += OtHrs;
                                            decLSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHClos += OtHrs;
                                            decLSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTClos += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY }); ;
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddClos += decTotAdd;
                            decLSPdedClos += decTotDed;
                            decLSPleavDaysClos += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPclosCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPclosCurrbank == cntLSPclosbank)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }



                        else if (Mode == "3" && Status == "1")
                        {
                            if (strESPsave == "")
                            {
                                strESPsave = "1";
                                if (flagpdfespbank == 0)
                                {
                                    flagpdfespbank = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHSave += OtHrs;
                                            decESPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHSave += OtHrs;
                                            decESPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTSave += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddSave += decTotAdd;
                            decESPdedSave += decTotDed;
                            decESPleavDaysSave += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysSave += Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntSave += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPsaveCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPsaveCurrbank == cntESPsavebank)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "2")
                        {

                            if (strESPconf == "")
                            {
                                strESPconf = "1";

                                if (flagpdfespbank == 0)
                                {
                                    flagpdfespbank = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHConf += OtHrs;
                                            decESPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHConf += OtHrs;
                                            decESPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTConf += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddConf += decTotAdd;
                            decESPdedConf += decTotDed;
                            decESPleavDaysConf += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysConf += Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntConf += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);


                            cntESPconfCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPconfCurrbank == cntESPconfbank)
                            {

                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "3" && Status == "3")
                        {
                            if (strESPpaid == "")
                            {
                                strESPpaid = "1";
                                if (flagpdfespbank == 0)
                                {
                                    flagpdfespbank = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                      tabHeadESP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHPaid += OtHrs;
                                            decESPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHPaid += OtHrs;
                                            decESPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTPaid += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddPaid += decTotAdd;
                            decESPdedPaid += decTotDed;
                            decESPleavDaysPaid += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysPaid += Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntPaid += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPpaidCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPpaidCurrbank == cntESPpaidbank)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "4")
                        {
                            if (strESPclos == "")
                            {
                                strESPclos = "1";
                                if (flagpdfespbank == 0)
                                {
                                    flagpdfespbank = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                      tabHeadESP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtbank.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHClos += OtHrs;
                                            decESPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHClos += OtHrs;
                                            decESPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTClos += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddClos += decTotAdd;
                            decESPdedClos += decTotDed;
                            decESPleavDaysClos += Convert.ToDecimal(dtbank.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysClos += Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntClos += Math.Round(Convert.ToDecimal(dtbank.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntESPclosCurrbank++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPclosCurrbank == cntESPclosbank)
                            {


                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }

                    }



                    decMSPproBasicSavebank = decMSPproBasicSave;
                    decMSPaddSavebank = decMSPaddSave;
                    decMSPdedSavebank = decMSPdedSave;
                    decMSPnetAmntSavebank = decMSPnetAmntSave;
                    decMSPproBasicConfbank = decMSPproBasicConf;
                    decMSPaddConfbank = decMSPaddConf;
                    decMSPdedConfbank = decMSPdedConf;
                    decMSPnetAmntConfbank = decMSPnetAmntConf;
                    decMSPproBasicPaidbank = decMSPproBasicPaid;
                    decMSPaddPaidbank = decMSPaddPaid;
                    decMSPdedPaidbank = decMSPdedPaid;
                    decMSPnetAmntPaidbank = decMSPnetAmntPaid;
                    decMSPproBasicClosbank = decMSPproBasicClos;
                    decMSPaddClosbank = decMSPaddClos;
                    decMSPdedClosbank = decMSPdedClos;
                    decMSPnetAmntClosbank = decMSPnetAmntClos;
                    decMSPnOtHSavebank = decMSPnOtHSave; decMSPnOtHConfbank = decMSPnOtHConf; decMSPnOtHPaidbank = decMSPnOtHPaid; decMSPnOtHClosbank = decMSPnOtHClos; decMSPnOtAmtSavebank = decMSPnOtAmtSave; decMSPnOtAmtConfbank = decMSPnOtAmtConf; decMSPnOtAmtPaidbank = decMSPnOtAmtPaid; decMSPnOtAmtClosbank = decMSPnOtAmtClos;
                    decMSPhOtHSavebank = decMSPhOtHSave; decMSPhOtHConfbank = decMSPhOtHConf; decMSPhOtHPaidbank = decMSPhOtHPaid; decMSPhOtHClosbank = decMSPhOtHClos; decMSPhOtAmtSavebank = decMSPhOtAmtSave; decMSPhOtAmtConfbank = decMSPhOtAmtConf; decMSPhOtAmtPaidbank = decMSPhOtAmtPaid; decMSPhOtAmtClosbank = decMSPhOtAmtClos; decMSPnetOTSavebank = decMSPnetOTSave; decMSPnetOTConfbank = decMSPnetOTConf; decMSPnetOTPaidbank = decMSPnetOTPaid; decMSPnetOTClosbank = decMSPnetOTClos;
                    //12-02 end   

                    decLSPproBasicSavebank = decLSPproBasicSave; decLSPproBasicConfbank = decLSPproBasicConf; decLSPproBasicPaidbank = decLSPproBasicPaid; decLSPproBasicClosbank = decLSPproBasicClos;

                    decLSPtcktAmntSavebank = decLSPtcktAmntSave; decLSPtcktAmntConfbank = decLSPtcktAmntConf; decLSPtcktAmntPaidbank = decLSPtcktAmntPaid; decLSPtcktAmntClosbank = decLSPtcktAmntClos;

                    decLSPaddSavebank = decLSPaddSave; decLSPaddConfbank = decLSPaddConf; decLSPaddPaidbank = decLSPaddPaid; decLSPaddClosbank = decLSPaddClos;
                    decLSPdedSavebank = decLSPdedSave; decLSPdedConfbank = decLSPdedConf; decLSPdedPaidbank = decLSPdedPaid; decLSPdedClosbank = decLSPdedClos;
                    decLSPleavDaysSavebank = decLSPleavDaysSave; decLSPleavDaysConfbank = decLSPleavDaysConf; decLSPleavDaysPaidbank = decLSPleavDaysPaid; decLSPleavDaysClosbank = decLSPleavDaysClos;
                    decLSPleavSalSavebank = decLSPleavSalSave; decLSPleavSalConfbank = decLSPleavSalConf; decLSPleavSalPaidbank = decLSPleavSalPaid; decLSPleavSalClosbank = decLSPleavSalClos;
                    decLSPprevSalSavebank = decLSPprevSalSave; decLSPprevSalConfbank = decLSPprevSalConf; decLSPprevSalPaidbank = decLSPprevSalPaid; decLSPprevSalClosbank = decLSPprevSalClos;
                    decLSPnetAmntSavebank = decLSPnetAmntSave; decLSPnetAmntConfbank = decLSPnetAmntConf; decLSPnetAmntPaidbank = decLSPnetAmntPaid; decLSPnetAmntClosbank = decLSPnetAmntClos;

                    decLSPnOtHSavebank = decLSPnOtHSave; decLSPnOtHConfbank = decLSPnOtHConf; decLSPnOtHPaidbank = decLSPnOtHPaid; decLSPnOtHClosbank = decLSPnOtHClos;
                    decLSPnOtAmtSavebank = decLSPnOtAmtSave; decLSPnOtAmtConfbank = decLSPnOtAmtConf; decLSPnOtAmtPaidbank = decLSPnOtAmtPaid; decLSPnOtAmtClosbank = decLSPnOtAmtClos;
                    decLSPhOtHSavebank = decLSPhOtHSave; decLSPhOtHConfbank = decLSPhOtHConf; decLSPhOtHPaidbank = decLSPhOtHPaid; decLSPhOtHClosbank = decLSPhOtHClos;
                    decLSPhOtAmtSavebank = decLSPhOtAmtSave; decLSPhOtAmtConfbank = decLSPhOtAmtConf; decLSPhOtAmtbank = decLSPhOtAmt; decLSPhOtAmtClosbank = decLSPhOtAmtClos;
                    decLSPnetOTSavebank = decLSPnetOTSave; decLSPnetOTConfbank = decLSPnetOTConf; decLSPnetOTPaidbank = decLSPnetOTPaid; decLSPnetOTClosbank = decLSPnetOTClos;

                    //ESP
                    decESPproBasicSavebank = decESPproBasicSave; decESPproBasicConfbank = decESPproBasicConf; decESPproBasicPaidbank = decESPproBasicPaid; decESPproBasicClosbank = decESPproBasicClos;

                    decESPtcktAmntSavebank = decESPtcktAmntSave; decESPtcktAmntConfbank = decESPtcktAmntConf; decESPtcktAmntPaidbank = decESPtcktAmntPaid; decESPtcktAmntClosbank = decESPtcktAmntClos;

                    decESPaddSavebank = decESPaddSave; decESPaddConfbank = decESPaddConf; decESPaddPaidbank = decESPaddPaid; decESPaddClosbank = decESPaddClos;
                    decESPdedSavebank = decESPdedSave; decESPdedConfbank = decESPdedConf; decESPdedPaidbank = decESPdedPaid; decESPdedClosbank = decESPdedClos;
                    decESPleavDaysSavebank = decESPleavDaysSave; decESPleavDaysConfbank = decESPleavDaysConf; decESPleavDaysPaidbank = decESPleavDaysPaid; decESPleavDaysClosbank = decESPleavDaysClos;
                    decESPleavSalSavebank = decESPleavSalSave; decESPleavSalConfbank = decESPleavSalConf; decESPleavSalPaidbank = decESPleavSalPaid; decESPleavSalClosbank = decESPleavSalClos;
                    decESPprevSalSavebank = decESPprevSalSave; decESPprevSalConfbank = decESPprevSalConf; decESPprevSalPaidbank = decESPprevSalPaid; decESPprevSalClosbank = decESPprevSalClos;
                    decESPnetAmntSavebank = decESPnetAmntSave; decESPnetAmntConfbank = decESPnetAmntConf; decESPnetAmntPaidbank = decESPnetAmntPaid; decESPnetAmntClosbank = decESPnetAmntClos;

                    decESPnOtHSavebank = decESPnOtHSave; decESPnOtHConfbank = decLSPnOtHConf; decESPnOtHPaidbank = decESPnOtHPaid; decESPnOtHClosbank = decESPnOtHClos;
                    decESPnOtAmtSavebank = decESPnOtAmtSave; decESPnOtAmtConfbank = decESPnOtAmtConf; decESPnOtAmtPaidbank = decESPnOtAmtPaid; decESPnOtAmtClosbank = decESPnOtAmtClos;
                    decESPhOtHSavebank = decESPhOtHSave; decESPhOtHConfbank = decESPhOtHConf; decESPhOtHPaidbank = decESPhOtHPaid; decESPhOtHClosbank = decESPhOtHClos;
                    decESPhOtAmtSavebank = decESPhOtAmtSave; decESPhOtAmtConfbank = decESPhOtAmtConf; decESPhOtAmtbank = decESPhOtAmt; decESPhOtAmtClosbank = decESPhOtAmtClos;
                    decESPnetOTSavebank = decESPnetOTSave; decESPnetOTConfbank = decESPnetOTConf; decESPnetOTPaidbank = decESPnetOTPaid; decESPnetOTClosbank = decESPnetOTClos;

                    //cashdecMSPproBasicSave = 0;
                    decMSPaddSave = 0;
                    decMSPdedSave = 0;
                    decMSPnetAmntSave = 0;
                    decMSPproBasicSave = 0;
                    decMSPproBasicConf = 0;
                    decMSPaddConf = 0;
                    decMSPdedConf = 0;
                    decMSPnetAmntConf = 0;
                    decMSPproBasicPaid = 0;
                    decMSPaddPaid = 0;
                    decMSPdedPaid = 0;
                    decMSPnetAmntPaid = 0;
                    decMSPproBasicClos = 0;
                    decMSPaddClos = 0;
                    decMSPdedClos = 0;
                    decMSPnetAmntClos = 0;

                    decMSPnOtHSave = 0; decMSPnOtHConf = 0; decMSPnOtHPaid = 0; decMSPnOtHClos = 0; decMSPnOtAmtSave = 0; decMSPnOtAmtConf = 0; decMSPnOtAmtPaid = 0; decMSPnOtAmtClos = 0;
                    decMSPhOtHSave = 0; decMSPhOtHConf = 0; decMSPhOtHPaid = 0; decMSPhOtHClos = 0; decMSPhOtAmtSave = 0; decMSPhOtAmtConf = 0; decMSPhOtAmtPaid = 0; decMSPhOtAmtClos = 0; decMSPnetOTSave = 0; decMSPnetOTConf = 0; decMSPnetOTPaid = 0; decMSPnetOTClos = 0;

                    decLSPproBasicSave = 0; decLSPproBasicConf = 0; decLSPproBasicPaid = 0; decLSPproBasicClos = 0;

                    decLSPtcktAmntSave = 0; decLSPtcktAmntConf = 0; decLSPtcktAmntPaid = 0; decLSPtcktAmntClos = 0;

                    decLSPaddSave = 0; decLSPaddConf = 0; decLSPaddPaid = 0; decLSPaddClos = 0;
                    decLSPdedSave = 0; decLSPdedConf = 0; decLSPdedPaid = 0; decLSPdedClos = 0;
                    decLSPleavDaysSave = 0; decLSPleavDaysConf = 0; decLSPleavDaysPaid = 0; decLSPleavDaysClos = 0;
                    decLSPleavSalSave = 0; decLSPleavSalConf = 0; decLSPleavSalPaid = 0; decLSPleavSalClos = 0;
                    decLSPprevSalSave = 0; decLSPprevSalConf = 0; decLSPprevSalPaid = 0; decLSPprevSalClos = 0;
                    decLSPnetAmntSave = 0; decLSPnetAmntConf = 0; decLSPnetAmntPaid = 0; decLSPnetAmntClos = 0;

                    decLSPnOtHSave = 0; decLSPnOtHConf = 0; decLSPnOtHPaid = 0; decLSPnOtHClos = 0;
                    decLSPnOtAmtSave = 0; decLSPnOtAmtConf = 0; decLSPnOtAmtPaid = 0; decLSPnOtAmtClos = 0;
                    decLSPhOtHSave = 0; decLSPhOtHConf = 0; decLSPhOtHPaid = 0; decLSPhOtHClos = 0;
                    decLSPhOtAmtSave = 0; decLSPhOtAmtConf = 0; decLSPhOtAmt = 0; decLSPhOtAmtClos = 0;
                    decLSPnetOTSave = 0; decLSPnetOTConf = 0; decLSPnetOTPaid = 0; decLSPnetOTClos = 0;

                    //
                    decESPproBasicSave = 0; decESPproBasicConf = 0; decESPproBasicPaid = 0; decESPproBasicClos = 0;

                    decESPtcktAmntSave = 0; decESPtcktAmntConf = 0; decESPtcktAmntPaid = 0; decESPtcktAmntClos = 0;

                    decESPaddSave = 0; decESPaddConf = 0; decESPaddPaid = 0; decESPaddClos = 0;
                    decESPdedSave = 0; decESPdedConf = 0; decESPdedPaid = 0; decESPdedClos = 0;
                    decESPleavDaysSave = 0; decESPleavDaysConf = 0; decESPleavDaysPaid = 0; decESPleavDaysClos = 0;
                    decESPleavSalSave = 0; decESPleavSalConf = 0; decESPleavSalPaid = 0; decESPleavSalClos = 0;
                    decESPprevSalSave = 0; decESPprevSalConf = 0; decESPprevSalPaid = 0; decESPprevSalClos = 0;
                    decESPnetAmntSave = 0; decESPnetAmntConf = 0; decESPnetAmntPaid = 0; decESPnetAmntClos = 0;

                    decESPnOtHSave = 0; decESPnOtHConf = 0; decESPnOtHPaid = 0; decESPnOtHClos = 0;
                    decESPnOtAmtSave = 0; decESPnOtAmtConf = 0; decESPnOtAmtPaid = 0; decESPnOtAmtClos = 0;
                    decESPhOtHSave = 0; decESPhOtHConf = 0; decESPhOtHPaid = 0; decESPhOtHClos = 0;
                    decESPhOtAmtSave = 0; decESPhOtAmtConf = 0; decESPhOtAmt = 0; decESPhOtAmtClos = 0;
                    decESPnetOTSave = 0; decESPnetOTConf = 0; decESPnetOTPaid = 0; decESPnetOTClos = 0;

                    for (int i = 0; i < dtCash.Rows.Count; i++)
                    {
                        //31

                        //if (i == 0)
                        //{
                            


                        //}




                        DataRow drDtl = dtDetail.NewRow();
                        drDtl["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                        drDtl["PAGE"] = dtCash.Rows[i]["PAGE"].ToString();
                        drDtl["STATUS"] = dtCash.Rows[i]["STATUS"].ToString();
                        string Mode = dtCash.Rows[i]["PAGE"].ToString();
                        string Status = dtCash.Rows[i]["STATUS"].ToString();
                        DataTable dtOTctgryShow = new DataTable();
                        objEntityIntervewProcess.Employee = Convert.ToInt32(dtCash.Rows[i]["USR_ID"].ToString());
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            if (Mode != "1")
                            {
                                if (dtCash.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != "" && dtCash.Rows[i]["LEVSETLMT_TO_DATE"].ToString() != null && dtCash.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != "" && dtCash.Rows[i]["LEVSETLMT_FROM_DATE"].ToString() != null)
                                {
                                    objEntityIntervewProcess.CurrentDate = objCommon.textToDateTime(dtCash.Rows[i]["LEVSETLMT_TO_DATE"].ToString());
                                    objEntityIntervewProcess.date = objCommon.textToDateTime(dtCash.Rows[i]["LEVSETLMT_FROM_DATE"].ToString());
                                    if (objEntityIntervewProcess.CurrentDate.Month != objEntityIntervewProcess.date.Month)
                                    {
                                        objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.CurrentDate.Year, objEntityIntervewProcess.CurrentDate.Month, 1);
                                    }
                                }
                            }
                            else
                            {
                                objEntityIntervewProcess.CurrentDate = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, daysInm);
                                objEntityIntervewProcess.date = new DateTime(objEntityIntervewProcess.Year, objEntityIntervewProcess.Month, 1);
                            }
                            dtOTctgryShow = objBusinessIntervewProcess.ReadOTdtls(objEntityIntervewProcess);
                        }
                        DataTable dtAddShow = new DataTable();
                        DataTable dtDedShow = new DataTable();
                        objEntityIntervewProcess.SalaryPrssId = Convert.ToInt32(dtCash.Rows[i]["MASTER_ID"].ToString());
                        objEntityIntervewProcess.SavConf = Convert.ToInt32(Mode);
                        if (intShowAdd == 1)
                        {
                            dtAddShow = objBusinessIntervewProcess.ReadAllowanceDetails(objEntityIntervewProcess);
                        }
                        if (intShowDed == 1)
                        {
                            dtDedShow = objBusinessIntervewProcess.ReadDeductionDetails(objEntityIntervewProcess);
                        }
                        decimal decPerDaySal = Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()) / daysInm;
                        decimal workdays = Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()) / decPerDaySal;
                        workdays = Math.Round(workdays, 1);
                        if (workdays % 1 == 0)
                        {
                            workdays = Convert.ToInt32(workdays);
                        }
                        decimal decTotAdd = 0, decTotDed = 0;
                        decimal decTotOTcurr = 0;
                        if (Mode == "1" && Status == "1")
                        {
                            if (strMSPsave == ""||strMSPsave == "1")
                            {
                                strMSPsave = "1";
                                if (flagpdfmspcash == 0)
                                {
                                    flagpdfmspcash = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                                }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHSave += OtHrs;
                                            decMSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHSave += OtHrs;
                                            decMSPhOtAmtSave += currOtAmnt;

                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTSave += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                           
                            decMSPproBasicSave += Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString());
                            decMSPaddSave += decTotAdd;
                            decMSPdedSave += decTotDed;
                            decMSPnetAmntSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPsaveCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPsaveCurrcash == cntMSPsavecash)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "1" && Status == "2")
                        {

                            if (strMSPconf == "1"||strMSPconf == "")
                            {
                                strMSPconf = "2";
                                if (flagpdfmspcash == 0)
                                {
                                    flagpdfmspcash = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                                }
                                     tabHeadMSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHConf += OtHrs;
                                            decMSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHConf += OtHrs;
                                            decMSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTConf += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            
                            decMSPproBasicConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddConf += decTotAdd;
                            decMSPdedConf += decTotDed;
                            decMSPnetAmntConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPconfCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPconfCurrcash == cntMSPconfcash)
                            {

                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "3")
                        {
                            if (strMSPpaid == "" || strMSPpaid == "1")
                            {
                                strMSPpaid = "2";
                                if (flagpdfmspcash == 0)
                                {
                                    flagpdfmspcash = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            //1010
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHPaid += OtHrs;
                                            decMSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHPaid += OtHrs;
                                            decMSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTPaid += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            
                            decMSPproBasicPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddPaid += decTotAdd;
                            decMSPdedPaid += decTotDed;
                            decMSPnetAmntPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntMSPpaidCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPpaidCurrcash == cntMSPpaidcash)
                            {


                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "1" && Status == "4")
                        {
                            if (strMSPclos == "" || strMSPclos=="1")
                            {
                                strMSPclos = "2";
                                if (flagpdfmspcash == 0)
                                {
                                    flagpdfmspcash = 1;
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = MSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPnOtHClos += OtHrs;
                                            decMSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decMSPhOtHClos += OtHrs;
                                            decMSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decMSPnetOTClos += decTotOTcurr;
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                          

                            decMSPproBasicClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decMSPaddClos += decTotAdd;
                            decMSPdedClos += decTotDed;
                            decMSPnetAmntClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntMSPclosCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntMSPclosCurrcash == cntMSPcloscash)
                            {
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "1")
                        {

                            if (strLSPsave == "1" || strLSPsave=="")
                            {
                               
                                    strLSPsave = "2";
                                    if (flagpdflspcash == 0)
                                    {
                                        flagpdflspcash = 1;
                                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                    } 
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHSave += OtHrs;
                                            decLSPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHSave += OtHrs;
                                            decLSPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTSave += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddSave += decTotAdd;
                            decLSPdedSave += decTotDed;
                            decLSPleavDaysSave += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPsaveCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPsaveCurrcash == cntLSPsavecash)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "2")
                        {
                            if (strLSPconf == "1" || strLSPconf=="")
                            {
                                strLSPconf = "2";
                                if (flagpdflspcash == 0)
                                {
                                    flagpdflspcash = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHConf += OtHrs;
                                            decLSPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHConf += OtHrs;
                                            decLSPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTConf += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddConf += decTotAdd;
                            decLSPdedConf += decTotDed;
                            decLSPleavDaysConf += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPconfCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPconfCurrcash == cntLSPconfcash)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "3")
                        {
                            if (strLSPpaid == "1" || strLSPpaid=="")
                            {
                                strLSPpaid = "2";
                                if (flagpdflspcash == 0)
                                {
                                    flagpdflspcash = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHPaid += OtHrs;
                                            decLSPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHPaid += OtHrs;
                                            decLSPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTPaid += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decLSPproBasicPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddPaid += decTotAdd;
                            decLSPdedPaid += decTotDed;
                            decLSPleavDaysPaid += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPpaidCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPpaidCurrcash == cntLSPpaidcash)
                            {

                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "2" && Status == "4")
                        {
                            if (strLSPclos == "1" || strLSPclos=="")
                            {
                                strLSPclos = "2";
                                if (flagpdflspcash == 0)
                                {
                                    flagpdflspcash = 1;
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(174, 163, 163), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = LSPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPnOtHClos += OtHrs;
                                            decLSPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decLSPhOtHClos += OtHrs;
                                            decLSPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decLSPnetOTClos += decTotOTcurr;
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY }); ;
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                            decLSPproBasicClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decLSPtcktAmntClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decLSPaddClos += decTotAdd;
                            decLSPdedClos += decTotDed;
                            decLSPleavDaysClos += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decLSPleavSalClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decLSPprevSalClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decLSPnetAmntClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntLSPclosCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntLSPclosCurrcash == cntLSPcloscash)
                            {
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }



                        else if (Mode == "3" && Status == "1")
                        {
                            if (strESPsave == "1"|| strESPsave == "")
                            {
                                strESPsave = "2";
                                if (flagpdfespcash == 0)
                                {
                                    flagpdfespcash = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirm Pending", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHSave += OtHrs;
                                            decESPnOtAmtSave += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHSave += OtHrs;
                                            decESPhOtAmtSave += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTSave += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddSave += decTotAdd;
                            decESPdedSave += decTotDed;
                            decESPleavDaysSave += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysSave += Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntSave += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPsaveCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPsaveCurrcash == cntESPsavecash)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Pending)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysSave.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntSave, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "2")
                        {

                            if (strESPconf == "1" || strESPconf == "")
                            {
                                strESPconf = "2";
                                if (flagpdfespcash == 0)
                                {
                                    flagpdfespcash = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Confirmed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHConf += OtHrs;
                                            decESPnOtAmtConf += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHConf += OtHrs;
                                            decESPhOtAmtConf += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTConf += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddConf += decTotAdd;
                            decESPdedConf += decTotDed;
                            decESPleavDaysConf += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysConf += Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntConf += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);


                            cntESPconfCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPconfCurrcash == cntESPconfcash)
                            {

                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Confirmed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysConf.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntConf, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }

                        }
                        else if (Mode == "3" && Status == "3")
                        {
                            if (strESPpaid == "1" || strESPpaid == "")
                            {
                                strESPpaid = "2";
                                if (flagpdfespcash == 0)
                                {
                                    flagpdfespcash = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Paid", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHPaid += OtHrs;
                                            decESPnOtAmtPaid += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHPaid += OtHrs;
                                            decESPhOtAmtPaid += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTPaid += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddPaid += decTotAdd;
                            decESPdedPaid += decTotDed;
                            decESPleavDaysPaid += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysPaid += Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntPaid += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);

                            cntESPpaidCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPpaidCurrcash == cntESPpaidcash)
                            {
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Paid)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysPaid.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntPaid, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }
                        else if (Mode == "3" && Status == "4")
                        {
                            if (strESPclos == "1" || strESPclos == "")
                            {
                                strESPclos = "2";
                                if (flagpdfespcash == 0)
                                {
                                    flagpdfespcash = 1;
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, BackgroundColor = new BaseColor(165, 181, 167), Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Closed", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EID"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["EMPLOYEE"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["BASIC_PAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(workdays.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            if (objEntityIntervewProcess.StffWrkr == 1)
                            {
                                if (decPerDaySal > 0)
                                {
                                    decPerDaySal = decPerDaySal / 8;
                                }
                                DataRow drDtlO = dtOTDetail.NewRow();
                                drDtlO["CPRDEPT_ID"] = dtCash.Rows[i]["CPRDEPT_ID"].ToString();
                                drDtlO["NORMAL"] = 0;
                                drDtlO["HOLIDAY"] = 0;
                                for (int j = 0; j < dtOTctgry.Rows.Count; j++)
                                {
                                    DataRow[] dr = dtOTctgryShow.Select("OVRTMCATG_NAME='" + dtOTctgry.Rows[j][0].ToString() + "'");
                                    decimal currOtAmnt = 0, OtHrs = 0, otRate = 0;
                                    if (dr.Length > 0)
                                    {
                                        OtHrs = Convert.ToDecimal(dr[0]["OT"].ToString());
                                        otRate = Convert.ToDecimal(dr[0]["OVRTMCATG_RATE"].ToString());
                                        currOtAmnt = OtHrs * otRate * decPerDaySal;
                                        currOtAmnt = Math.Round(currOtAmnt, roundNum);
                                        decTotOTcurr += currOtAmnt;
                                        if (dtOTctgry.Rows[j][0].ToString() == "NORMAL OT")
                                        {
                                            strNormalOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPnOtHClos += OtHrs;
                                            decESPnOtAmtClos += currOtAmnt;
                                            drDtlO["NORMAL"] = currOtAmnt;
                                        }
                                        else
                                        {
                                            drDtlO["HOLIDAY"] = currOtAmnt;
                                            strHolidayOtRate = dr[0]["OVRTMCATG_RATE"].ToString();
                                            decESPhOtHClos += OtHrs;
                                            decESPhOtAmtClos += currOtAmnt;
                                        }
                                    }
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(OtHrs.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(currOtAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                dtOTDetail.Rows.Add(drDtlO);
                                decESPnetOTClos += decTotOTcurr;
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotOTcurr, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtAddShow.Rows.Count; j++)
                            {
                                decTotAdd += Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtAddShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtAddShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotAdd = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_ADD"].ToString()), roundNum) - decTotAdd - decTotOTcurr;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            for (int j = 0; j < dtDedShow.Rows.Count; j++)
                            {
                                decTotDed += Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum);
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                drDtl["" + dtDedShow.Rows[j]["PAYRL_ID"]] = Math.Round(Convert.ToDecimal(dtDedShow.Rows[j]["AMNT_PROCS"].ToString()), roundNum).ToString();
                            }
                            decTotDed = Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TOTAL_DED"].ToString()), roundNum) - decTotDed;
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                            decESPproBasicClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PRSD_BASICPAY"].ToString()), roundNum);
                            decESPtcktAmntClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["TICKET_AMNT"].ToString()), roundNum);
                            decESPaddClos += decTotAdd;
                            decESPdedClos += decTotDed;
                            decESPleavDaysClos += Convert.ToDecimal(dtCash.Rows[i]["ELIGIBLE_DAYS"].ToString());
                            decESPleavSalClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["LEAVE_SAL"].ToString()), roundNum);
                            decESPgratDaysClos += Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_ELIGIBLE_DAYS"].ToString());
                            decESPgratSalClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["GRATUITY_AMOUNT"].ToString()), roundNum);
                            decESPprevSalClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["PREVMNTH_SAL"].ToString()), roundNum);
                            decESPnetAmntClos += Math.Round(Convert.ToDecimal(dtCash.Rows[i]["NET_AMNT"].ToString()), 0);
                            cntESPclosCurrcash++;
                            dtDetail.Rows.Add(drDtl);
                            if (cntESPclosCurrcash == cntESPcloscash)
                            {


                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase("Subtotal(Closed)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasicClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                if (objEntityIntervewProcess.StffWrkr == 1)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtHClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmtClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOTClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPaddClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                                {
                                    tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3 AND STATUS=4").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                }
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPdedClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDaysClos.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSalClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                                tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmntClos, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            }
                        }

                    }


                    //calc

                    decMSPproBasic = decMSPproBasicSave + decMSPproBasicConf + decMSPproBasicPaid + decMSPproBasicClos + decMSPproBasicSavebank + decMSPproBasicConfbank + decMSPproBasicPaidbank + decMSPproBasicClosbank ;
                    decMSPadd = decMSPaddSave + decMSPaddConf + decMSPaddPaid + decMSPaddClos + decMSPaddSavebank + decMSPaddConfbank + decMSPaddPaidbank + decMSPaddClosbank;
                    decMSPded = decMSPdedSave + decMSPdedConf + decMSPdedPaid + decMSPdedClos + decMSPdedSavebank + decMSPdedPaidbank + decMSPdedConfbank + decMSPdedClosbank;
                    decMSPnetAmnt = decMSPnetAmntSave + decMSPnetAmntConf + decMSPnetAmntPaid + decMSPnetAmntClos+ decMSPnetAmntSavebank + decMSPnetAmntConfbank + decMSPnetAmntPaidbank + decMSPnetAmntClosbank;
                    decMSPnOtH = decMSPnOtHSave + decMSPnOtHConf + decMSPnOtHPaid + decMSPnOtHClos + decMSPnOtHSavebank + decMSPnOtHConfbank + decMSPnOtHPaidbank + decMSPnOtHClosbank;
                    decMSPnOtAmt = decMSPnOtAmtSave + decMSPnOtAmtConf + decMSPnOtAmtPaid + decMSPnOtAmtClos + decMSPnOtAmtSavebank + decMSPnOtAmtConfbank + decMSPnOtAmtPaidbank + decMSPnOtAmtClosbank;
                    decMSPhOtH = decMSPhOtHSave + decMSPhOtHConf + decMSPhOtHPaid + decMSPhOtHClos + decMSPhOtHSavebank + decMSPhOtHConfbank + decMSPhOtHPaidbank + decMSPhOtHClosbank;
                    decMSPhOtAmt = decMSPhOtAmtSave + decMSPhOtAmtConf + decMSPhOtAmtPaid + decMSPhOtAmtClos + decMSPhOtAmtSavebank + decMSPhOtAmtConfbank + decMSPhOtAmtPaidbank + decMSPhOtAmtClosbank;
                    decMSPnetOT = decMSPnetOTSave + decMSPnetOTConf + decMSPnetOTPaid + decMSPnetOTClos + decMSPnetOTSavebank + decMSPnetOTConfbank + decMSPnetOTPaidbank + decMSPnetOTClosbank;

                    decLSPproBasic = decLSPproBasicSave + decLSPproBasicConf + decLSPproBasicPaid + decLSPproBasicClos + decLSPproBasicSavebank + decLSPproBasicConfbank + decLSPproBasicPaidbank + decLSPproBasicClosbank;
                    decLSPtcktAmnt = decLSPtcktAmntSave + decLSPtcktAmntConf + decLSPtcktAmntPaid + decLSPtcktAmntClos + decLSPtcktAmntSavebank + decLSPtcktAmntConfbank + decLSPtcktAmntPaidbank + decLSPtcktAmntClosbank;
                    decLSPadd = decLSPaddSave + decLSPaddConf + decLSPaddPaid + decLSPaddClos + decLSPaddSavebank + decLSPaddConfbank + decLSPaddPaidbank + decLSPaddClosbank;
                    decLSPded = decLSPdedSave + decLSPdedConf + decLSPdedPaid + decLSPdedClos + decLSPdedSavebank + decLSPdedConfbank + decLSPdedPaidbank + decLSPdedClosbank;
                    decLSPleavDays = decLSPleavDaysSave + decLSPleavDaysConf + decLSPleavDaysPaid + decLSPleavDaysClos + decLSPleavDaysSavebank + decLSPleavDaysConfbank + decLSPleavDaysPaidbank + decLSPleavDaysClosbank;
                    decLSPleavSal = decLSPleavSalSave + decLSPleavSalConf + decLSPleavSalPaid + decLSPleavSalClos + decLSPleavSalSavebank + decLSPleavSalConfbank + decLSPleavSalPaidbank + decLSPleavSalClosbank;
                    decLSPprevSal = decLSPprevSalSave + decLSPprevSalConf + decLSPprevSalPaid + decLSPprevSalClos + decLSPprevSalSavebank + decLSPprevSalConfbank + decLSPprevSalPaidbank + decLSPprevSalClosbank;
                    decLSPnetAmnt = decLSPnetAmntSave + decLSPnetAmntConf + decLSPnetAmntPaid + decLSPnetAmntClos + decLSPnetAmntSavebank + decLSPnetAmntConfbank + decLSPnetAmntPaidbank + decLSPnetAmntClosbank;
                    decLSPnOtH = decLSPnOtHSave + decLSPnOtHConf + decLSPnOtHPaid + decLSPnOtHClos + decLSPnOtHSavebank + decLSPnOtHConfbank + decLSPnOtHPaidbank + decLSPnOtHClosbank;
                    decLSPnOtAmt = decLSPnOtAmtSave + decLSPnOtAmtConf + decLSPnOtAmtPaid + decLSPnOtAmtClos + decLSPnOtAmtSavebank + decLSPnOtAmtConfbank + decLSPnOtAmtPaidbank + decLSPnOtAmtClosbank;
                    decLSPhOtH = decLSPhOtHSave + decLSPhOtHConf + decLSPhOtHPaid + decLSPhOtHClos + decLSPhOtHSavebank + decLSPhOtHConfbank + decLSPhOtHPaidbank + decLSPhOtHClosbank;
                    decLSPhOtAmt = decLSPhOtAmtSave + decLSPhOtAmtConf + decLSPhOtAmtPaid + decLSPhOtAmtClos + decLSPhOtAmtSavebank + decLSPhOtAmtConfbank + decLSPhOtAmtPaidbank + decLSPhOtAmtClosbank;
                    decLSPnetOT = decLSPnetOTSave + decLSPnetOTConf + decLSPnetOTPaid + decLSPnetOTClos + decLSPnetOTSavebank + decLSPnetOTConfbank + decLSPnetOTPaidbank + decLSPnetOTClosbank;

                    decESPproBasic = decESPproBasicSave + decESPproBasicConf + decESPproBasicPaid + decESPproBasicClos + decESPproBasicSavebank + decESPproBasicConfbank + decESPproBasicPaidbank + decESPproBasicClosbank;
                    decESPtcktAmnt = decESPtcktAmntSave + decESPtcktAmntConf + decESPtcktAmntPaid + decESPtcktAmntClos + decESPtcktAmntSavebank + decESPtcktAmntConfbank + decESPtcktAmntPaidbank + decESPtcktAmntClosbank;
                    decESPadd = decESPaddSave + decESPaddConf + decESPaddPaid + decESPaddClos + decESPaddSavebank + decESPaddConfbank + decESPaddPaidbank + decESPaddClosbank;
                    decESPded = decESPdedSave + decESPdedConf + decESPdedPaid + decESPdedClos + decESPdedSavebank + decESPdedConfbank + decESPdedPaidbank + decESPdedClosbank;
                    decESPleavDays = decESPleavDaysSave + decESPleavDaysConf + decESPleavDaysPaid + decESPleavDaysClos + decESPleavDaysSavebank + decESPleavDaysConfbank + decESPleavDaysPaidbank + decESPleavDaysClosbank;
                    decESPleavSal = decESPleavSalSave + decESPleavSalConf + decESPleavSalPaid + decESPleavSalClos + decESPleavSalSavebank + decESPleavSalConfbank + decESPleavSalPaidbank + decESPleavSalClosbank;
                    decESPgratDays = decESPgratDaysSave + decESPgratDaysConf + decESPgratDaysPaid + decESPgratDaysClos + decESPgratDaysSavebank + decESPgratDaysConfbank + decESPgratDaysPaidbank + decESPgratDaysClosbank;
                    decESPgratSal = decESPgratSalSave + decESPgratSalConf + decESPgratSalPaid + decESPgratSalClos + decESPgratSalSavebank + decESPgratSalConfbank + decESPgratSalPaidbank + decESPgratSalClosbank;
                    decESPprevSal = decESPprevSalSave + decESPprevSalConf + decESPprevSalPaid + decESPprevSalClos + decESPprevSalSavebank + decESPprevSalConfbank + decESPprevSalPaidbank + decESPprevSalClosbank;
                    decESPnetAmnt = decESPnetAmntSave + decESPnetAmntConf + decESPnetAmntPaid + decESPnetAmntClos + decESPnetAmntSavebank + decESPnetAmntConfbank + decESPnetAmntPaidbank + decESPnetAmntClosbank;
                    decESPnOtH = decESPnOtHSave + decESPnOtHConf + decESPnOtHPaid + decESPnOtHClos + decESPnOtHSavebank + decESPnOtHConfbank + decESPnOtHPaidbank + decESPnOtHClosbank;
                    decESPnOtAmt = decESPnOtAmtSave + decESPnOtAmtConf + decESPnOtAmtPaid + decESPnOtAmtClosbank + decESPnOtAmtSavebank + decESPnOtAmtConfbank + decESPnOtAmtPaidbank + decESPnOtAmtClosbank;
                    decESPhOtH = decESPhOtHSave + decESPhOtHConf + decESPhOtHPaid + decESPhOtHClos + decESPhOtHSavebank + decESPhOtHConfbank + decESPhOtHPaidbank + decESPhOtHClosbank;
                    decESPhOtAmt = decESPhOtAmtSave + decESPhOtAmtConf + decESPhOtAmtPaid + decESPhOtAmtClos + decESPhOtAmtSavebank + decESPhOtAmtConfbank + decESPhOtAmtPaidbank + decESPhOtAmtClosbank;
                    decESPnetOT = decESPnetOTSave + decESPnetOTConf + decESPnetOTPaid + decESPnetOTClos + decESPnetOTSavebank + decESPnetOTConfbank + decESPnetOTPaidbank + decESPnetOTClosbank;
                    //Body_MSP 
                    if (strMSPsave != "" || strMSPconf != "" || strMSPpaid != "" || strMSPclos != "")
                    {
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(decMSPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=1").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadMSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decMSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadMSP);
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }
                    //Body_LSP
                    if (strLSPsave != "" || strLSPconf != "" || strLSPpaid != "" || strLSPclos != "")
                    {
                        float pos3 = writer.GetVerticalPosition(false);
                        if (pos3 < 150)
                        {
                            document.NewPage();
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase("Grand Total Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=2").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(decLSPleavDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPleavSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPprevSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadLSP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decLSPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadLSP);
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }
                    //Body_ESP
                    if (strESPsave != "" || strESPconf != "" || strESPpaid != "" || strESPclos != "")
                    {
                        float pos4 = writer.GetVerticalPosition(false);
                        if (pos4 < 150)
                        {
                            document.NewPage();
                        }

                        tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = 2, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPproBasic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPnOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPhOtH.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPhOtAmt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetOT, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPtcktAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPadd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                        {
                            tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "PAGE=3").ToString()), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPleavDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPleavSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(decESPgratDays.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPgratSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPprevSal, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadESP.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decESPnetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        document.Add(tabHeadESP);
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                    }

                    //Department wise tables
                    int cnt = 0, ColWiseTot = 0, MSPcnt = 0, LSPcnt = 0, ESPcnt = 0;
                    decimal net = 0, ColWiseTotNet = 0, MSPnet = 0, LSPnet = 0, ESPnet = 0;
                    decimal Basic = 0, RowWiseTotBasic = 0;
                    decimal Add = 0, RowWiseTotAdd = 0, RowWiseTotAddG = 0;
                    decimal Ded = 0, RowWiseTotDed = 0, RowWiseTotDedG = 0;

                    DataView dtview = new DataView(dtDept);
                    DataTable dtDistdept = dtview.ToTable(true, "CPRDEPT_ID", "CPRDEPT_NAME");

                    DataTable dtPriAdd = new DataTable();
                    dtPriAdd.Columns.Add("CPRDEPT_ID", typeof(string));
                    dtPriAdd.Columns.Add("ADD", typeof(decimal));
                    DataTable dtPriDed = new DataTable();
                    dtPriDed.Columns.Add("CPRDEPT_ID", typeof(string));
                    dtPriDed.Columns.Add("DED", typeof(decimal));

                    int EmpCntcolSpan = dtDistdept.Rows.Count + 2;
                    PdfPTable tabHeadSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabBasicSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNOTsal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabHOTsal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotAddSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabDedSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthDedSal = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotDedSal = new PdfPTable(EmpCntcolSpan);
                    tabHeadSal.WidthPercentage = 100;
                    tabBasicSal.WidthPercentage = 100;
                    tabNOTsal.WidthPercentage = 100;
                    tabHOTsal.WidthPercentage = 100;
                    tabAddSal.WidthPercentage = 100;
                    tabOthAddSal.WidthPercentage = 100;
                    tabTotAddSal.WidthPercentage = 100;
                    tabDedSal.WidthPercentage = 100;
                    tabOthDedSal.WidthPercentage = 100;
                    tabTotDedSal.WidthPercentage = 100;
                    PdfPTable tabHeadSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabBasicSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNOTsalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabHOTsalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabAddSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthAddSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotAddSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabDedSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabOthDedSalcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabTotDedSalcash = new PdfPTable(EmpCntcolSpan);
                    tabHeadSalcash.WidthPercentage = 100;
                    tabBasicSalcash.WidthPercentage = 100;
                    tabNOTsalcash.WidthPercentage = 100;
                    tabHOTsalcash.WidthPercentage = 100;
                    tabAddSalcash.WidthPercentage = 100;
                    tabOthAddSalcash.WidthPercentage = 100;
                    tabTotAddSalcash.WidthPercentage = 100;
                    tabDedSalcash.WidthPercentage = 100;
                    tabOthDedSalcash.WidthPercentage = 100;
                    tabTotDedSalcash.WidthPercentage = 100;
                    
                    tabHeadSal.AddCell(new PdfPCell(new Phrase("SALARY", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                    //0041

                  //17-02



                    tabHeadSal.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    
                    tabHeadSal.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                   
                    tabBasicSal.AddCell(new PdfPCell(new Phrase("Total Amount (Basic Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNOTsal.AddCell(new PdfPCell(new Phrase("Total Amount (Normal OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHOTsal.AddCell(new PdfPCell(new Phrase("Total Amount (Holiday OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabAddSal.AddCell(new PdfPCell(new Phrase("Additions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthAddSal.AddCell(new PdfPCell(new Phrase("Total Amount (Other Additions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotAddSal.AddCell(new PdfPCell(new Phrase("Total Amount(All Additions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabDedSal.AddCell(new PdfPCell(new Phrase("Deductions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthDedSal.AddCell(new PdfPCell(new Phrase("Total Amount (Other Deductions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotDedSal.AddCell(new PdfPCell(new Phrase("Total Amount(All Deductions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });




                    //0041

                    //17-02



                    tabHeadSalcash.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    tabHeadSalcash.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });



                    tabBasicSalcash.AddCell(new PdfPCell(new Phrase("Total Amount (Basic Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNOTsalcash.AddCell(new PdfPCell(new Phrase("Total Amount (Normal OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHOTsalcash.AddCell(new PdfPCell(new Phrase("Total Amount (Holiday OT)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabAddSalcash.AddCell(new PdfPCell(new Phrase("Additions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthAddSalcash.AddCell(new PdfPCell(new Phrase("Total Amount (Other Additions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotAddSalcash.AddCell(new PdfPCell(new Phrase("Total Amount(All Additions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabDedSalcash.AddCell(new PdfPCell(new Phrase("Deductions", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabOthDedSalcash.AddCell(new PdfPCell(new Phrase("Total Amount (Other Deductions)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabTotDedSalcash.AddCell(new PdfPCell(new Phrase("Total Amount(All Deductions)", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });

                   
                    
                    for (int intRowCount = 0; intRowCount < dtadd.Rows.Count; intRowCount++)
                    {
                        decimal decNetAmnt = 0;
                        tabAddSal.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtadd.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriAdd.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["ADD"] = decAmnt;
                            dtPriAdd.Rows.Add(drDtl);
                        }
                        tabAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    for (int intRowCount = 0; intRowCount < dtDed.Rows.Count; intRowCount++)
                    {
                        decimal decNetAmnt = 0;
                        tabDedSal.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtDed.Rows[intRowCount]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriDed.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["DED"] = decAmnt;
                            dtPriDed.Rows.Add(drDtl);
                        }
                        tabDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }



                    for (int intRowCount1 = 0; intRowCount1 < dtadd.Rows.Count; intRowCount1++)
                    {
                        decimal decNetAmnt = 0;
                        tabAddSalcash.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtadd.Rows[intRowCount1]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtadd.Rows[intRowCount1]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriAdd.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["ADD"] = decAmnt;
                            dtPriAdd.Rows.Add(drDtl);
                        }
                        tabAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    for (int intRowCount1 = 0; intRowCount1 < dtDed.Rows.Count; intRowCount1++)
                    {
                        decimal decNetAmnt = 0;
                        tabDedSalcash.AddCell(new PdfPCell(new Phrase("Total Amount (" + tInfo.ToTitleCase(dtDed.Rows[intRowCount1]["PAYRL_NAME"].ToString().ToLower()) + ")", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        for (int i = 0; i < dtDistdept.Rows.Count; i++)
                        {
                            decimal decAmnt = Convert.ToDecimal(dtDetail.Compute("Sum([" + dtDed.Rows[intRowCount1]["PAYRL_ID"].ToString() + "])", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            decNetAmnt += decAmnt;
                            DataRow drDtl = dtPriDed.NewRow();
                            drDtl["CPRDEPT_ID"] = dtDistdept.Rows[i][0].ToString();
                            drDtl["DED"] = decAmnt;
                            dtPriDed.Rows.Add(drDtl);
                        }
                        tabDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNetAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }


                    PdfPTable tabHeadEmpCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPempCnt = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetEmpCnt = new PdfPTable(EmpCntcolSpan);
                    tabHeadEmpCnt.WidthPercentage = 100;
                    tabMSPempCnt.WidthPercentage = 100;
                    tabLSPempCnt.WidthPercentage = 100;
                    tabESPempCnt.WidthPercentage = 100;
                    tabNetEmpCnt.WidthPercentage = 100;
                    PdfPTable tabHeadEmpCntcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPempCntcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPempCntcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPempCntcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetEmpCntcash = new PdfPTable(EmpCntcolSpan);
                    tabHeadEmpCntcash.WidthPercentage = 100;
                    tabMSPempCntcash.WidthPercentage = 100;
                    tabLSPempCntcash.WidthPercentage = 100;
                    tabESPempCntcash.WidthPercentage = 100;
                    tabNetEmpCntcash.WidthPercentage = 100;

                 
                   
                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("EMPLOYEE COUNT", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                    //0041

                   
                        tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                   

                       
                    

                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });





                    tabMSPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCnt.AddCell(new PdfPCell(new Phrase("Total Employee# (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                   // tabNetEmpCnt.AddCell(new PdfPCell(new Phrase("Total Employee#", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });

                    tabHeadEmpCntcash.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                    tabHeadEmpCntcash.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });





                    tabMSPempCntcash.AddCell(new PdfPCell(new Phrase("Total Employee# (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCntcash.AddCell(new PdfPCell(new Phrase("Total Employee# (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCntcash.AddCell(new PdfPCell(new Phrase("Total Employee# (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetEmpCntcash.AddCell(new PdfPCell(new Phrase("Total Employee#", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });


                    PdfPTable tabHeadNet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPnet = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetnet = new PdfPTable(EmpCntcolSpan);
                    tabHeadNet.WidthPercentage = 100;
                    tabMSPnet.WidthPercentage = 100;
                    tabLSPnet.WidthPercentage = 100;
                    tabESPnet.WidthPercentage = 100;
                    tabNetnet.WidthPercentage = 100;
                    PdfPTable tabHeadNetcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabMSPnetcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabLSPnetcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabESPnetcash = new PdfPTable(EmpCntcolSpan);
                    PdfPTable tabNetnetcash = new PdfPTable(EmpCntcolSpan);
                    tabHeadNetcash.WidthPercentage = 100;
                    tabMSPnetcash.WidthPercentage = 100;
                    tabLSPnetcash.WidthPercentage = 100;
                    tabESPnetcash.WidthPercentage = 100;
                    tabNetnetcash.WidthPercentage = 100;

                    tabHeadNet.AddCell(new PdfPCell(new Phrase("NET SUMMARY", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                    //0041

                    
                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Bank", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });

                   

                       
                    

                    tabHeadNet.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                    tabMSPnet.AddCell(new PdfPCell(new Phrase("Total Amount (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPnet.AddCell(new PdfPCell(new Phrase("Total Amount (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPnet.AddCell(new PdfPCell(new Phrase("Total Amount (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetnet.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadNetcash.AddCell(new PdfPCell(new Phrase("Cash", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = ESPcolSpan, HorizontalAlignment = Element.ALIGN_CENTER, BackgroundColor = BaseColor.LIGHT_GRAY, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabHeadNetcash.AddCell(new PdfPCell(new Phrase("Description", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });


                    tabMSPnetcash.AddCell(new PdfPCell(new Phrase("Total Amount (Monthly Salary)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPnetcash.AddCell(new PdfPCell(new Phrase("Total Amount (Leave Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPnetcash.AddCell(new PdfPCell(new Phrase("Total Amount (End of Service Settlement)", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetnetcash.AddCell(new PdfPCell(new Phrase("Net Amount", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });

                    for (int i = 0; i < dtDistdept.Rows.Count; i++)
                    {
                        ColWiseTotNet = 0; ColWiseTot = 0;
                        tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadNet.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadSal.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        //MSP
                        DataRow[] dr = dtorgDeptlistbank.Select("PAGE=1 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0; Basic = 0; Add = 0; Ded = 0;
                        if (dr.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr[0]["TOTAL_DED"].ToString());
                        }
                        tabMSPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        MSPcnt += cnt;
                        mspnetbank = net;
                        tabMSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        MSPnet += net;
                        //LSP
                        DataRow[] dr1 = dtorgDeptlistbank.Select("PAGE=2 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr1.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr1[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr1[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr1[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr1[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr1[0]["TOTAL_DED"].ToString());
                        }
                        tabLSPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        LSPcnt += cnt;
                        lspnetbank = net;
                        tabLSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        LSPnet += net;
                        //ESP
                        DataRow[] dr2 = dtorgDeptlistbank.Select("PAGE=3 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr2.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr2[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr2[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr2[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr2[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr2[0]["TOTAL_DED"].ToString());
                        }
                        tabESPempCnt.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        ESPcnt += cnt;
                        espnetbank = net;
                        tabESPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        ESPnet += net;

                        decimal decAmntA = 0, decAmntD = 0;
                        if (dtadd.Rows.Count > 0)
                        {
                            decAmntA = Convert.ToDecimal(dtPriAdd.Compute("Sum(ADD)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        if (dtDed.Rows.Count > 0)
                        {
                            decAmntD = Convert.ToDecimal(dtPriDed.Compute("Sum(DED)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        decimal decNotAmnt = 0, decHotAmnt = 0;
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            decNotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(NORMAL)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            decHotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(HOLIDAY)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabNOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decHotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        //Add
                        tabOthAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Add - decAmntA - decNotAmnt - decHotAmnt), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        //Ded
                        tabOthDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Ded - decAmntD), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });


                        RowWiseTotAddG += Add;
                        RowWiseTotDedG += Ded;
                        RowWiseTotBasic += Basic;
                        RowWiseTotAdd += (Add - decAmntA - decNotAmnt - decHotAmnt);
                        RowWiseTotDed += (Ded - decAmntD);
                        tabNetEmpCnt.AddCell(new PdfPCell(new Phrase(ColWiseTot.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(ColWiseTotNet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        
                         basicbank = Basic;
                         addbank = Add;
                        
                         desbank = Ded;

                        tabBasicSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(basicbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(addbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(desbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }
                    

                    tabHeadEmpCnt.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                    tabMSPempCnt.AddCell(new PdfPCell(new Phrase(MSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCnt.AddCell(new PdfPCell(new Phrase(LSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCnt.AddCell(new PdfPCell(new Phrase(ESPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                   // tabNetEmpCnt.AddCell(new PdfPCell(new Phrase((MSPcnt + LSPcnt + ESPcnt).ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });


                    decimal tot = MSPcnt + LSPcnt + ESPcnt;
                    //try
                    decimal RowWiseTotAddGbank = RowWiseTotAddG;
                    decimal RowWiseTotDedGbank = RowWiseTotDedG;
                    decimal RowWiseTotBasicbank = RowWiseTotBasic;
                    decimal RowWiseTotAddbank = RowWiseTotAdd;
                    decimal RowWiseTotDedbank = RowWiseTotDed;

                    for (int i = 0; i < dtDistdept.Rows.Count; i++)
                    {
                         

                        if (i == 0) {


                            RowWiseTotAddG = 0;
                            RowWiseTotDedG = 0;
                            RowWiseTotBasic = 0;
                            RowWiseTotAdd = 0;
                            RowWiseTotDed = 0;
                         MSPcnt = 0; LSPcnt = 0; ESPcnt = 0;

                        }
                        ColWiseTotNet = 0; ColWiseTot = 0;
                        tabHeadEmpCntcash.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadNetcash.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabHeadSalcash.AddCell(new PdfPCell(new Phrase(tInfo.ToTitleCase(dtDistdept.Rows[i][1].ToString().ToLower()), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        //MSP
                        DataRow[] dr = dtorgDeptlistcash.Select("PAGE=1 AND CPRDEPT_ID=" +  dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0; Basic = 0; Add = 0; Ded = 0;
                        if (dr.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr[0]["TOTAL_DED"].ToString());
                        }
                        tabMSPempCntcash.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        MSPcnt += cnt;
                        mspnetcash = net;
                        tabMSPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        MSPnet += net;
                        //LSP
                        DataRow[] dr1 = dtorgDeptlistcash.Select("PAGE=2 AND CPRDEPT_ID=" + dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr1.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr1[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr1[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr1[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr1[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr1[0]["TOTAL_DED"].ToString());
                        }
                        tabLSPempCntcash.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        LSPcnt += cnt;
                        lspnetcash = net;
                        tabLSPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        LSPnet += net;
                        //ESP
                        DataRow[] dr2 = dtorgDeptlistcash.Select("PAGE=3 AND CPRDEPT_ID=" +  dtDistdept.Rows[i][0].ToString());
                        cnt = 0; net = 0;
                        if (dr2.Length > 0)
                        {
                            cnt = Convert.ToInt32(dr2[0]["CNT"].ToString());
                            net = Convert.ToDecimal(dr2[0]["NET_AMNT"].ToString());
                            Basic += Convert.ToDecimal(dr2[0]["SUM_BASIC"].ToString());
                            Add += Convert.ToDecimal(dr2[0]["TOTAL_ADD"].ToString());
                            Ded += Convert.ToDecimal(dr2[0]["TOTAL_DED"].ToString());
                        }
                        tabESPempCntcash.AddCell(new PdfPCell(new Phrase(cnt.ToString(), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTot += cnt;
                        ESPcnt += cnt;
                        espnetcash = net;
                        tabESPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(net, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        ColWiseTotNet += net;
                        ESPnet += net;

                        decimal decAmntA = 0, decAmntD = 0;
                        if (dtadd.Rows.Count > 0)
                        {
                            decAmntA = Convert.ToDecimal(dtPriAdd.Compute("Sum(ADD)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        if (dtDed.Rows.Count > 0)
                        {
                            decAmntD = Convert.ToDecimal(dtPriDed.Compute("Sum(DED)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                        }
                        decimal decNotAmnt = 0, decHotAmnt = 0;
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            decNotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(NORMAL)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            decHotAmnt = Convert.ToDecimal(dtOTDetail.Compute("Sum(HOLIDAY)", "CPRDEPT_ID='" + dtDistdept.Rows[i][0].ToString() + "'"));
                            tabNOTsalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decNotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(decHotAmnt, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        //Add
                        tabOthAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Add - decAmntA - decNotAmnt - decHotAmnt), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        //Ded
                        tabOthDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((Ded - decAmntD), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        //Net
                        RowWiseTotAddG += Add;
                        RowWiseTotDedG += Ded;
                        RowWiseTotBasic += Basic;
                        RowWiseTotAdd += (Add - decAmntA - decNotAmnt - decHotAmnt);
                        RowWiseTotDed += (Ded - decAmntD);
                        tabNetEmpCntcash.AddCell(new PdfPCell(new Phrase((MSPcnt + LSPcnt + ESPcnt+tot).ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(ColWiseTotNet, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        tabBasicSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Basic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Add, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Ded, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                    }

                    tabHeadEmpCntcash.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                    tabMSPempCntcash.AddCell(new PdfPCell(new Phrase(MSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabLSPempCntcash.AddCell(new PdfPCell(new Phrase(LSPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabESPempCntcash.AddCell(new PdfPCell(new Phrase(ESPcnt.ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                    tabNetEmpCntcash.AddCell(new PdfPCell(new Phrase((MSPcnt + LSPcnt + ESPcnt+ tot).ToString(), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Padding = 2, BorderColor = BaseColor.GRAY });
                 
                    //float pos5 = writer.GetVerticalPosition(false);
                    //if (pos5 < 100)
                    //{
                    //0041
                    if (HiddenFieldSalaryProcess.Value != "1")
                    {
                        //end


                        document.NewPage();
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        document.Add(new Paragraph(new Chunk("                                                                                                             STATEMENT SUMMARY", FontFactory.GetFont("Times New Roman", 10, Font.BOLD, BaseColor.BLACK))));
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //}
                        document.Add(tabHeadEmpCnt);
                        document.Add(tabMSPempCnt);
                        document.Add(tabLSPempCnt);
                        document.Add(tabESPempCnt);
                        document.Add(tabNetEmpCnt);

                        document.Add(tabHeadEmpCntcash);
                        document.Add(tabMSPempCntcash);
                        document.Add(tabLSPempCntcash);
                        document.Add(tabESPempCntcash);
                        document.Add(tabNetEmpCntcash);

                        tabHeadSal.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabBasicSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(basicbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                       // 17-02
                        
                        
                        
                        tabHeadSalcash.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabBasicSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(Basic, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {

                            decimal NOTsal = decMSPnOtAmtSavebank + decMSPnOtAmtConfbank + decMSPnOtAmtPaidbank + decMSPnOtAmtClosbank + decLSPnOtAmtSavebank + decLSPnOtAmtConfbank + decLSPnOtAmtPaidbank + decLSPnOtAmtClosbank + decESPnOtAmtSavebank + decESPnOtAmtConfbank + decESPnOtAmtPaidbank + decESPnOtAmtClosbank;
                            decimal HOTsal = decMSPhOtAmtSavebank + decMSPhOtAmtConfbank + decMSPhOtAmtPaidbank + decMSPhOtAmtClosbank + decLSPhOtAmtSavebank + decLSPhOtAmtConfbank + decLSPhOtAmtPaidbank + decLSPhOtAmtClosbank + decESPhOtAmtSavebank + decESPhOtAmtConfbank + decESPhOtAmtPaidbank + decESPhOtAmtClosbank;
                            tabNOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((NOTsal), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((HOTsal), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }
                        tabOthAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                       
                        tabTotAddSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddGbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabOthDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSal.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedGbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                       
                        //try
                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            decimal NOTsalcash = decMSPnOtAmtSave + decMSPnOtAmtConf + decMSPnOtAmtPaid + decMSPnOtAmtClos + decLSPnOtAmtSave + decLSPnOtAmtConf + decLSPnOtAmtPaid + decLSPnOtAmtClos + decESPnOtAmtSave + decESPnOtAmtConf + decESPnOtAmtPaid + decESPnOtAmtClos;
                            decimal HOTsalcash = decMSPhOtAmtSave + decMSPhOtAmtConf + decMSPhOtAmtPaid + decMSPhOtAmtClos + decLSPhOtAmtSave + decLSPhOtAmtConf + decLSPhOtAmtPaid + decLSPhOtAmtClos + decESPhOtAmtSave + decESPhOtAmtConf + decESPhOtAmtPaid + decESPhOtAmtClos;
                            tabNOTsalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((NOTsalcash), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                            tabHOTsalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((HOTsalcash), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        }

                        tabOthAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAdd, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });

                        tabTotAddSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotAddG, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabOthDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDed, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabTotDedSalcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(RowWiseTotDedG, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        
                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        float pos2 = writer.GetVerticalPosition(false);
                        if (pos2 < 100)
                        {
                            document.NewPage();
                        }
                        document.Add(tabHeadSal);
                        document.Add(tabBasicSal);


                        

                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            document.Add(tabNOTsal);
                            document.Add(tabHOTsal);
                        }
                        document.Add(tabAddSal);
                        document.Add(tabOthAddSal);
                        document.Add(tabTotAddSal);
                        document.Add(tabDedSal);
                        document.Add(tabOthDedSal);
                        document.Add(tabTotDedSal);


                        document.Add(tabHeadSalcash);
                        document.Add(tabBasicSalcash);

                        if (objEntityIntervewProcess.StffWrkr == 1)
                        {
                            document.Add(tabNOTsalcash);
                            document.Add(tabHOTsalcash);
                        }
                        document.Add(tabAddSalcash);
                        document.Add(tabOthAddSalcash);
                        document.Add(tabTotAddSalcash);
                        document.Add(tabDedSalcash);
                        document.Add(tabOthDedSalcash);
                        document.Add(tabTotDedSalcash);

                        objEntityCommon.CurrencyId = Convert.ToInt32(dt.Rows[0]["DEFLT_CURNCY_MST_ID"].ToString());
                        string strcurrenWord = objBusiness.ConvertCurrencyToWords(objEntityCommon, (mspnetcash + lspnetcash + espnetcash).ToString().Replace(",", ""));

                        string strcurrenWordbank = objBusiness.ConvertCurrencyToWords(objEntityCommon, (mspnetbank + lspnetbank + espnetbank).ToString().Replace(",", ""));

                        document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        //document.Add(new Paragraph(new Chunk(" ", FontFactory.GetFont("Tahoma,Arial", 10, Font.NORMAL, BaseColor.BLACK))));
                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        tabMSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(mspnetbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabLSPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(lspnetbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabESPnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(espnetbank, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((mspnetbank + lspnetbank + espnetbank), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase("Amount in Words", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnet.AddCell(new PdfPCell(new Phrase(strcurrenWordbank, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan - 1, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadNet.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });

                        tabMSPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(mspnetcash, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabLSPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(lspnetcash, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabESPnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round(espnetcash, roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnetcash.AddCell(new PdfPCell(new Phrase(objBusiness.AddCommasForNumberSeperation(Math.Round((mspnetcash + lspnetcash + espnetcash), roundNum).ToString("0.00"), objEntityCommon), FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnetcash.AddCell(new PdfPCell(new Phrase("Amount in Words", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabNetnetcash.AddCell(new PdfPCell(new Phrase(strcurrenWord, FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { Colspan = EmpCntcolSpan - 1, HorizontalAlignment = Element.ALIGN_LEFT, Padding = 2, BorderColor = BaseColor.GRAY });
                        tabHeadNetcash.AddCell(new PdfPCell(new Phrase("Net Total", FontFactory.GetFont("Times New Roman", 8, Font.BOLD, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_RIGHT, Padding = 2, BackgroundColor = BaseColor.LIGHT_GRAY, BorderColor = BaseColor.GRAY });
                        
                        float pos6 = writer.GetVerticalPosition(false);
                        if (pos6 < 100)
                        {
                            document.NewPage();
                        }
                        document.Add(tabHeadNet);
                        document.Add(tabMSPnet);
                        document.Add(tabLSPnet);
                        document.Add(tabESPnet);
                        document.Add(tabNetnet);
                        document.Add(tabHeadNetcash);
                        document.Add(tabMSPnetcash);
                        document.Add(tabLSPnetcash);
                        document.Add(tabESPnetcash);
                        document.Add(tabNetnetcash);



                        float pos1 = writer.GetVerticalPosition(false);
                        PdfPTable endtable = new PdfPTable(6);
                        float[] endBody = { 25, 10, 25, 10, 25, 5 };
                        endtable.SetWidths(endBody);
                        endtable.WidthPercentage = 100;
                        endtable.TotalWidth = document.PageSize.Width - 80f;

                        endtable.AddCell(new PdfPCell(new Phrase("FINANCE MANAGER", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase("GENERAL MANAGER", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase("RECEIVER’S SIGNATURE", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, BorderWidthBottom = 0, BorderWidthLeft = 0, BorderWidthRight = 0, Padding = 6 });
                        endtable.AddCell(new PdfPCell(new Phrase(" ", FontFactory.GetFont("Times New Roman", 8, BaseColor.BLACK))) { HorizontalAlignment = Element.ALIGN_CENTER, Border = 0, Padding = 6 });

                        endtable.TotalWidth = 555F;
                        if (pos1 > 90)
                        {
                            endtable.WriteSelectedRows(0, -1, 123, 65, writer.DirectContent);
                        }
                        else
                        {
                            document.NewPage();
                            endtable.WriteSelectedRows(0, -1, 123, 65, writer.DirectContent);
                        }
                    }
                    document.Close();
                    byte[] bytes = memoryStream.ToArray();
                    memoryStream.Close();
                    Response.Clear();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + strImageName);
                    Response.Buffer = true;
                    Response.Cache.SetCacheability(HttpCacheability.NoCache);
                    Response.BinaryWrite(bytes);
                    Response.End();
                    Response.Close();
                }
            }
        }

    }

}