using BL_Compzit;
using System;
using System.Data;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Text;
using CL_Compzit;
using EL_Compzit;

// CREATED BY:EVM-0001
// CREATED DATE:03/03/2016
// REVIEWED BY:
// REVIEW DATE:

public partial class Master_gen_UserRegistration_gen_UserRegistrationList : System.Web.UI.Page
{
    public string strUsrId;

    private enum APPS
    {
        APP_ADMINSTRATION = 1,
        SALES_FORCE_AUTOMATION = 2,
        AUTO_WORKSHOP_MANAGEMENT_SYSTEM = 3

    }
    private enum USERLIMITED
    {
        ISLIMITED = 1,
        NOTLIMITED = 2

    }
    protected void Page_Load(object sender, EventArgs e)
    {

        //On not is post back

        if (!IsPostBack)
        {
            cbxCnclStatus.Attributes.Add("onkeypress", "return DisableEnter(event)");
            txtCnclReason.Attributes.Add("onkeypress", "return isTag(event)");
            int intUserId = 0, intUsrRolMstrId, intEnableAdd = 0, intEnableModify = 0, intEnableCancel = 0;
            clsBusinessLayer objBusinessLayer = new clsBusinessLayer();
            clsCommonLibrary objCommon = new clsCommonLibrary();
            if (Session["USERID"] != null)
            {
                intUserId = Convert.ToInt32(Session["USERID"]);

            }
            else if (Session["USERID"] == null)
            {
                Response.Redirect("~/Default.aspx");
            }

            int intUserLimited = Convert.ToInt32(USERLIMITED.ISLIMITED), intUsrDsgnId = 0;

            clsEntityLayerDesignation objEntityDsgnation = new clsEntityLayerDesignation();
            clsBusinessLayerDesignation objBusinessLayerDsgnMaster = new clsBusinessLayerDesignation();
            DataTable dtUserDetails = new DataTable();

            objEntityDsgnation.DesignationUserId = intUserId;
            dtUserDetails = objBusinessLayerDsgnMaster.ReadIfUserLimitedByUsrId(objEntityDsgnation);
            if (dtUserDetails.Rows.Count > 0)
            {
                intUserLimited = Convert.ToInt32(dtUserDetails.Rows[0]["USR_LMTD"].ToString());
                intUsrDsgnId = Convert.ToInt32(dtUserDetails.Rows[0]["DSGN_ID"].ToString());

            }


            //Allocating child roles
            intUsrRolMstrId = Convert.ToInt32(clsCommonLibrary.USR_ROLE_MSTR.User_Registration);
            DataTable dtChildRol = objBusinessLayer.LoadChildRoleDefnDetail(intUserId, intUsrRolMstrId);

            if (dtChildRol.Rows.Count > 0)
            {
                string strChildRolDeftn = dtChildRol.Rows[0]["USRROL_CHLDRL_DEFN"].ToString();

                string[] strChildDefArrWords = strChildRolDeftn.Split('-');
                foreach (string strC_Role in strChildDefArrWords)
                {
                    if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Add).ToString())
                    {
                        intEnableAdd = Convert.ToInt32(clsCommonLibrary.StatusAll.Active);
                    }
                    else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Modify).ToString())
                    {
                        intEnableModify = Convert.ToInt32(clsCommonLibrary.StatusAll.Active);
                    }
                    else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Cancel).ToString())
                    {
                        intEnableCancel = Convert.ToInt32(clsCommonLibrary.StatusAll.Active);

                    }
                    else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Find).ToString())
                    {
                        //future

                    }
                    else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Rate_Updation).ToString())
                    {
                        //future

                    }
                    else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Confirm).ToString())
                    {
                        //future

                    }

                }

                if (intEnableAdd == Convert.ToInt32(clsCommonLibrary.StatusAll.Active))
                {
                    divAdd.Visible = true;

                }
                else
                {

                    divAdd.Visible = false;

                }


                //Creating object for business layer and data table
                clsBusinessLayerUserRegisteration objBusinessLayerUsrReg = new clsBusinessLayerUserRegisteration();
                clsEntityLayerUserRegistration objEntityUserRegistration = new clsEntityLayerUserRegistration();

                hiddenDsgnTypId.Value = "0";
                hiddenDsgnControlId.Value = "C";
                if (Session["DSGN_TYPID"] != null)
                {
                    hiddenDsgnTypId.Value = Session["DSGN_TYPID"].ToString();
                }
                else
                {
                    Response.Redirect("~/Default.aspx");
                }
                if (Session["ORGID"] != null)
                {
                    objEntityUserRegistration.UserOrgId = Convert.ToInt32(Session["ORGID"].ToString());

                }
                else if (Session["ORGID"] == null)
                {
                    Response.Redirect("~/Default.aspx");
                }
                if (Session["DSGN_CONTROL"] != null)
                {
                    hiddenDsgnControlId.Value = Session["DSGN_CONTROL"].ToString();
                }
                else
                {
                    Response.Redirect("~/Default.aspx");
                }
                if (hiddenDsgnControlId.Value == "C" || hiddenDsgnControlId.Value == "c")
                {

                    if (Session["CORPOFFICEID"] != null)
                    {

                        objEntityUserRegistration.UserCrprtId = Convert.ToInt32(Session["CORPOFFICEID"].ToString());

                    }
                    else if (Session["CORPOFFICEID"] == null)
                    {
                        Response.Redirect("~/Default.aspx");
                    }
                }
                objEntityUserRegistration.LimitedUser = intUserLimited;
                objEntityUserRegistration.UserDsgnId = intUsrDsgnId;
                if (Request.QueryString["Srch"] != null && Request.QueryString["Srch"] != "")
                {
                    string strHidden = Request.QueryString["Srch"].ToString();
                    hiddenSearchField.Value = strHidden;

                    string[] strSearchFields = strHidden.Split('_');

                    string strddlStatus = strSearchFields[0];
                    string strCbxShowCancel = strSearchFields[1];





                    if (strddlStatus != null && strddlStatus != "")
                    {
                        if (ddlStatus.Items.FindByValue(strddlStatus) != null)
                        {
                            ddlStatus.Items.FindByValue(strddlStatus).Selected = true;
                        }
                    }
                    if (strCbxShowCancel == "1")
                    {
                        cbxCnclStatus.Checked = true;
                    }
                    else
                    {
                        cbxCnclStatus.Checked = false;
                    }

                }




                if (Request.QueryString["Id"] != null)
                {//when Canceled

                    string strRandomMixedId = Request.QueryString["Id"].ToString();
                    string strLenghtofId = strRandomMixedId.Substring(0, 2);
                    int intLenghtofId = Convert.ToInt16(strLenghtofId);
                    string strId = strRandomMixedId.Substring(2, intLenghtofId);

                    objEntityUserRegistration.UsrRegistrationId = Convert.ToInt32(strId);
                    objEntityUserRegistration.UserId = intUserId;

                    objEntityUserRegistration.UserDate = System.DateTime.Now;

                    if (hiddenDsgnControlId.Value == "C" || hiddenDsgnControlId.Value == "c")
                    {
                        int intCorpId = 0;

                        intCorpId = objEntityUserRegistration.UserCrprtId;



                        clsCommonLibrary.CORP_GLOBAL[] arrEnumer = {  clsCommonLibrary.CORP_GLOBAL.CNCL_REASN_MUST
                                                              };
                        DataTable dtCorpDetail = new DataTable();
                        dtCorpDetail = objBusinessLayer.LoadGlobalDetail(arrEnumer, intCorpId);
                        if (dtCorpDetail.Rows.Count > 0)
                        {
                            string CnclrsnMust = dtCorpDetail.Rows[0]["CNCL_REASN_MUST"].ToString();
                            if (CnclrsnMust == "0")
                            {
                                objEntityUserRegistration.UserCancelReason = objCommon.CancelReason();
                                objBusinessLayerUsrReg.UpdateUsrCancel(objEntityUserRegistration);
                                if (hiddenSearchField.Value == "")
                                {
                                    Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl");
                                }
                                else
                                {
                                    Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl&Srch=" + this.hiddenSearchField.Value);

                                }

                            }
                            else
                            {

                                DataTable dtUser = new DataTable();
                                if (hiddenSearchField.Value == "")
                                {
                                    objEntityUserRegistration.UserStatus = 1;
                                    objEntityUserRegistration.Cancel_Status = 0;


                                }
                                else
                                {
                                    string strHidden = hiddenSearchField.Value;

                                    string[] strSearchFields = strHidden.Split('_');

                                    string strddlStatus = strSearchFields[0];
                                    string strCbxShowCancel = strSearchFields[1];

                                    objEntityUserRegistration.UserStatus = Convert.ToInt32(strddlStatus);
                                    objEntityUserRegistration.Cancel_Status = Convert.ToInt32(strCbxShowCancel);

                                }
                                dtUser = objBusinessLayerUsrReg.GridDisplay(objEntityUserRegistration);

                                string strHtm = "";
                               

                                strHtm = ConvertDataTableToHTML(dtUser, intEnableModify, intEnableCancel, intUserId);
                               
                                //Write to divReport
                                divReport.InnerHtml = strHtm;
                                hiddenCancelPrimaryId.Value = strId;
                                //    ScriptManager.RegisterStartupScript(this, GetType(), "OpenCancelView", "OpenCancelView("+strId+");", true);
                                //  ModalPopupExtenderCncl.Show();

                            }

                        }

                    }
                    else
                    {
                        objEntityUserRegistration.UserCancelReason = objCommon.CancelReason();
                        objBusinessLayerUsrReg.UpdateUsrCancel(objEntityUserRegistration);
                        if (hiddenSearchField.Value == "")
                        {
                            Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl");
                        }
                        else
                        {
                            Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl&Srch=" + this.hiddenSearchField.Value);

                        }

                    }
                }
                else
                {

                    if (hiddenSearchField.Value == "")
                    {
                        objEntityUserRegistration.UserStatus = 1;
                        objEntityUserRegistration.Cancel_Status = 0;


                    }
                    else
                    {
                        string strHidden = hiddenSearchField.Value;

                        string[] strSearchFields = strHidden.Split('_');

                        string strddlStatus = strSearchFields[0];
                        string strCbxShowCancel = strSearchFields[1];

                        objEntityUserRegistration.UserStatus = Convert.ToInt32(strddlStatus);
                        objEntityUserRegistration.Cancel_Status = Convert.ToInt32(strCbxShowCancel);

                    }

                    DataTable dtUser = new DataTable();
                    dtUser = objBusinessLayerUsrReg.GridDisplay(objEntityUserRegistration);

                    string strHtm = "";
                 

                        strHtm = ConvertDataTableToHTML(dtUser, intEnableModify, intEnableCancel, intUserId);
                    
                    //Write to divReport
                    divReport.InnerHtml = strHtm;

                    if (Request.QueryString["InsUpd"] != null)
                    {
                        string strInsUpd = Request.QueryString["InsUpd"].ToString();
                        if (strInsUpd == "Ins")
                        {
                            ScriptManager.RegisterStartupScript(this, GetType(), "SuccessConfirmation", "SuccessConfirmation();", true);
                        }
                        else if (strInsUpd == "Upd")
                        {
                            ScriptManager.RegisterStartupScript(this, GetType(), "SuccessUpdation", "SuccessUpdation();", true);
                        }
                        //code 005 start
                        else if (strInsUpd == "Ipsd")
                        {
                            ScriptManager.RegisterStartupScript(this, GetType(), "MailsendFail", "MailsendFail();", true);
                        }
                        else if (strInsUpd == "IpRMSsd")
                        {
                            ScriptManager.RegisterStartupScript(this, GetType(), "MailsendFailReviewMailStng", "MailsendFailReviewMailStng();", true);
                        }
                        else if (strInsUpd == "Cncl")
                        {
                            ScriptManager.RegisterStartupScript(this, GetType(), "SuccessCancelation", "SuccessCancelation();", true);
                        }

                    }
                }

            }
            else
            {

                divAdd.Visible = false;
            }

        }
    }


    //It build the Html table by using the datatable provided
    public string ConvertDataTableToHTML(DataTable dt, int intEnableModify, int intEnableCancel, int intUserId)
    {

      

        clsCommonLibrary objCommon = new clsCommonLibrary();
        string strRandom = objCommon.Random_Number();

        // class="table table-bordered table-striped"
        StringBuilder sb = new StringBuilder();
        string strHtml = "<table id=\"ReportTable\" class=\"main_table\" cellspacing=\"0\" cellpadding=\"2px\" >";
        //add header row
        strHtml += "<thead>";
        strHtml += "<tr class=\"main_table_head\">";
        strHtml += "<th class=\"thT\" style=\"width:4%; word-wrap:break-word;text-align: center;\"> </th>";
        for (int intColumnHeaderCount = 0; intColumnHeaderCount < dt.Columns.Count; intColumnHeaderCount++)
        {
            //if (i == 0)
            //{
            //    html += "<th style=\"width:6%; word-wrap:break-word;\">" + dt.Columns[i].ColumnName + "</th>";
            //}
            if (intColumnHeaderCount == 1)
            {
                strHtml += "<th class=\"thT\" style=\"width:30%;text-align: left; word-wrap:break-word;\">" + dt.Columns[intColumnHeaderCount].ColumnName + "</th>";
            }
            if (intColumnHeaderCount == 2)
            {
                strHtml += "<th class=\"thT\" style=\"width:30%;text-align: left; word-wrap:break-word;\">" + dt.Columns[intColumnHeaderCount].ColumnName + "</th>";
            }
            else if (intColumnHeaderCount == 3)
            {
                strHtml += "<th class=\"thT\"  style=\"width:22%;text-align: left; word-wrap:break-word;\">" + dt.Columns[intColumnHeaderCount].ColumnName + "</th>";
            }

            else if (intColumnHeaderCount == 4)
            {
                strHtml += "<th class=\"thT\"  style=\"width:10%;text-align: center; word-wrap:break-word;\">" + dt.Columns[intColumnHeaderCount].ColumnName + "</th>";
            }


        }

        if (intEnableModify == Convert.ToInt32(clsCommonLibrary.StatusAll.Active))
        {
            strHtml += "<th class=\"thT\" style=\"width:4%; word-wrap:break-word;text-align: center;\"> </th>";
        }
        if (intEnableCancel == Convert.ToInt32(clsCommonLibrary.StatusAll.Active))
        {
            strHtml += "<th class=\"thT\" style=\"width:4%; word-wrap:break-word;text-align: center;\"> </th>";
        }




        strHtml += "</tr>";
        strHtml += "</thead>";
        //add rows

        strHtml += "<tbody>";
        for (int intRowBodyCount = 0; intRowBodyCount < dt.Rows.Count; intRowBodyCount++)
        {
          

               int intCnclUsrId = Convert.ToInt32(dt.Rows[intRowBodyCount]["CANCEL USER ID"].ToString());
                int intCancTransaction = Convert.ToInt32(dt.Rows[intRowBodyCount]["COUNT_TRANSACTION"].ToString());

                strHtml += "<tr  >";

                //FOR CANCELED COLUMN IDENTIFICATION ICON
                if (intCnclUsrId == 0)
                {
                    strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\"></td>";
                }
                else
                {
                    strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" +
                             "<img   src='../../Images/Icons/cancel.png' /> " + " </td>";
                }

                for (int intColumnBodyCount = 0; intColumnBodyCount < dt.Columns.Count; intColumnBodyCount++)
                {
                    //if (j == 0)
                    //{
                    //    int intCnt = i + 1;
                    //    html += "<td class=\"rowHeight\" style=\"width:6%; word-wrap:break-word;\">" + intCnt + "</td>";
                    //}
                    if (intColumnBodyCount == 1)
                    {
                        strHtml += "<td class=\"tdT\" style=\" width:30%;word-break: break-all; word-wrap:break-word;text-align: left;\" >" + dt.Rows[intRowBodyCount][intColumnBodyCount].ToString() + "</td>";
                    }
                    if (intColumnBodyCount == 2)
                    {
                        strHtml += "<td class=\"tdT\" style=\" width:30%;word-break: break-all; word-wrap:break-word;text-align: left;\"  >" + dt.Rows[intRowBodyCount][intColumnBodyCount].ToString() + "</td>";
                    }
                    else if (intColumnBodyCount == 3)
                    {
                        strHtml += "<td class=\"tdT\" style=\" width:22%;word-break: break-all; word-wrap:break-word;text-align: left;\"  >" + dt.Rows[intRowBodyCount][intColumnBodyCount].ToString() + "</td>";
                    }
                    else if (intColumnBodyCount == 4)
                    {
                        strHtml += "<td class=\"tdT\" style=\" width:10%;word-break: break-all; word-wrap:break-word;text-align: center;\"  >" + dt.Rows[intRowBodyCount][intColumnBodyCount].ToString() + "</td>";
                    }
                }


                string strId = dt.Rows[intRowBodyCount][0].ToString();
                int intIdLength = dt.Rows[intRowBodyCount][0].ToString().Length;
                string stridLength = intIdLength.ToString("00");
                string Id = stridLength + strId + strRandom;



                if (intEnableModify == Convert.ToInt32(clsCommonLibrary.StatusAll.Active))
                {
                    if (intCnclUsrId == 0)
                    {
                        strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" + " <a   onclick='return getdetails(this.href);' " +
                              " href=\"gen_UserRegistration.aspx?Id=" + Id + "\">" + "<img  style=\"\" src='../../Images/Icons/edit.png' /> " + "</a> </td>";
                    }
                    else
                    {

                        strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" + " <a   onclick='return getdetails(this.href);' " +
                                " href=\"gen_UserRegistration.aspx?ViewId=" + Id + "\">" + "<img  style=\"\" src='../../Images/Icons/view.png' /> " + "</a> </td>";
                    }
                }

                if (intEnableCancel == Convert.ToInt32(clsCommonLibrary.StatusAll.Active))
                {

                    if (intCnclUsrId == 0)
                    {


                        if (intCancTransaction == 0)
                        {
                            if (hiddenSearchField.Value == "")
                            {
                                strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" + " <a   onclick='return CancelAlert(this.href);' " +
                                 " href=\"gen_UserRegistrationList.aspx?Id=" + Id + "\">" + "<img  src='../../Images/Icons/delete.png' /> " + "</a> </td>";
                            }
                            else
                            {

                                strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" + " <a   onclick='return CancelAlert(this.href);' " +
                                    " href=\"gen_UserRegistrationList.aspx?Id=" + Id + "&Srch=" + this.hiddenSearchField.Value + "\">" + "<img  src='../../Images/Icons/delete.png' /> " + "</a> </td>";
                            }
                        }
                        else
                        {

                            strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\">" + " <a   onclick='return CancelNotPossible();' >" +
                                    "<img style=\"opacity: 0.2;cursor: pointer; \" src='../../Images/Icons/delete.png' /> " + "</a> </td>";

                        }


                    }

                    else
                    {

                        strHtml += "<td class=\"tdT\" style=\"width:4%; word-wrap:break-word;text-align: center;\"></td>";
                    }

                }

                strHtml += "</tr>";
            
        }

        strHtml += "</tbody>";

        strHtml += "</table>";

        sb.Append(strHtml);
        return sb.ToString();
    }
    //for creating HTML Title
    private string SetTitle(string size, string value)
    {

        return "<h" + size + "><p align=center>" + value + "</p align></h" + size + ">";

    }

    protected void btnRsnSave_Click(object sender, EventArgs e)
    {

        //Created objects for business layer
        clsBusinessLayerUserRegisteration objBusinessLayerUsrReg = new clsBusinessLayerUserRegisteration();
        clsEntityLayerUserRegistration objEntityUserRegistration = new clsEntityLayerUserRegistration();

        if (hiddenCancelPrimaryId.Value != null && hiddenCancelPrimaryId.Value != "")
        {
            objEntityUserRegistration.UsrRegistrationId = Convert.ToInt32(hiddenCancelPrimaryId.Value);


            if (Session["USERID"] != null)
            {
                objEntityUserRegistration.UserId = Convert.ToInt32(Session["USERID"]);

            }
            else if (Session["USERID"] == null)
            {
                Response.Redirect("~/Default.aspx");
            }

            objEntityUserRegistration.UserDate = System.DateTime.Now;

            objEntityUserRegistration.UserCancelReason = txtCnclReason.Text.Trim();
            objBusinessLayerUsrReg.UpdateUsrCancel(objEntityUserRegistration);


            if (hiddenSearchField.Value == "")
            {
                Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl");
            }
            else
            {
                Response.Redirect("gen_UserRegistrationList.aspx?InsUpd=Cncl&Srch=" + this.hiddenSearchField.Value);

            }


        }
    }

    protected void btnSearch_Click(object sender, EventArgs e)
    {


        int intUserId = 0, intUsrRolMstrId, intEnableModify = 0, intEnableCancel = 0;
        clsBusinessLayer objBusinessLayer = new clsBusinessLayer();
        clsCommonLibrary objCommon = new clsCommonLibrary();
        if (Session["USERID"] != null)
        {
            intUserId = Convert.ToInt32(Session["USERID"]);

        }
        else if (Session["USERID"] == null)
        {
            Response.Redirect("~/Default.aspx");
        }
        //Allocating child roles
        intUsrRolMstrId = Convert.ToInt32(clsCommonLibrary.USR_ROLE_MSTR.User_Registration);
        DataTable dtChildRol = objBusinessLayer.LoadChildRoleDefnDetail(intUserId, intUsrRolMstrId);

        if (dtChildRol.Rows.Count > 0)
        {
            string strChildRolDeftn = dtChildRol.Rows[0]["USRROL_CHLDRL_DEFN"].ToString();

            string[] strChildDefArrWords = strChildRolDeftn.Split('-');
            foreach (string strC_Role in strChildDefArrWords)
            {
                if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Modify).ToString())
                {
                    intEnableModify = Convert.ToInt32(clsCommonLibrary.StatusAll.Active);
                }
                else if (strC_Role == Convert.ToInt16(clsCommonLibrary.ChildRole.Cancel).ToString())
                {
                    intEnableCancel = Convert.ToInt32(clsCommonLibrary.StatusAll.Active);

                }
            }



            clsBusinessLayerUserRegisteration objBusinessLayerUsrReg = new clsBusinessLayerUserRegisteration();
            clsEntityLayerUserRegistration objEntityUserRegistration = new clsEntityLayerUserRegistration();

            int intUserLimited = Convert.ToInt32(USERLIMITED.ISLIMITED), intUsrDsgnId = 0;

            clsEntityLayerDesignation objEntityDsgnation = new clsEntityLayerDesignation();
            clsBusinessLayerDesignation objBusinessLayerDsgnMaster = new clsBusinessLayerDesignation();
            DataTable dtUserDetails = new DataTable();

            objEntityDsgnation.DesignationUserId = intUserId;
            dtUserDetails = objBusinessLayerDsgnMaster.ReadIfUserLimitedByUsrId(objEntityDsgnation);
            if (dtUserDetails.Rows.Count > 0)
            {
                intUserLimited = Convert.ToInt32(dtUserDetails.Rows[0]["USR_LMTD"].ToString());
                intUsrDsgnId = Convert.ToInt32(dtUserDetails.Rows[0]["DSGN_ID"].ToString());

            }
            objEntityUserRegistration.LimitedUser = intUserLimited;
            objEntityUserRegistration.UserDsgnId = intUsrDsgnId;

            objEntityUserRegistration.UserStatus = Convert.ToInt32(ddlStatus.SelectedItem.Value);
            if (cbxCnclStatus.Checked == true)
            {
                objEntityUserRegistration.Cancel_Status = 1;
            }
            else
            {
                objEntityUserRegistration.Cancel_Status = 0;
            }

            hiddenDsgnTypId.Value = "0";
            hiddenDsgnControlId.Value = "C";
            if (Session["DSGN_TYPID"] != null)
            {
                hiddenDsgnTypId.Value = Session["DSGN_TYPID"].ToString();
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }
            if (Session["ORGID"] != null)
            {
                objEntityUserRegistration.UserOrgId = Convert.ToInt32(Session["ORGID"].ToString());

            }
            else if (Session["ORGID"] == null)
            {
                Response.Redirect("~/Default.aspx");
            }
            if (Session["DSGN_CONTROL"] != null)
            {
                hiddenDsgnControlId.Value = Session["DSGN_CONTROL"].ToString();
            }
            else
            {
                Response.Redirect("~/Default.aspx");
            }
            if (hiddenDsgnControlId.Value == "C" || hiddenDsgnControlId.Value == "c")
            {

                if (Session["CORPOFFICEID"] != null)
                {

                    objEntityUserRegistration.UserCrprtId = Convert.ToInt32(Session["CORPOFFICEID"].ToString());

                }
                else if (Session["CORPOFFICEID"] == null)
                {
                    Response.Redirect("~/Default.aspx");
                }
            }


            DataTable dtUser = new DataTable();
            dtUser = objBusinessLayerUsrReg.GridDisplay(objEntityUserRegistration);


            string strHtm = "";
           
             strHtm = ConvertDataTableToHTML(dtUser, intEnableModify, intEnableCancel, intUserId);
            
            //Write to divReport
            divReport.InnerHtml = strHtm;
        }
    }
}